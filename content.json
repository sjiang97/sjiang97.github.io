{"meta":{"title":"Shaokang's Blog","subtitle":null,"description":null,"author":"Shaokang Jiang","url":"https://shaokang.ga","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-06-10T07:19:44.958Z","updated":"2019-06-10T07:19:44.958Z","comments":true,"path":"404.html","permalink":"https://shaokang.ga/404.html","excerpt":"","text":"404 Not Found *Page not found*"},{"title":"All category","date":"2019-06-10T07:17:25.162Z","updated":"2019-06-10T07:17:25.162Z","comments":true,"path":"categories/index.html","permalink":"https://shaokang.ga/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-06-14T00:21:51.384Z","updated":"2019-06-14T00:21:51.324Z","comments":true,"path":"css/table.css","permalink":"https://shaokang.ga/css/table.css","excerpt":"","text":"table, th, td { border: none; } table { width: 100%; display: table; border-collapse: collapse; border-spacing: 0; font-family: Menlo,Monaco,courier,monospace,\"Lucida Console\",'Source Code Pro',\"Microsoft YaHei\",Helvetica,Arial,sans-serif,'Ubuntu'; } table.striped tr { border-bottom: none; } table.striped > tbody > tr:nth-child(odd) { background-color: rgba(242, 242, 242, 0.5); } table.striped > tbody > tr > td { border-radius: 0; } table.highlight1 > tbody > tr { -webkit-transition: background-color .25s ease; transition: background-color .25s ease; } table.highlight1 > tbody > tr:hover { background-color: rgba(242, 242, 242, 0.5); } table.centered thead tr th, table.centered tbody tr td { text-align: center; } tr { border-bottom: 1px solid rgba(0, 0, 0, 0.12); } td, th { padding: 15px 5px; display: table-cell; text-align: left; vertical-align: middle; border-radius: 2px; } @media only screen and (max-width: 992px) { table.responsive-table { width: 100%; border-collapse: collapse; border-spacing: 0; display: block; position: relative; /* sort out borders */ } table.responsive-table td:empty:before { content: '\\00a0'; } table.responsive-table th, table.responsive-table td { margin: 0; vertical-align: top; } table.responsive-table th { text-align: left; } table.responsive-table thead { display: block; float: left; } table.responsive-table thead tr { display: block; padding: 0 10px 0 0; } table.responsive-table thead tr th::before { content: \"\\00a0\"; } table.responsive-table tbody { display: block; width: auto; position: relative; overflow-x: auto; white-space: nowrap; } table.responsive-table tbody tr { display: inline-block; vertical-align: top; } table.responsive-table th { display: block; text-align: right; } table.responsive-table td { display: block; min-height: 1.25em; text-align: left; } table.responsive-table tr { border-bottom: none; padding: 0 10px; } table.responsive-table thead { border: 0; border-right: 1px solid rgba(0, 0, 0, 0.12); } }"},{"title":"","date":"2019-06-11T00:08:36.830Z","updated":"2019-04-27T04:08:33.616Z","comments":true,"path":"js/qunit.css","permalink":"https://shaokang.ga/js/qunit.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ol#qunit-tests { font-family:\"Helvetica Neue Light\", \"HelveticaNeue-Light\", \"Helvetica Neue\", Calibri, Helvetica, Arial; margin:0; padding:0; list-style-position:inside; font-size: smaller; } ol#qunit-tests li{ padding:0.4em 0.5em 0.4em 2.5em; border-bottom:1px solid #fff; font-size:small; list-style-position:inside; } ol#qunit-tests li ol{ box-shadow: inset 0px 2px 13px #999; -moz-box-shadow: inset 0px 2px 13px #999; -webkit-box-shadow: inset 0px 2px 13px #999; margin-top:0.5em; margin-left:0; padding:0.5em; background-color:#fff; border-radius:15px; -moz-border-radius: 15px; -webkit-border-radius: 15px; } ol#qunit-tests li li{ border-bottom:none; margin:0.5em; background-color:#fff; list-style-position: inside; padding:0.4em 0.5em 0.4em 0.5em; } ol#qunit-tests li li.pass{ border-left:26px solid #C6E746; background-color:#fff; color:#5E740B; } ol#qunit-tests li li.fail{ border-left:26px solid #EE5757; background-color:#fff; color:#710909; } ol#qunit-tests li.pass{ background-color:#D2E0E6; color:#528CE0; } ol#qunit-tests li.fail{ background-color:#EE5757; color:#000; } ol#qunit-tests li strong { cursor:pointer; } h1#qunit-header{ background-color:#0d3349; margin:0; padding:0.5em 0 0.5em 1em; color:#fff; font-family:\"Helvetica Neue Light\", \"HelveticaNeue-Light\", \"Helvetica Neue\", Calibri, Helvetica, Arial; border-top-right-radius:15px; border-top-left-radius:15px; -moz-border-radius-topright:15px; -moz-border-radius-topleft:15px; -webkit-border-top-right-radius:15px; -webkit-border-top-left-radius:15px; text-shadow: rgba(0, 0, 0, 0.5) 4px 4px 1px; } h2#qunit-banner{ font-family:\"Helvetica Neue Light\", \"HelveticaNeue-Light\", \"Helvetica Neue\", Calibri, Helvetica, Arial; height:5px; margin:0; padding:0; } h2#qunit-banner.qunit-pass{ background-color:#C6E746; } h2#qunit-banner.qunit-fail, #qunit-testrunner-toolbar { background-color:#EE5757; } #qunit-testrunner-toolbar { font-family:\"Helvetica Neue Light\", \"HelveticaNeue-Light\", \"Helvetica Neue\", Calibri, Helvetica, Arial; padding:0; /*width:80%;*/ padding:0em 0 0.5em 2em; font-size: small; } h2#qunit-userAgent { font-family:\"Helvetica Neue Light\", \"HelveticaNeue-Light\", \"Helvetica Neue\", Calibri, Helvetica, Arial; background-color:#2b81af; margin:0; padding:0; color:#fff; font-size: small; padding:0.5em 0 0.5em 2.5em; text-shadow: rgba(0, 0, 0, 0.5) 2px 2px 1px; } p#qunit-testresult{ font-family:\"Helvetica Neue Light\", \"HelveticaNeue-Light\", \"Helvetica Neue\", Calibri, Helvetica, Arial; margin:0; font-size: small; color:#2b81af; border-bottom-right-radius:15px; border-bottom-left-radius:15px; -moz-border-radius-bottomright:15px; -moz-border-radius-bottomleft:15px; -webkit-border-bottom-right-radius:15px; -webkit-border-bottom-left-radius:15px; background-color:#D2E0E6; padding:0.5em 0.5em 0.5em 2.5em; } strong b.fail{ color:#710909; } strong b.pass{ color:#5E740B; }"},{"title":"","date":"2019-06-13T13:56:42.818Z","updated":"2019-06-13T13:56:42.818Z","comments":true,"path":"projects/index.html","permalink":"https://shaokang.ga/projects/index.html","excerpt":"","text":""},{"title":"","date":"2019-06-11T00:08:45.130Z","updated":"2019-04-27T04:08:33.634Z","comments":true,"path":"scripts/shAutoloader.js","permalink":"https://shaokang.ga/scripts/shAutoloader.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ eval(function(p,a,c,k,e,d){e=function(c){return(c35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('(2(){1 h=5;h.I=2(){2 n(c,a){4(1 d=0;d"},{"title":"","date":"2019-10-27T19:50:06.062Z","updated":"2019-10-27T18:47:24.609Z","comments":true,"path":"js/USA.js","permalink":"https://shaokang.ga/js/USA.js","excerpt":"","text":"(function (root, factory) {if (typeof define === 'function' && define.amd) {define(['exports', 'echarts'], factory);} else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {factory(exports, require('echarts'));} else {factory({}, root.echarts);}}(this, function (exports, echarts) {var log = function (msg) {if (typeof console !== 'undefined') {console && console.error && console.error(msg);}};if (!echarts) {log('ECharts is not Loaded');return;}if (!echarts.registerMap) {log('ECharts Map is not loaded');return;}echarts.registerMap('USA', {\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"id\":\"01\",\"properties\":{\"name\":\"Alabama\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ไaƨܡȸ੝ĬɻĠƅĉĬ¹ƛŁLŁóƛĊʩÑəĠɯбKᄑ@ōȌǇƏÜçŭůŗɃƐwȸÝxýƻƱɍ¤Ý౺ȘུŢऄēĔ܀L\"],\"encodeOffsets\":[[-89455,35842]]}},{\"type\":\"Feature\",\"id\":\"02\",\"properties\":{\"name\":\"Alaska\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƒǴĉƛɏlè\"],[\"@@ƾĵēƥéº@Ȣ\"],[\"@@ȮlĖŭǵǇþþĖ\"],[\"@@ζĠǉζǳŮōXğĔmbšƦţnŁĬ¤ĉl͛ÏóɻbÝǔĉaǝŮ»£ƛ¤xŭƆĔ¯£ǝǉlʑɐçŌbŘȗU@ĖƨVƦþÛƒǩɚÛŎţý¯ŮŮÒĵƜÒ\"],[\"@@ǈÅŎèŌŗůǵēł\"],[\"@@ţĊƐÆҘýȬJƜƻˀŻĩƏ»ȋxƅÑǿȭ£ȢlźƱLô\"],[\"@@ŗÜůƒałĸºł¹xĔͨƱƥŗmóǓĊ¯ķȕŹ¤kţĉÒ»ɼƨŎ\"],[\"@@īŗÆ̹ώȡŌèĖÿɄəǞɦǔĶçȤÅǴULƅǪѩ@ϋ\"],[\"@@˸ÛǔVUÝʈɯǓ¥ýǶţÆɃǵÇÏñ̃ƱēJǊÒĪƜĵǪlĠÛɦōĬǔȬƽ\"],[\"@@Ť@ŰƱÇŁȋwǔŘ\"],[\"@@ʪIǔôʆķŹŋ²¥ŢŰ̄¥ǈğğǓôaĪəəХǴbǿŹóƱġŘǩþƃǈǟôVƆŚ°ŘĈ»\"],[\"@@ΟɃĉ˵ÅÐź̰ƄȘƨłÑ\"],[\"@@¯ǩţǵǓÒƒȸȖĖ\"],[\"@@ĖѪɰx͆@ΊȬlȤçΪýӚmƆ°͐ƐÒΖVK£ȸxєÝ̂Ł˖»Ò¯ʞUɼý°»Ɯ¦Ǫ@䫿ϺçºôШŁʒƆԜbğɥźÿ̄ñÜţࡦѵƆ˫ƲĀςƄȸLĬĶUƲƦ@ƆˀϸŘϤȡšĠţɐ˖ǵm¹ŰīΈō֘әĊŹǪŹʶ˵ʴʓīĵˊÛƥɎÑǟɎVвǩʴƆĉźwĉ˖wĊĵůȋnƽŤʳġÝȫɻ̍ǝĉĔōýǪxôğĔȖĠÅȗřŁôţ£ΓȀŤȮəçUķǩĀĪŢłłǓēǓȌķÛƾǈĶƾ@¯ŮĊǊŹKˋƐȉǔѵŤVͲƛ¦ƐƧɍȀÑĬύХʞǩ׆ĉƅţǔɯ£ŌȋwŭǇŹƒǟxʅJȢƥǔƅ»ՉǪ¯¹̂ÇɦƏĖIōŚŹ̃óǝ°KŗəĖóÜƏ@ϣǔ˫ƦĖƽźѝĠʇĬлŎˡłxŘĀĠôğǔŘĠÅ¤ȹǩѝŗԧ¤ѝłmĊȫkɏÒәÆ˫Lؿ¯ɥ˷ŤΟÈŋò¥ŰʑWĉŋѝƦçÞѿţɏƛğƆĠôźmшĬÅôȡÿĬǿ`ǿʔéÑʳĉēÿ͑aĕɍwķôƼğIƥǓȬÅnţŮŹóƑǇ°¯çƾĔȁɣůȡ¹ĵ¤ʿIVèŭ¯çĕōþƏŋÒ»ȗÛǩWçēȋÿŹƛğŗLʇȋʳaĉÒƽķ͏ĀôƜɄºƐU¤ÆʞŎVĠ͛ŭ˕ò¼ƐɄɼƲŰèxƄţƨ̂ÆւɄƆĉǠwʨĖ˫ŘōĔəUƽ¦¯ʽÑţŗʿ˕ƅēȹ¯¯īƥÑçǟ˷ŋƐĕŗŹˉwwǓʝÑÿêŭŻƧIğ͛ÇÝʧώa̎çĊĉţƅȡĉȁIkóţÆğŭƏˉŹƱ@Ƨ¯ƛVŋ»çȹ£ĵƛÞƽȣʽblŁƻō¯@ƛǩə˫ɱĵÇƥĀʝɃçÒƏmţƙ¯ǟnƅţɼʧˉܫĕȭɻ»¼ƦƛxǳÅÑ˫īţŋþóğǓÒ̭ƛɱLŌĵłğēVğ̯˭ŁêŁɃlǔŹ¯ÑŘóÅŗǟÑŹźƽV¹Ƽó˵ţȖLÇǇ¦ɏōлLȹókÅʇÝǩxÑƾǪ¼ƆȌǪJϘṲ̋JŘšĖĔmĸǬ°Ȍ@ʨɚˬȢςǪўþǶǪº°ñīĉłÝĶɐXÒÝƆwJþəêm°ƨɎȢŰˊŢшł̰ƴƨÇŢx¹ĬĠɼȘ͐ŮʴǔaĠȺٺ͐ǪƐޝȡʑxÑĊƏ¯Ġů¥ýƙƆǵǉýƙˡ˸ȋƜī@ÛŁĉmůĖƱbçƜ҉ǉЛŗÛͅīƽĔƜĸ»ʆŁʪɄłǩɄƱŤţǪǳò¯ƱɏΉīЯ£ɥVȗ¼wƄǓ¦ʽȀɛʳȮǪĠǠƃmłÞĔǟĀkĉȹƜǉlēĬJŤǇÇŚȢǉź˸X@ƼèłՊʹŎĶþk¯ƚȮʔǪĬ͜¤ʪ£ΞƧɲl͆Ɯ͜ɐǔx¤ÅІ@Δ°̺ɦ@ÆƻɄmŮʑƆğŘʞɼĬbĠ̥ǞɣƃɃxȣóɣkÇ»ʳóýŭŹ»ÑƦƽŋŗÝǼĊקKчğǇaΉÆٷÞǝ¼ÿĊÒŘɻĬ°łƨÆ¯Ɔɻ@ȗϗȡẹ̀èĖӄŘײȘмŘʈÝʒ_ÆĠƥbaþאźڄĬΠVȘķƑĩñéŮŋɰl̄kͲxĬ¥ɚUȘ¦ʨ¯ʒȀǪVŤÒłͱ¼͑£ƐʧƦ˟°ĉƆɎˢƃ»ŁƆĉ̂īèĶͧƆƜʈŗ¤͛»ͳb¹¦ǟ¥۳ĸaŀɃɾǝĔ˕ôցȮʩþʧlϗƒρþkˠ¤ŰźVʴݚkࣖÒɼ°όźΠȢôȢƲǠ̺ƚƆłϮǠÒ¯͐aҸĖ̎Ġ۴˸ˌ`£˖ˌUԾԨŮԞʴȸÈ±޾ŁÜñ˓īůKLŹЄ¦xèǶÜÒƄƦϺƅÛĵʒƜÑɄĬόLɄլˠƃȡԐ»»ӰēL¤ΠÈ;KL¯ȢKȸÞ;Vʈ͜çƲbɐīŮȮƦÑ\"],[\"@@K́ÈȸɎȌnźȢƜǩŤÒɰī@ƅͱkƧÑʅ\"],[\"@@ʆŎɍxKĬǶÜź¯līôÞLƜƼÝĠƐÅǔ@ź¼Ʉĕ@ʑˊlǩǇ͏ÞŢŁğĕǓ¤IǑʩ¯ĉéƻÞǓǩŹmƏý»ȌȗĵUÐǩÒaǠǝèĪȢʹŰȸWnğ\"],[\"@@ǩǝÇɲƜ\"],[\"@@ƆU¯ǫəxÒǞĸ\"],[\"@@»ǵʳƧŮɦĖwĬŰ\"],[\"@@Ƽ@IğƽĵƏèĕÝ¹ƾ°¼ɼm\"],[\"@@lóĩ¯óĀƲ¤\"],[\"@@ŭĉ¥ôǔV\"],[\"@@ǶmçƛLkĪ\"],[\"@@ÒīŹ£¯ĶŘ\"],[\"@@ʳğÅÞŌĊȮÇ\"],[\"@@Ȗ¦ÑǞbǔÇʅēÿɏ¯¯ĉͅĢƥKͅŤō@ǿèÝŎĠ̼ƦĔƾVèÒŎ\"],[\"@@ƒÛ˫ƽJΠŘLÝƛýɱ»wýʝĉɍKƛýˉçƛôˬĔĔaɄô¹ĊŤĖǴ¥nÆȗnŁÒĠĶ͞ÒèŗƼŌ\"],[\"@@͒ǈlèŰþȖĶ£ōΩţȗǩƻÑĕǊ\"],[\"@@ĉɍIwÆȮ\"],[\"@@ŗýwþƐ@\"],[\"@@ÈýƽÅwĊŮº\"],[\"@@ښŭϮłǬUƼÑ¦ĵͲÇł¹ѪwˀƛůɃɥwŗÅŁůǉŘȉĀǫVĉĔхŎȣḶīɯ¼īĶĠȖ\"],[\"@@`ĩǇmĊŚ\"],[\"@@Ō̼Jbύ¥Ûĸ\"],[\"@@KĊŤǞĉÛýķLĕǉUͽğȕÆÞȺUˬƦ\"],[\"@@Ʋb@Łȕ`ʇŭğǔĶJbŰŮJ@ğƆI\"],[\"@@Ġ£ÛƛŹ¥KĖłƐ\"],[\"@@ƜKźĵƏţƅɦ\"],[\"@@ƼÅXĕͳ¹əƐ@ÜϺU\"]],\"encodeOffsets\":[[[-134760,56441]],[[-134996,56755]],[[-136168,57793]],[[-136801,57703]],[[-136947,56890]],[[-137121,58298]],[[-137334,57838]],[[-137867,57636]],[[-137946,59621]],[[-139118,58707]],[[-139550,59604]],[[-150609,61646]],[[-151103,62033]],[[-151333,71932]],[[-156610,59419]],[[-157653,58920]],[[-158242,57961]],[[-159370,57266]],[[-163727,56610]],[[-164372,56688]],[[-166150,56301]],[[-166313,65162]],[[-166711,55796]],[[-169521,55600]],[[-169717,55454]],[[-170356,61809]],[[-170368,55308]],[[-172841,54434]],[[-173822,54164]],[[-174232,58595]],[[-174765,53962]],[[-175864,65246]],[[-176570,53648]],[[-177793,53402]],[[-178505,53536]],[[-180704,53099]],[[-181405,53194]],[[-182398,53166]],[[-191377,54265]]]}},{\"type\":\"Feature\",\"id\":\"04\",\"properties\":{\"name\":\"Arizona\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@K⶙ၵ@ট̺ᓋڐþȌǔ°ô¯ƾŗJÇ̼ǠŢxŰȢĶƨƆÆĶŌǓŤŗɚƏƒ@ł¼Řmƾçǈ»Ӱ̰ĶĵĊJĖƜ@ڲᲤJ௨I\"],\"encodeOffsets\":[[-111659,37889]]}},{\"type\":\"Feature\",\"id\":\"05\",\"properties\":{\"name\":\"Arkansas\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⋒IôǇŹķƅƽլ@ƻŭ¯ŹƻƑbȫĉƧĉwºóƃÛÑƛĕbǓƱ¯LÅǫƏ¼ġƱƃƅʳƨōóç°ǩÛŗᏋ`ε@@ҀšǓ£ĕþ°๒ƽघŤ@\"],\"encodeOffsets\":[[-96741,37378]]}},{\"type\":\"Feature\",\"id\":\"06\",\"properties\":{\"name\":\"California\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ܖJૼ_࢈@JนI੝ઌݯ৺ݍߪ׽׆ѿ৺߿@ŁƐƑŘəǔţĵŋƅÅĵƧȡwůǟšÈ̻ŘI°ƽ¯óǓ૙ý࣡óĵŎKǪÝȸšƦʿȮͱȌÝ¹ŹlĊƥǞȡΓŰ»ĶɻŰˉKɛÆ˫wƥŎɼ»ǔɛŮUǠĉVƏƦī£Ġ͑ΈƱĸ˖ÜwÒǈţƦƥkȗƆçłbĶīƆ@ɚƾ@Ṵ̂é_ƱǓȣŘȢŹƾǝĬğŌʝɐ¤Üŗˮ¼ƼóɼɏɲɃź£ƲɄς¤Ů£ĬþʨçɲğÆȀ࠘L\"],\"encodeOffsets\":[[-126190,43015]]}},{\"type\":\"Feature\",\"id\":\"08\",\"properties\":{\"name\":\"Colorado\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ᇆIඨJှ@@ࡃVᡍߩL૯Kᑽ@ҭLഷ@@ঔaĢL܊J༼ैJ\"],\"encodeOffsets\":[[-110509,41988]]}},{\"type\":\"Feature\",\"id\":\"09\",\"properties\":{\"name\":\"Connecticut\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ੈ_@a@ӻ»ýñbρÝѩnȋřȭʅĩÑĪȸĢÑèÈٌζW\"],\"encodeOffsets\":[[-74806,43048]]}},{\"type\":\"Feature\",\"id\":\"10\",\"properties\":{\"name\":\"Delaware\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ýĵēÅlƅŮŭȹǴɍĊW́իVý੔ƜĠǞw\"],\"encodeOffsets\":[[-77224,40760]]}},{\"type\":\"Feature\",\"id\":\"11\",\"properties\":{\"name\":\"District of Columbia\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@łĉŋēÝŤèº\"],\"encodeOffsets\":[[-78884,39930]]}},{\"type\":\"Feature\",\"id\":\"12\",\"properties\":{\"name\":\"Florida\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@вLŘʓ଴ÅંÛ¤ǵĸJǠƾĀÜȖçɲºεłХʔաόֹÅ£lˉƾ̙ʒ׽¼ȋKȕğ۝ÿaćɍéǇƻÝƻÝˋýĖźȋόƥèŻ»ĵȺǞǩȌ£ŰǴĩxŁĕˉҖŁŚʨͲǓkŋŁōǒƨҢϤĵĠŮǉȉȮƳĊUŮŁ°ēƐ͑Ȃ˫¥bŹğxΕƻϋVĠēŎѩʜ̹ł˭ɻkԛÿŮŰÛèƐȋǈŎᄒ@\"],\"encodeOffsets\":[[-87549,31742]]}},{\"type\":\"Feature\",\"id\":\"13\",\"properties\":{\"name\":\"Georgia\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǵǵaĕˬǳĖbźȁīƆǩȘŁŌƻɦƛUīƦƽɦŹÆƏXǵŘÑƆɣJƛȘóȹ˷ƥēŹUƅğÑΩɱȕèÿÛƽǟķI£ǶઁÜଳÆŗʔğɰÒɚĉʪôƜKłƜłīºĊğƆīɼȷਫ਼ƧܢઌJלIєb\"],\"encodeOffsets\":[[-85103,35842]]}},{\"type\":\"Feature\",\"id\":\"15\",\"properties\":{\"name\":\"Hawaii\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȷòôȌƥ͒ŘłĊƦÑĬnĶɼţʾēǊŹ@ōʆǵƥƥʿçǿōķƻ\"],[\"@@ĪŗŰº˖ƃ¥ţ˟ÑÇx_ƦƛÇĊĢĠ\"],[\"@@ĉĕȗ@ÒĬɐU\"],[\"@@Ġȡ¯ŗǵmšɼłLƦĠ\"],[\"@@ĪU°ĕŭīÿˉĬƐɐÞ\"]],\"encodeOffsets\":[[[-159370,19404]],[[-160345,21535]],[[-160749,21720]],[[-161742,22219]],[[-163295,22763]]]}},{\"type\":\"Feature\",\"id\":\"16\",\"properties\":{\"name\":\"Idaho\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@ࡱ˖ɻJɯǊķǞnÑ̺ɣġɚēVÅʒJš̹wȡĔŹƱġÒē£ğǴĕȺŘĊĠƲćwéĊǇƐǝĶÑIǉĪçǬUŌ˕Ĭ¯ĔþˀIȘôŘ¥Ȣ¦¯ǞȘǪƄƥƲĕ@ᐍयIཅ@ᠡJ@໢ŎˢéèǇbÑŘǠ̚ĔĖŰaþĬĶºƨǬʞéŘȡÒŗƜIƦōƨbèK૰Vਨࠤ@\"],\"encodeOffsets\":[[-118832,50177]]}},{\"type\":\"Feature\",\"id\":\"17\",\"properties\":{\"name\":\"Illinois\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@༐aࠢ@ǇźȋƄ̯IጡğƱłǵ`ƧŁšōƱǵī_xŁÝ¥¹ȡÅŋţþƧΉýĕĀŋŁç̯źīWŹƥ¤¯ƃVȋʈèÆçǈ@ź˕ǶğkğŌʝǠJƄƜɐwþĊĸţÒǿīÿÛ¼Çˠ˫ǶʳɐŁʴUǞôŤbƲɼĠxźŌĊbƨƏŤÆƦ͜¦ˀłźŌÆǈyłȉĊyĖǿƲ\"],\"encodeOffsets\":[[-92815,43531]]}},{\"type\":\"Feature\",\"id\":\"18\",\"properties\":{\"name\":\"Indiana\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@শ@@ÅLোa୭ÝèɱƥKƽýɍVǓƛçÅŁƧ£ýɃīÇȋĀĪǿŁ`ğȉÇĊɃĉçĕɃŰŋóÒçÑɃUÿýÆºȢÞ¦włĬ`ƲǶŎłŢ_ƨŁǶĠƲJጢĊÅʴ@ʞĪ۪@\"],\"encodeOffsets\":[[-88053,42762]]}},{\"type\":\"Feature\",\"id\":\"19\",\"properties\":{\"name\":\"Iowa\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ź@VůŰćĵķȋÞƃ̘īÒŁȀƱzĕȊĉzŁǇŋÅŹʿŁ͛¥ÅƥƐţaƧŋĉwŹɻğaƱğǟǞēI஥wଽW॑bīŎ°ɎĉȌLɄƧôwŘ¼ĸÅƦřÆƱϘƻȂòŮǔÜÒŁĊƦ¯èŎn⣨@\"],\"encodeOffsets\":[[-93561,44546]]}},{\"type\":\"Feature\",\"id\":\"20\",\"properties\":{\"name\":\"Kansas\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@㔌@Ċý˖ÝȋʑłĉƄȡǶ¥KᆁⰃ@࿥KUᡎŰ@\"],\"encodeOffsets\":[[-104351,40962]]}},{\"type\":\"Feature\",\"id\":\"21\",\"properties\":{\"name\":\"Kentucky\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȌŗƆÒ͆ÝĠĊŤƛĬwŘŗwʩĶǇƆŭ¤īǊīŌa͏ɣ̯ů@ÛůÇUñǇÅğҋţa_ܕVسǓUङ੓kȁbƱ਱VĵU°łŮè;£°źƦĬX̰ŹłèÿŌĖΊþýƨŌŤĀþɄVèÒôÑŌɄůèĖɄĊÈĉȊ_ĠȀłĩȌÿĬÈþɄƨ¤ÆłƜèUǔɎƾþƦLçɲÞ͐@Ǡǩbñʾ\"],\"encodeOffsets\":[[-85917,39700]]}},{\"type\":\"Feature\",\"id\":\"22\",\"properties\":{\"name\":\"Louisiana\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ꮜ_þīÑUǟŮĿnʝķȗȡţ¹ȋĉna̯ķUÒǓÑÑཞ@ĉˡƒǿƏĶĕʝŗkĉȮÅĔƆǪƅ_Łķ¯ȋ¤xýÛţǈŁʴĠůôkƅƛƥŭƦ̯Ā@ƚƱ¯VšçōōkĉŮȕLçŹŹƑþŋVŁȺȋĠóaóǪəwKłɍĵÿǓñʳ̙ŚɃºҕ£ÑóĊȢ̘ÛǈÒĖŘĊĖĖɎaǶɱ;IȀȁȂ@ࡰζ@\"],\"encodeOffsets\":[[-95855,33811]]}},{\"type\":\"Feature\",\"id\":\"23\",\"properties\":{\"name\":\"Maine\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķÒbĊƅĪÅૄ£լζŘÑÒƐźƜÒ¼Ɔþ¥ƨĊɚźô¼ɼٮ٢ƲVƽŎÅ˖ĠǞ@ŤÒɼƃƐōXऻmɥ̂Ï£īôğÑĉŤŹƼƲ̗ǩƅĵ¼ĉğţxaÿƻXʝǵÑŮĕV¦ƃȗÝ¯łğÅɏ@IŮŹxĕţǿx»ƽĵƻġŁŹaŁĕŹnĠȋƧºğƏUýƽīŭə\"],\"encodeOffsets\":[[-72400,44092]]}},{\"type\":\"Feature\",\"id\":\"24\",\"properties\":{\"name\":\"Maryland\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@k@w@¤@\"],[\"@@᷈@þ੓լUǓΟŹaɯ¹ǵLƐçÆĪÒŹƐ£Ïǩ`ÑƲÆ@LȤÆþóˊĢƾƚxǈŁmIćəŁÝīaʓĉŗȕŎƅaĵèķçȕƆˡÜĉźƻñÑĶŮźôƆŌĔŁĊç¹ŋþǩ¤@ŰġèŹbĩɼƛ@ƛþýÛƑJğʝÒǓŭŋǓƛǓýVў\"]],\"encodeOffsets\":[[[-77818,38865]],[[-81385,40676]]]}},{\"type\":\"Feature\",\"id\":\"25\",\"properties\":{\"name\":\"Massachusetts\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĊaƧšƃōKŹȀkŎƅkŁĠVĩɼĉ˖þÑŗЏķƥIĕþƏwKÑƽÛƲwĕÒ¯Ȣŭ@ɥU@bੇ`εXmȮւڼaঊĠĀɦĊ\"],\"encodeOffsets\":[[-72619,43918]]}},{\"type\":\"Feature\",\"id\":\"26\",\"properties\":{\"name\":\"Michigan\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@଑@Æ঵@۩@ǠŎŘȌłŘþǊ°ɰkʞʝӤþȂÅɚȘɦ¤ȌĶƒ¤lƒɐǔƲḁĔ_ŎƲLʴèÜɰ¦óǶƲƲȌVɄīȺaĶţƾUˀŋĠJƜǵřĩŎů¤ƛ¹̹ǟý£ǉȭÅōȕ¦óȮçƼłȂɎ̂ĊƜÛĔţĖΓbǩĠɃĕ̥Ə¯IŎġŁʩǝī»ȕɃǇaé\"],[\"@@bķōk²Ɯºw\"],[\"@@ŹĖþŢȡnĀŘVƦǩĸīłΫĊŋΫŰࡻǞğƜƽ¼͜Ĕƨĸπ¤ʈŮŎLĠĖˀŮƄłȢèȌÑͧʳýēLƽǈŤ̂mɦĉȮɯŎ¥Ʉº¹ɄҌȘɼl̺UɄÜǈLɻǔǔèÅŌèʔxJ̍ŎŭǔlĊǈ@ĖĕóÛҡÆəʅĶéğýŁlƽŚ˕èƏJƅŋəʇxĩ¯wğʿÿbŎřx¯ŗȕKĕ¹Źȣʅʧlw\"],[\"@@ɃŁōaXĖՊȢķƏŗ\"]],\"encodeOffsets\":[[[-85457,42734]],[[-87560,46829]],[[-89691,46178]],[[-90936,49128]]]}},{\"type\":\"Feature\",\"id\":\"27\",\"properties\":{\"name\":\"Minnesota\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ûǟç@ӻ¹»ʇçȕǵašĪWłŁĩŹlƛṊ̃ɚƱǬaĔğʴġ¦ŋʆƛƆǈȁwƃ°īŹ@⣧@@ພȗĬƥǊɰǴlĬͲĵĖçȀbɦՠǓ˸Ýǈ;ÆŘōˌნ@@͐ǔUŌÛŎѩĖ»ˠa£͒mğˠx@ɐ°ȌkɎçÒĕŰVŘȋÆĀɄÿʞÅ@óŮÑʪƲĈȸ¼ôŭƜǞȤlɤŁɐnm¯˫ŁϷĉʩĕεɏƽƃʅƱϗȭÜç\"],\"encodeOffsets\":[[-94223,47827]]}},{\"type\":\"Feature\",\"id\":\"28\",\"properties\":{\"name\":\"Mississippi\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɦ@ĔēšःȗཱིÞ౹ġȫnĉÆȭ˫īĕÑĵĖƐƑȀĊˢཝ@ÒÒÑǔĸVb̰ĊmºȌȢŤĸȘmʞŭŀVǠÒýĬÜŘ¯ǪôèƧŎƆʴƲƄ»ĢǬƐKÆƲ°aǔĖÒƜƄÜ¹ô໸@\"],\"encodeOffsets\":[[-90594,35836]]}},{\"type\":\"Feature\",\"id\":\"29\",\"properties\":{\"name\":\"Missouri\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĔJǠǝĠóţVǝłʳʴɏˬǵÈ˟Ü»ĬĀȀŤÑĉķxýƛɏIƃʞǟĠŋĠl˖ǵ@ŹèǇçÅȌʇƄUçͽŭ¯ŁÅ@±@LȹǓɃի@Ɔƾźĸóǈ⋑Jţ@@оLᆂǵ¦ƃȢŁĊȌʒ˕Þĉþȹɚǳ˖॒aାX஦x\"],\"encodeOffsets\":[[-94037,41585]]}},{\"type\":\"Feature\",\"id\":\"30\",\"properties\":{\"name\":\"Montana\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Jढ़IྕJߓ_@༛Lᦑ@စ@JѵƱĖƃƦȗǩǝ¥°ȡŗ¦ȗóʿJēýī°ŋ˖ǫVĩèJǊĵÒƏǞĉǈxêƱĈĉğȹŗǳĖ¤ĠÑĔƲĢēźxȢŢ̺ʑIUÆəĔĢ̹ɤmÒǝǉĸIɰ˕ɼ@ࡲ⒞KႢL⮀@\"],\"encodeOffsets\":[[-106544,50177]]}},{\"type\":\"Feature\",\"id\":\"31\",\"properties\":{\"name\":\"Nebraska\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ූK᥄@¥ўƱĶĊŤkЄ@ѶƽÆţƲwƲϗŚÅÆƥ»ķxŗƨóKɃĊȋ¯ɍĬōǴ˕Ⱥə㔋@ů@@ࡄွ@@၀ؔ@\"],\"encodeOffsets\":[[-105804,44036]]}},{\"type\":\"Feature\",\"id\":\"32\",\"properties\":{\"name\":\"Nevada\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ᠢIK⠵@ڱĕƛĉIĵĶ̯¼ӯèǇnƽ»ŗ৹ࠀׅҀߩ׾৹ݎઋݰJਫ਼IบબKඞV\"],\"encodeOffsets\":[[-119836,43009]]}},{\"type\":\"Feature\",\"id\":\"33\",\"properties\":{\"name\":\"New Hampshire\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¤իÆૃƆĩaĉĸÑīƽĉbɥĉğÿউóÞVŮô°UŤÞΠƦǔôȌòèIȸˬĀƐƚýƒŘƐUĊŤɎȖw¦¼\"],\"encodeOffsets\":[[-72787,46391]]}},{\"type\":\"Feature\",\"id\":\"34\",\"properties\":{\"name\":\"New Jersey\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ˬţĵʑƏÇóŹɰÛnīķҋʽͱǟīƱɃýƐʑê̙ȀkŮKn°°þĶɦèbÞʴƐ¦ôʇǞUłŁUĬźƦçĖɂǪ²ĠŌÒϮǿ\"],\"encodeOffsets\":[[-76018,42129]]}},{\"type\":\"Feature\",\"id\":\"35\",\"properties\":{\"name\":\"New Mexico\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ҮKᑾ@૰L@н@Kᐣk࡙@ࡅᲥ@wĉĬĩඳ@@ϣ۳@L⶚സ@\"],\"encodeOffsets\":[[-109999,37889]]}},{\"type\":\"Feature\",\"id\":\"36\",\"properties\":{\"name\":\"New York\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Xǩ¯ƽþƱwǇīǟôɯ¯çƄƑ׃VóȭցnÇًÒçȷġÒĩΪçôº̰@ƼʴƆnīƆ¥̯ŭ٭ǿ˕ǵVƃ¥óƒĶʒ˫ŤϭȀÒŹLƱƚnŰķĬÛKğŘ⍻@@Ʉ@bԪʈĊŘǒþÛƜç»ɰӰĬѪKǪwȌğŤζKɚÒɼƲƲLLɰþƆȋĠ¦łͲƜŰŮКˮϤƚ֮wڰn\"],\"encodeOffsets\":[[-75104,46094]]}},{\"type\":\"Feature\",\"id\":\"37\",\"properties\":{\"name\":\"North Carolina\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ֺaڄIᵤVĬͳɻ¥˵¹¥±ȋ_XÑɰ¤ʪ¦ĊÿƲÆȭ»īĵUɃȷ˫W¯ƙŤƛĪǳɻƱˋwǿ»́ǇɱɃţˋǩỌ̀Å॑ߠऻbbĪŹƜē¹KĔਛ¦ɯǵý́ÅѓaכJxȤǔlÞƐȸŰɰJȺźɎ°ȂȌŘÈxĉͨǈƲłƾƾ¤Ȣלw\"],\"encodeOffsets\":[[-82922,37440]]}},{\"type\":\"Feature\",\"id\":\"38\",\"properties\":{\"name\":\"North Dakota\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŎˋÅŗͽÞǇǔ˷՟aɥèǿĶĕͱ㰣VJྖIफ़㛌@\"],\"encodeOffsets\":[[-99562,50177]]}},{\"type\":\"Feature\",\"id\":\"39\",\"properties\":{\"name\":\"Ohio\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@ૻŭ¯ÒġKŹŗȫý̯͛˕ŁġÆĩšīJŁǇxīĕýŭźƽȭ¦Źķ¯ōəkŗŘīxƜţğĉͅÞƅÑȋŘʽaòǟǪ͏@b୮Kৌ଒͞ŗŌçĊÞȀƅŚ¥ϸŎɲwʞƾζƲаł@@\"],\"encodeOffsets\":[[-82451,42987]]}},{\"type\":\"Feature\",\"id\":\"40\",\"properties\":{\"name\":\"Oklahoma\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ⰴ@@нƾग¯๑͑ĠćĬɏĊÅóɏL¯°ȡĉĉ°ǵ£ǓŹÛòǩÒȁ@ÑĬɃȋçłīñèȡÞƧōÛŘţbçĠǉŁýçèǓUǿòǟUÏǈˋXĵȋǈÝU@࿂຿@ু@@оߪK࿦L\"],\"encodeOffsets\":[[-102489,37889]]}},{\"type\":\"Feature\",\"id\":\"41\",\"properties\":{\"name\":\"Oregon\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@þVǶĕþĵ¦ʧўġςƆɰbˌ¯ÅҢŢŎ£ʜxȺĊςôͲlŘÆაIŘƛȢÑêŗǫʝ¹Ƨīĵbýĕůēǟ̙Òŗǈaêçōˡ@໡ඝUફLࢇ@ૻ`ܕIࠗKţĬÝ˖bȌŗƦĊƒÒɤŮʈÈɄĠ܊aĬĊ̺Ѡ¯ʆ¦ƜͲŰƦīƆx\"],\"encodeOffsets\":[[-126168,47283]]}},{\"type\":\"Feature\",\"id\":\"42\",\"properties\":{\"name\":\"Pennsylvania\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@Ƀ⍼@ĠŗÜLĸīmůƲƙźKÑŋÑ±ğɁǩèĕŹƥVīłVŁʈǝ¥óʳƏaÝɥçǝxƛğ᷇@࢓@@ޒ@ૼ@@ƾ°ӎȢ@a\"],\"encodeOffsets\":[[-81677,43267]]}},{\"type\":\"Feature\",\"id\":\"44\",\"properties\":{\"name\":\"Rhode Island\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÜƱǑkĶǞ\"],[\"@@Ů@°ȡĖÑĵbĕůǩͅ£¼þ@ӼɦV\"]],\"encodeOffsets\":[[[-72905,42678]],[[-73247,43026]]]}},{\"type\":\"Feature\",\"id\":\"45\",\"properties\":{\"name\":\"South Carolina\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ƕþɰਜ¥LēĔºźƛaĩ़a॒ߟƥ¥ȁƏǳɍǩƛƑȋ@£ĵȡōōţǩ¹ȋŹkÑǩçȋǵȗôIƜƅɤŗÒWǶÅƐɥźƥƾVĬɥƜŋƼȗłƅǪĬŹȂĕa˫ǴbĖǶǶ̂Æ\"],\"encodeOffsets\":[[-84750,35909]]}},{\"type\":\"Feature\",\"id\":\"46\",\"properties\":{\"name\":\"South Dakota\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@㰤UkīɯǳƦǉȘī@ຝōm°çƥłĉÛÑǓñŭƼȁƱxÅŤѵƾЃ@ţlĵĉѝƲ¦᥃@෕Lؓ@Iဲ`@Iߔ\"],\"encodeOffsets\":[[-106544,47047]]}},{\"type\":\"Feature\",\"id\":\"47\",\"properties\":{\"name\":\"Tennessee\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@aƲȂ੔lचǔVشܖUb`ဲUȡƽ£ŁƽƱͧǇwĊŗÇȁȋɍ¯ȹŹɯIȷůÝƏǓkwȣઋIใbۿKɥ@໷@ĊxĊƨaȬƼƒźŮ°ƼǔɄKȺ²@Æ@ĶVਲU\"],\"encodeOffsets\":[[-90168,37373]]}},{\"type\":\"Feature\",\"id\":\"48\",\"properties\":{\"name\":\"Texas\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ເ@@࿁ÞVȌǇĶˌWÐǇǠVȀñǔVèçłþǊèğŤaÜŗƨŎȢÝòçĬèŁɄȌÒīȂ@ǪÑÜñǔźǶ¤Ċ¯ȢĊ°¯ɐKÆôɐĉĈī͒ğĖýǔ¤Ţ@ѿ@࡯ȂȁJǿɲͽbǵĕɍĉĕŗÑĕÜǇȡ̗ôĉƏKѩŗƽÜƒŋīýx¥ţĖ»`ƻƻǓʩȹԑə¹ƱÅKºȷīŀÑwɚɍǇçƱ¤wƱȋƽȗ́ụ̆ğxwōĪ¯əÛUKůþçzʧĠĕxǇòƛʳĕŁŎȡ¤ʽUɥƐǟbŹŎǩţłýʨƱƲlźçƒxŢŁƆēbƛŤ¯ƲůƐǳŘĕʪĉèōȮǒŁŤǵł¥ôǓÞŹȀο¤əUȋÞ¥ĕȭƱǩğ˫»IŗǓƏKȷźԳȺķŌȫłƛʈUɎƛǪƴġĪ͛ƜǩȘƛèƱǔɃĔƥɜů°īĪxĊᲦ@@ࡆl࡚Lᐤ@ূ@\"],\"encodeOffsets\":[[-104256,37378]]}},{\"type\":\"Feature\",\"id\":\"49\",\"properties\":{\"name\":\"Utah\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@रJ@ࡃှ@I༻K܉bġ@ও௧JᲣIL⠶ཆ@\"],\"encodeOffsets\":[[-114856,43004]]}},{\"type\":\"Feature\",\"id\":\"50\",\"properties\":{\"name\":\"Vermont\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@VĉŗƏþƑƏƙ˫ÿJȷñçóȋƥǓÝΟVţó¯UŭôÝڻbUôׄƃƒ°èóɰĬǠxǈýƲ°ƾWǪ࢈UڲV\"],\"encodeOffsets\":[[-73219,46094]]}},{\"type\":\"Feature\",\"id\":\"51\",\"properties\":{\"name\":\"Virginia\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@źbŋƛŗ¹éȗǩ̹ƛÝ¯Řôʴɦ͞ɰº\"],[\"@@l@£@x@\"],[\"@@Ѫ˭ĠǊźaĢç@ůǪ£ŌýÞţóƅĵÝţēɦ¤ƃ̎ÅĊŁɼřŁɻĬǿŗĕaŁłÛŗĵǩƄ¥¯Ʋīвwł̹ᵣUڃJֹbכxေVҌŤÆĠǈVòŰÈ@Ṵ̈Ű͐ɤaçŚƛƚçłLǊŌŘēɐ°Ϣǈ¹ƨòJƲĢƆƼŮÞƴǔƼÜȘƜŗƐĖèǶ̘łñϸ;°ʞ\"]],\"encodeOffsets\":[[[-77207,38926]],[[-77840,38865]],[[-80230,40413]]]}},{\"type\":\"Feature\",\"id\":\"53\",\"properties\":{\"name\":\"Washington\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@UਧL૯açŎƧJƥ჏JŗÅͱkρóȹĉʛwō¤ҡšÆˋ°ɯaρƅѝĢ¥ʨýĶǵĖýUƅwƥĬƱů»ǇôŘŎÒǝǪřҖçÒğ͒ǓŮçʞĠǔǠýΈŁɼJɼ£ɜ¤łñȢJƐǿĶbnʝÒɥĊxĉȘxȌƐȖōþUƒĉƲ¦ŌÇźƃnůĬĠ⸈@\"],[\"@@ŌkǟƅÞ¦è\"],[\"@@ĠŌŮƅŗȕbł\"]],\"encodeOffsets\":[[[-119842,50177]],[[-125663,49470]],[[-125977,49751]]]}},{\"type\":\"Feature\",\"id\":\"54\",\"properties\":{\"name\":\"West Virginia\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@ޑ࢔@UѝǔþǔƜŌǔŮʞÑĠƒIþÜƜýƜ@Īɻğǉѩˮ¯ʝϷͽŁòǵ̗ĕçƏƛŘÛȗǓƻÝƳƻŭġƅIƱƧñºϡǇɏ¯ŗĔǉŋŁKƙèřƜbèŋbǉĬ£ĬƅŮĵǈxʪɚlŎĸ°¥źƾȮŮŹĖþwĬłǈĬIĪŢĢÅł͜˖þ̰ŘȬLźÑĢŮ°\"],\"encodeOffsets\":[[-82451,41613]]}},{\"type\":\"Feature\",\"id\":\"55\",\"properties\":{\"name\":\"Wisconsin\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƾ»ĠƛࡼǝάůŌάĉĬŁǪķUƥÿŗȢmýšźĕĵǉmƏȕ¹ƅĪwźĔƒǔǪÞƐɄǪ°aōţĵɻΓÛȗLƏĕ¯ýȋǇñŁķʿxȷĸȁʑࠡ@༏bÑł̗ĬÝƄȌĶĸůĈUŰ¯ĬxƄǇȂƅʅƜ¥ŌʳĢēĠǫbəƲÒ̮kƜĪźŁłĩXbŢȖǶʈèº¼@ӼǠèÜȌUגƚɎĀôÑŗōˠƛŤ_\"],\"encodeOffsets\":[[-92585,47687]]}},{\"type\":\"Feature\",\"id\":\"56\",\"properties\":{\"name\":\"Wyoming\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ᦒ@༜KJေ@ဿටIᇅJेIွ@@ࡄ@ᐎIѶဆ@\"],\"encodeOffsets\":[[-111698,46083]]}},{\"type\":\"Feature\",\"id\":\"72\",\"properties\":{\"name\":\"Puerto Rico\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˓nŻÝ¹ȋa°ȤīƚƨźŘwҢ@ӎ¯ǪÅLƏĕaēƛͳóǵ°\"],\"encodeOffsets\":[[-68043,18416]]}}],\"UTF8Encoding\":true},{\"Alaska\":{\"left\":-131,\"top\":25,\"width\":15},\"Hawaii\":{\"left\":-110,\"top\":28,\"width\":5},\"Puerto Rico\":{\"left\":-76,\"top\":26,\"width\":2}});}));"},{"title":"","date":"2019-06-11T00:08:45.222Z","updated":"2019-04-27T04:08:33.640Z","comments":true,"path":"scripts/shBrushAS3.js","permalink":"https://shaokang.ga/scripts/shBrushAS3.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Created by Peter Atoria @ http://iAtoria.com var inits = 'class interface function package'; var keywords = '-Infinity ...rest Array as AS3 Boolean break case catch const continue Date decodeURI ' + 'decodeURIComponent default delete do dynamic each else encodeURI encodeURIComponent escape ' + 'extends false final finally flash_proxy for get if implements import in include Infinity ' + 'instanceof int internal is isFinite isNaN isXMLName label namespace NaN native new null ' + 'Null Number Object object_proxy override parseFloat parseInt private protected public ' + 'return set static String super switch this throw true try typeof uint undefined unescape ' + 'use void while with' ; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // single quoted strings { regex: /\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b/gi, css: 'value' }, // numbers { regex: new RegExp(this.getKeywords(inits), 'gm'), css: 'color3' }, // initializations { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, // keywords { regex: new RegExp('var', 'gm'), css: 'variable' }, // variable { regex: new RegExp('trace', 'gm'), css: 'color1' } // trace ]; this.forHtmlScript(SyntaxHighlighter.regexLib.scriptScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['actionscript3', 'as3']; SyntaxHighlighter.brushes.AS3 = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:36.834Z","updated":"2019-04-27T04:08:33.618Z","comments":true,"path":"js/qunit.js","permalink":"https://shaokang.ga/js/qunit.js","excerpt":"","text":"/* * QUnit - A JavaScript Unit Testing Framework * * http://docs.jquery.com/QUnit * * Copyright (c) 2009 John Resig, Jörn Zaefferer * Dual licensed under the MIT (MIT-LICENSE.txt) * and GPL (GPL-LICENSE.txt) licenses. */ (function(window) { var QUnit = { // Initialize the configuration options init: function() { config = { stats: { all: 0, bad: 0 }, moduleStats: { all: 0, bad: 0 }, started: +new Date, updateRate: 1000, blocking: false, autorun: false, assertions: [], filters: [], queue: [] }; var tests = id(\"qunit-tests\"), banner = id(\"qunit-banner\"), result = id(\"qunit-testresult\"); if ( tests ) { tests.innerHTML = \"\"; } if ( banner ) { banner.className = \"\"; } if ( result ) { result.parentNode.removeChild( result ); } }, // call on start of module test to prepend name to all tests module: function(name, testEnvironment) { config.currentModule = name; synchronize(function() { if ( config.currentModule ) { QUnit.moduleDone( config.currentModule, config.moduleStats.bad, config.moduleStats.all ); } config.currentModule = name; config.moduleTestEnvironment = testEnvironment; config.moduleStats = { all: 0, bad: 0 }; QUnit.moduleStart( name, testEnvironment ); }); }, asyncTest: function(testName, expected, callback) { if ( arguments.length === 2 ) { callback = expected; expected = 0; } QUnit.test(testName, expected, callback, true); }, test: function(testName, expected, callback, async) { var name = testName, testEnvironment, testEnvironmentArg; if ( arguments.length === 2 ) { callback = expected; expected = null; } // is 2nd argument a testEnvironment? if ( expected && typeof expected === 'object') { testEnvironmentArg = expected; expected = null; } if ( config.currentModule ) { name = config.currentModule + \" module: \" + name; } if ( !validTest(name) ) { return; } synchronize(function() { QUnit.testStart( testName ); testEnvironment = extend({ setup: function() {}, teardown: function() {} }, config.moduleTestEnvironment); if (testEnvironmentArg) { extend(testEnvironment,testEnvironmentArg); } // allow utility functions to access the current test environment QUnit.current_testEnvironment = testEnvironment; config.assertions = []; config.expected = expected; try { if ( !config.pollution ) { saveGlobal(); } testEnvironment.setup.call(testEnvironment); } catch(e) { QUnit.ok( false, \"Setup failed on \" + name + \": \" + e.message ); } if ( async ) { QUnit.stop(); } try { callback.call(testEnvironment); } catch(e) { fail(\"Test \" + name + \" died, exception and test follows\", e, callback); QUnit.ok( false, \"Died on test #\" + (config.assertions.length + 1) + \": \" + e.message ); // else next test will carry the responsibility saveGlobal(); // Restart the tests if they're blocking if ( config.blocking ) { start(); } } }); synchronize(function() { try { checkPollution(); testEnvironment.teardown.call(testEnvironment); } catch(e) { QUnit.ok( false, \"Teardown failed on \" + name + \": \" + e.message ); } try { QUnit.reset(); } catch(e) { fail(\"reset() failed, following Test \" + name + \", exception and reset fn follows\", e, reset); } if ( config.expected && config.expected != config.assertions.length ) { QUnit.ok( false, \"Expected \" + config.expected + \" assertions, but \" + config.assertions.length + \" were run\" ); } var good = 0, bad = 0, tests = id(\"qunit-tests\"); config.stats.all += config.assertions.length; config.moduleStats.all += config.assertions.length; if ( tests ) { var ol = document.createElement(\"ol\"); ol.style.display = \"none\"; for ( var i = 0; i < config.assertions.length; i++ ) { var assertion = config.assertions[i]; var li = document.createElement(\"li\"); li.className = assertion.result ? \"pass\" : \"fail\"; li.appendChild(document.createTextNode(assertion.message || \"(no message)\")); ol.appendChild( li ); if ( assertion.result ) { good++; } else { bad++; config.stats.bad++; config.moduleStats.bad++; } } var b = document.createElement(\"strong\"); b.innerHTML = name + \" (\" + bad + \", \" + good + \", \" + config.assertions.length + \")\"; addEvent(b, \"click\", function() { var next = b.nextSibling, display = next.style.display; next.style.display = display === \"none\" ? \"block\" : \"none\"; }); addEvent(b, \"dblclick\", function(e) { var target = e && e.target ? e.target : window.event.srcElement; if ( target.nodeName.toLowerCase() === \"strong\" ) { var text = \"\", node = target.firstChild; while ( node.nodeType === 3 ) { text += node.nodeValue; node = node.nextSibling; } text = text.replace(/(^\\s*|\\s*$)/g, \"\"); if ( window.location ) { window.location.href = window.location.href.match(/^(.+?)(\\?.*)?$/)[1] + \"?\" + encodeURIComponent(text); } } }); var li = document.createElement(\"li\"); li.className = bad ? \"fail\" : \"pass\"; li.appendChild( b ); li.appendChild( ol ); tests.appendChild( li ); if ( bad ) { var toolbar = id(\"qunit-testrunner-toolbar\"); if ( toolbar ) { toolbar.style.display = \"block\"; id(\"qunit-filter-pass\").disabled = null; id(\"qunit-filter-missing\").disabled = null; } } } else { for ( var i = 0; i < config.assertions.length; i++ ) { if ( !config.assertions[i].result ) { bad++; config.stats.bad++; config.moduleStats.bad++; } } } QUnit.testDone( testName, bad, config.assertions.length ); if ( !window.setTimeout && !config.queue.length ) { done(); } }); if ( window.setTimeout && !config.doneTimer ) { config.doneTimer = window.setTimeout(function(){ if ( !config.queue.length ) { done(); } else { synchronize( done ); } }, 13); } }, /** * Specify the number of expected assertions to gurantee that failed test (no assertions are run at all) don't slip through. */ expect: function(asserts) { config.expected = asserts; }, /** * Asserts true. * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" ); */ ok: function(a, msg) { QUnit.log(a, msg); config.assertions.push({ result: !!a, message: msg }); }, /** * Checks that the first two arguments are equal, with an optional message. * Prints out both actual and expected values. * * Prefered to ok( actual == expected, message ) * * @example equal( format(\"Received {0} bytes.\", 2), \"Received 2 bytes.\" ); * * @param Object actual * @param Object expected * @param String message (optional) */ equal: function(actual, expected, message) { push(expected == actual, actual, expected, message); }, notEqual: function(actual, expected, message) { push(expected != actual, actual, expected, message); }, deepEqual: function(a, b, message) { push(QUnit.equiv(a, b), a, b, message); }, notDeepEqual: function(a, b, message) { push(!QUnit.equiv(a, b), a, b, message); }, strictEqual: function(actual, expected, message) { push(expected === actual, actual, expected, message); }, notStrictEqual: function(actual, expected, message) { push(expected !== actual, actual, expected, message); }, start: function() { // A slight delay, to avoid any current callbacks if ( window.setTimeout ) { window.setTimeout(function() { if ( config.timeout ) { clearTimeout(config.timeout); } config.blocking = false; process(); }, 13); } else { config.blocking = false; process(); } }, stop: function(timeout) { config.blocking = true; if ( timeout && window.setTimeout ) { config.timeout = window.setTimeout(function() { QUnit.ok( false, \"Test timed out\" ); QUnit.start(); }, timeout); } }, /** * Resets the test setup. Useful for tests that modify the DOM. */ reset: function() { if ( window.jQuery ) { jQuery(\"#main\").html( config.fixture ); jQuery.event.global = {}; jQuery.ajaxSettings = extend({}, config.ajaxSettings); } }, /** * Trigger an event on an element. * * @example triggerEvent( document.body, \"click\" ); * * @param DOMElement elem * @param String type */ triggerEvent: function( elem, type, event ) { if ( document.createEvent ) { event = document.createEvent(\"MouseEvents\"); event.initMouseEvent(type, true, true, elem.ownerDocument.defaultView, 0, 0, 0, 0, 0, false, false, false, false, 0, null); elem.dispatchEvent( event ); } else if ( elem.fireEvent ) { elem.fireEvent(\"on\"+type); } }, // Safe object type checking is: function( type, obj ) { return Object.prototype.toString.call( obj ) === \"[object \"+ type +\"]\"; }, // Logging callbacks done: function(failures, total) {}, log: function(result, message) {}, testStart: function(name) {}, testDone: function(name, failures, total) {}, moduleStart: function(name, testEnvironment) {}, moduleDone: function(name, failures, total) {} }; // Backwards compatibility, deprecated QUnit.equals = QUnit.equal; QUnit.same = QUnit.deepEqual; // Maintain internal state var config = { // The queue of tests to run queue: [], // block until document ready blocking: true }; // Load paramaters (function() { var location = window.location || { search: \"\", protocol: \"file:\" }, GETParams = location.search.slice(1).split('&'); for ( var i = 0; i < GETParams.length; i++ ) { GETParams[i] = decodeURIComponent( GETParams[i] ); if ( GETParams[i] === \"noglobals\" ) { GETParams.splice( i, 1 ); i--; config.noglobals = true; } else if ( GETParams[i].search('=') > -1 ) { GETParams.splice( i, 1 ); i--; } } // restrict modules/tests by get parameters config.filters = GETParams; // Figure out if we're running the tests from a server or not QUnit.isLocal = !!(location.protocol === 'file:'); })(); // Expose the API as global variables, unless an 'exports' // object exists, in that case we assume we're in CommonJS if ( typeof exports === \"undefined\" || typeof require === \"undefined\" ) { extend(window, QUnit); window.QUnit = QUnit; } else { extend(exports, QUnit); exports.QUnit = QUnit; } if ( typeof document === \"undefined\" || document.readyState === \"complete\" ) { config.autorun = true; } addEvent(window, \"load\", function() { // Initialize the config, saving the execution queue var oldconfig = extend({}, config); QUnit.init(); extend(config, oldconfig); config.blocking = false; var userAgent = id(\"qunit-userAgent\"); if ( userAgent ) { userAgent.innerHTML = navigator.userAgent; } var toolbar = id(\"qunit-testrunner-toolbar\"); if ( toolbar ) { toolbar.style.display = \"none\"; var filter = document.createElement(\"input\"); filter.type = \"checkbox\"; filter.id = \"qunit-filter-pass\"; filter.disabled = true; addEvent( filter, \"click\", function() { var li = document.getElementsByTagName(\"li\"); for ( var i = 0; i < li.length; i++ ) { if ( li[i].className.indexOf(\"pass\") > -1 ) { li[i].style.display = filter.checked ? \"none\" : \"\"; } } }); toolbar.appendChild( filter ); var label = document.createElement(\"label\"); label.setAttribute(\"for\", \"qunit-filter-pass\"); label.innerHTML = \"Hide passed tests\"; toolbar.appendChild( label ); var missing = document.createElement(\"input\"); missing.type = \"checkbox\"; missing.id = \"qunit-filter-missing\"; missing.disabled = true; addEvent( missing, \"click\", function() { var li = document.getElementsByTagName(\"li\"); for ( var i = 0; i < li.length; i++ ) { if ( li[i].className.indexOf(\"fail\") > -1 && li[i].innerHTML.indexOf('missing test - untested code is broken code') > - 1 ) { li[i].parentNode.parentNode.style.display = missing.checked ? \"none\" : \"block\"; } } }); toolbar.appendChild( missing ); label = document.createElement(\"label\"); label.setAttribute(\"for\", \"qunit-filter-missing\"); label.innerHTML = \"Hide missing tests (untested code is broken code)\"; toolbar.appendChild( label ); } var main = id('main'); if ( main ) { config.fixture = main.innerHTML; } if ( window.jQuery ) { config.ajaxSettings = window.jQuery.ajaxSettings; } QUnit.start(); }); function done() { if ( config.doneTimer && window.clearTimeout ) { window.clearTimeout( config.doneTimer ); config.doneTimer = null; } if ( config.queue.length ) { config.doneTimer = window.setTimeout(function(){ if ( !config.queue.length ) { done(); } else { synchronize( done ); } }, 13); return; } config.autorun = true; // Log the last module results if ( config.currentModule ) { QUnit.moduleDone( config.currentModule, config.moduleStats.bad, config.moduleStats.all ); } var banner = id(\"qunit-banner\"), tests = id(\"qunit-tests\"), html = ['Tests completed in ', +new Date - config.started, ' milliseconds.', '', config.stats.all - config.stats.bad, ' tests of ', config.stats.all, ' passed, ', config.stats.bad,' failed.'].join(''); if ( banner ) { banner.className = (config.stats.bad ? \"qunit-fail\" : \"qunit-pass\"); } if ( tests ) { var result = id(\"qunit-testresult\"); if ( !result ) { result = document.createElement(\"p\"); result.id = \"qunit-testresult\"; result.className = \"result\"; tests.parentNode.insertBefore( result, tests.nextSibling ); } result.innerHTML = html; } QUnit.done( config.stats.bad, config.stats.all ); } function validTest( name ) { var i = config.filters.length, run = false; if ( !i ) { return true; } while ( i-- ) { var filter = config.filters[i], not = filter.charAt(0) == '!'; if ( not ) { filter = filter.slice(1); } if ( name.indexOf(filter) !== -1 ) { return !not; } if ( not ) { run = true; } } return run; } function push(result, actual, expected, message) { message = message || (result ? \"okay\" : \"failed\"); QUnit.ok( result, result ? message + \": \" + QUnit.jsDump.parse(expected) : message + \", expected: \" + QUnit.jsDump.parse(expected) + \" result: \" + QUnit.jsDump.parse(actual) ); } function synchronize( callback ) { config.queue.push( callback ); if ( config.autorun && !config.blocking ) { process(); } } function process() { var start = (new Date()).getTime(); while ( config.queue.length && !config.blocking ) { if ( config.updateRate 0 ) { ok( false, \"Deleted global variable(s): \" + deletedGlobals.join(\", \") ); config.expected++; } } // returns a new Array with the elements that are in a but not in b function diff( a, b ) { var result = a.slice(); for ( var i = 0; i < result.length; i++ ) { for ( var j = 0; j < b.length; j++ ) { if ( result[i] === b[j] ) { result.splice(i, 1); i--; break; } } } return result; } function fail(message, exception, callback) { if ( typeof console !== \"undefined\" && console.error && console.warn ) { console.error(message); console.error(exception); console.warn(callback.toString()); } else if ( window.opera && opera.postError ) { opera.postError(message, exception, callback.toString); } } function extend(a, b) { for ( var prop in b ) { a[prop] = b[prop]; } return a; } function addEvent(elem, type, fn) { if ( elem.addEventListener ) { elem.addEventListener( type, fn, false ); } else if ( elem.attachEvent ) { elem.attachEvent( \"on\" + type, fn ); } else { fn(); } } function id(name) { return !!(typeof document !== \"undefined\" && document && document.getElementById) && document.getElementById( name ); } // Test for equality any JavaScript type. // Discussions and reference: http://philrathe.com/articles/equiv // Test suites: http://philrathe.com/tests/equiv // Author: Philippe Rathé QUnit.equiv = function () { var innerEquiv; // the real equiv function var callers = []; // stack to decide between skip/abort functions var parents = []; // stack to avoiding loops from circular referencing // Determine what is o. function hoozit(o) { if (QUnit.is(\"String\", o)) { return \"string\"; } else if (QUnit.is(\"Boolean\", o)) { return \"boolean\"; } else if (QUnit.is(\"Number\", o)) { if (isNaN(o)) { return \"nan\"; } else { return \"number\"; } } else if (typeof o === \"undefined\") { return \"undefined\"; // consider: typeof null === object } else if (o === null) { return \"null\"; // consider: typeof [] === object } else if (QUnit.is( \"Array\", o)) { return \"array\"; // consider: typeof new Date() === object } else if (QUnit.is( \"Date\", o)) { return \"date\"; // consider: /./ instanceof Object; // /./ instanceof RegExp; // typeof /./ === \"function\"; // => false in IE and Opera, // true in FF and Safari } else if (QUnit.is( \"RegExp\", o)) { return \"regexp\"; } else if (typeof o === \"object\") { return \"object\"; } else if (QUnit.is( \"Function\", o)) { return \"function\"; } else { return undefined; } } // Call the o related callback with the given arguments. function bindCallbacks(o, callbacks, args) { var prop = hoozit(o); if (prop) { if (hoozit(callbacks[prop]) === \"function\") { return callbacks[prop].apply(callbacks, args); } else { return callbacks[prop]; // or undefined } } } var callbacks = function () { // for string, boolean, number and null function useStrictEquality(b, a) { if (b instanceof a.constructor || a instanceof b.constructor) { // to catch short annotaion VS 'new' annotation of a declaration // e.g. var i = 1; // var j = new Number(1); return a == b; } else { return a === b; } } return { \"string\": useStrictEquality, \"boolean\": useStrictEquality, \"number\": useStrictEquality, \"null\": useStrictEquality, \"undefined\": useStrictEquality, \"nan\": function (b) { return isNaN(b); }, \"date\": function (b, a) { return hoozit(b) === \"date\" && a.valueOf() === b.valueOf(); }, \"regexp\": function (b, a) { return hoozit(b) === \"regexp\" && a.source === b.source && // the regex itself a.global === b.global && // and its modifers (gmi) ... a.ignoreCase === b.ignoreCase && a.multiline === b.multiline; }, // - skip when the property is a method of an instance (OOP) // - abort otherwise, // initial === would have catch identical references anyway \"function\": function () { var caller = callers[callers.length - 1]; return caller !== Object && typeof caller !== \"undefined\"; }, \"array\": function (b, a) { var i, j, loop; var len; // b could be an object literal here if ( ! (hoozit(b) === \"array\")) { return false; } len = a.length; if (len !== b.length) { // safe and faster return false; } //track reference to avoid circular references parents.push(a); for (i = 0; i < len; i++) { loop = false; for(j=0;j= 0) { type = \"array\"; } else { type = typeof obj; } return type; }, separator:function() { return this.multiline ? this.HTML ? '' : '\\n' : this.HTML ? '&nbsp;' : ' '; }, indent:function( extra ) {// extra can be a number, shortcut for increasing-calling-decreasing if ( !this.multiline ) return ''; var chr = this.indentChar; if ( this.HTML ) chr = chr.replace(/\\t/g,' ').replace(/ /g,'&nbsp;'); return Array( this._depth_ + (extra||0) ).join(chr); }, up:function( a ) { this._depth_ += a || 1; }, down:function( a ) { this._depth_ -= a || 1; }, setParser:function( name, parser ) { this.parsers[name] = parser; }, // The next 3 are exposed so you can use them quote:quote, literal:literal, join:join, // _depth_: 1, // This is the list of parsers, to modify them, use jsDump.setParser parsers:{ window: '[Window]', document: '[Document]', error:'[ERROR]', //when no parser is found, shouldn't happen unknown: '[Unknown]', 'null':'null', undefined:'undefined', 'function':function( fn ) { var ret = 'function', name = 'name' in fn ? fn.name : (reName.exec(fn)||[])[1];//functions never have name in IE if ( name ) ret += ' ' + name; ret += '('; ret = [ ret, this.parse( fn, 'functionArgs' ), '){'].join(''); return join( ret, this.parse(fn,'functionCode'), '}' ); }, array: array, nodelist: array, arguments: array, object:function( map ) { var ret = [ ]; this.up(); for ( var key in map ) ret.push( this.parse(key,'key') + ': ' + this.parse(map[key]) ); this.down(); return join( '{', ret, '}' ); }, node:function( node ) { var open = this.HTML ? '&lt;' : ''; var tag = node.nodeName.toLowerCase(), ret = open + tag; for ( var a in this.DOMAttrs ) { var val = node[this.DOMAttrs[a]]; if ( val ) ret += ' ' + a + '=' + this.parse( val, 'attribute' ); } return ret + close + open + '/' + tag + close; }, functionArgs:function( fn ) {//function calls it internally, it's the arguments part of the function var l = fn.length; if ( !l ) return ''; var args = Array(l); while ( l-- ) args[l] = String.fromCharCode(97+l);//97 is 'a' return ' ' + args.join(', ') + ' '; }, key:quote, //object calls it internally, the key part of an item in a map functionCode:'[code]', //function calls it internally, it's the content of the function attribute:quote, //node calls it internally, it's an html attribute value string:quote, date:quote, regexp:literal, //regex number:literal, 'boolean':literal }, DOMAttrs:{//attributes to dump from nodes, name=>realName id:'id', name:'name', 'class':'className' }, HTML:false,//if true, entities are escaped ( , \\t, space and \\n ) indentChar:' ',//indentation unit multiline:false //if true, items in a collection, are separated by a \\n, else just a space. }; return jsDump; })(); })(this);"},{"title":"","date":"2019-06-11T00:08:45.390Z","updated":"2019-04-27T04:08:33.657Z","comments":true,"path":"scripts/shBrushCSharp.js","permalink":"https://shaokang.ga/scripts/shBrushCSharp.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var keywords = 'abstract as base bool break byte case catch char checked class const ' + 'continue decimal default delegate do double else enum event explicit ' + 'extern false finally fixed float for foreach get goto if implicit in int ' + 'interface internal is lock long namespace new null object operator out ' + 'override params private protected public readonly ref return sbyte sealed set ' + 'short sizeof stackalloc static string struct switch this throw true try ' + 'typeof uint ulong unchecked unsafe ushort using virtual void while'; function fixComments(match, regexInfo) { var css = (match[0].indexOf(\"///\") == 0) ? 'color1' : 'comments' ; return [new SyntaxHighlighter.Match(match[0], match.index, css)]; } this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, func : fixComments }, // one line comments { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments { regex: /@\"(?:[^\"]|\"\")*\"/g, css: 'string' }, // @-quoted strings { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // strings { regex: /^\\s*#.*/gm, css: 'preprocessor' }, // preprocessor tags like #region and #endregion { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, // c# keyword { regex: /\\bpartial(?=\\s+(?:class|interface|struct)\\b)/g, css: 'keyword' }, // contextual keyword: 'partial' { regex: /\\byield(?=\\s+(?:return|break)\\b)/g, css: 'keyword' } // contextual keyword: 'yield' ]; this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['c#', 'c-sharp', 'csharp']; SyntaxHighlighter.brushes.CSharp = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.166Z","updated":"2019-04-27T04:08:33.637Z","comments":true,"path":"scripts/shBrushAppleScript.js","permalink":"https://shaokang.ga/scripts/shBrushAppleScript.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // AppleScript brush by David Chambers // http://davidchambersdesign.com/ var keywords = 'after before beginning continue copy each end every from return get global in local named of set some that the then times to where whose with without'; var ordinals = 'first second third fourth fifth sixth seventh eighth ninth tenth last front back middle'; var specials = 'activate add alias AppleScript ask attachment boolean class constant delete duplicate empty exists false id integer list make message modal modified new no paragraph pi properties quit real record remove rest result reveal reverse run running save string true word yes'; this.regexList = [ { regex: /(--|#).*$/gm, css: 'comments' }, { regex: /\\(\\*(?:[\\s\\S]*?\\(\\*[\\s\\S]*?\\*\\))*[\\s\\S]*?\\*\\)/gm, // support nested comments css: 'comments' }, { regex: /\"[\\s\\S]*?\"/gm, css: 'string' }, { regex: /(?:,|:|¬|'s\\b|\\(|\\)|\\{|\\}|«|\\b\\w*»)/g, css: 'color1' }, { regex: /(-)?(\\d)+(\\.(\\d)?)?(E\\+(\\d)+)?/g, // numbers css: 'color1' }, { regex: /(?:&(amp;|gt;|lt;)?|=|� |>|=|≤|"},{"title":"Shaokang Jiang","date":"2020-01-24T00:37:08.623Z","updated":"2020-01-24T00:37:08.623Z","comments":true,"path":"about/index.html","permalink":"https://shaokang.ga/about/index.html","excerpt":"","text":"My name is Shaokang Jiang (sjiang97@wisc.edu) I am a student studying at UW-Madison currently. My major is Computer Science. I am familiar with multiple coding languages, including C, java, python and more, and environments, including windows, sql and linux. I am still finding my area of interesting right now. For the details of my skill and working experience, see my resume. I am going to share something I know and something I find in this website. All articles except special notice in this blog is written by me. I used to plan to build a blog system on my own. I don’t have enough time to do this. So I choose Hexo. Thanks for Xiaoliang’s guidance of using Hexo, which is a great tool and saves lots of time while building a personal blog. Theme for this blog is Material-x."},{"title":"","date":"2019-06-11T00:08:45.266Z","updated":"2019-04-27T04:08:33.643Z","comments":true,"path":"scripts/shBrushBash.js","permalink":"https://shaokang.ga/scripts/shBrushBash.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var keywords = 'if fi then elif else for do done until while break continue case function return in eq ne ge le'; var commands = 'alias apropos awk basename bash bc bg builtin bzip2 cal cat cd cfdisk chgrp chmod chown chroot' + 'cksum clear cmp comm command cp cron crontab csplit cut date dc dd ddrescue declare df ' + 'diff diff3 dig dir dircolors dirname dirs du echo egrep eject enable env ethtool eval ' + 'exec exit expand export expr false fdformat fdisk fg fgrep file find fmt fold format ' + 'free fsck ftp gawk getopts grep groups gzip hash head history hostname id ifconfig ' + 'import install join kill less let ln local locate logname logout look lpc lpr lprint ' + 'lprintd lprintq lprm ls lsof make man mkdir mkfifo mkisofs mknod more mount mtools ' + 'mv netstat nice nl nohup nslookup open op passwd paste pathchk ping popd pr printcap ' + 'printenv printf ps pushd pwd quota quotacheck quotactl ram rcp read readonly renice ' + 'remsync rm rmdir rsync screen scp sdiff sed select seq set sftp shift shopt shutdown ' + 'sleep sort source split ssh strace su sudo sum symlink sync tail tar tee test time ' + 'times touch top traceroute trap tr true tsort tty type ulimit umask umount unalias ' + 'uname unexpand uniq units unset unshar useradd usermod users uuencode uudecode v vdir ' + 'vi watch wc whereis which who whoami Wget xargs yes' ; this.regexList = [ { regex: /^#!.*$/gm, css: 'preprocessor bold' }, { regex: /\\/[\\w-\\/]+/gm, css: 'plain' }, { regex: SyntaxHighlighter.regexLib.singleLinePerlComments, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // single quoted strings { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, // keywords { regex: new RegExp(this.getKeywords(commands), 'gm'), css: 'functions' } // commands ]; } Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['bash', 'shell']; SyntaxHighlighter.brushes.Bash = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.434Z","updated":"2019-04-27T04:08:33.659Z","comments":true,"path":"scripts/shBrushCss.js","permalink":"https://shaokang.ga/scripts/shBrushCss.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { function getKeywordsCSS(str) { return '\\\\b([a-z_]|)' + str.replace(/ /g, '(?=:)\\\\b|\\\\b([a-z_\\\\*]|\\\\*|)') + '(?=:)\\\\b'; }; function getValuesCSS(str) { return '\\\\b' + str.replace(/ /g, '(?!-)(?!:)\\\\b|\\\\b()') + '\\:\\\\b'; }; var keywords = 'ascent azimuth background-attachment background-color background-image background-position ' + 'background-repeat background baseline bbox border-collapse border-color border-spacing border-style border-top ' + 'border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color ' + 'border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width ' + 'border-bottom-width border-left-width border-width border bottom cap-height caption-side centerline clear clip color ' + 'content counter-increment counter-reset cue-after cue-before cue cursor definition-src descent direction display ' + 'elevation empty-cells float font-size-adjust font-family font-size font-stretch font-style font-variant font-weight font ' + 'height left letter-spacing line-height list-style-image list-style-position list-style-type list-style margin-top ' + 'margin-right margin-bottom margin-left margin marker-offset marks mathline max-height max-width min-height min-width orphans ' + 'outline-color outline-style outline-width outline overflow padding-top padding-right padding-bottom padding-left padding page ' + 'page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position ' + 'quotes right richness size slope src speak-header speak-numeral speak-punctuation speak speech-rate stemh stemv stress ' + 'table-layout text-align top text-decoration text-indent text-shadow text-transform unicode-bidi unicode-range units-per-em ' + 'vertical-align visibility voice-family volume white-space widows width widths word-spacing x-height z-index'; var values = 'above absolute all always aqua armenian attr aural auto avoid baseline behind below bidi-override black blink block blue bold bolder '+ 'both bottom braille capitalize caption center center-left center-right circle close-quote code collapse compact condensed '+ 'continuous counter counters crop cross crosshair cursive dashed decimal decimal-leading-zero default digits disc dotted double '+ 'embed embossed e-resize expanded extra-condensed extra-expanded fantasy far-left far-right fast faster fixed format fuchsia '+ 'gray green groove handheld hebrew help hidden hide high higher icon inline-table inline inset inside invert italic '+ 'justify landscape large larger left-side left leftwards level lighter lime line-through list-item local loud lower-alpha '+ 'lowercase lower-greek lower-latin lower-roman lower low ltr marker maroon medium message-box middle mix move narrower '+ 'navy ne-resize no-close-quote none no-open-quote no-repeat normal nowrap n-resize nw-resize oblique olive once open-quote outset '+ 'outside overline pointer portrait pre print projection purple red relative repeat repeat-x repeat-y rgb ridge right right-side '+ 'rightwards rtl run-in screen scroll semi-condensed semi-expanded separate se-resize show silent silver slower slow '+ 'small small-caps small-caption smaller soft solid speech spell-out square s-resize static status-bar sub super sw-resize '+ 'table-caption table-cell table-column table-column-group table-footer-group table-header-group table-row table-row-group teal '+ 'text-bottom text-top thick thin top transparent tty tv ultra-condensed ultra-expanded underline upper-alpha uppercase upper-latin '+ 'upper-roman url visible wait white wider w-resize x-fast x-high x-large x-loud x-low x-slow x-small x-soft xx-large xx-small yellow'; var fonts = '[mM]onospace [tT]ahoma [vV]erdana [aA]rial [hH]elvetica [sS]ans-serif [sS]erif [cC]ourier mono sans serif'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // single quoted strings { regex: /\\#[a-fA-F0-9]{3,6}/g, css: 'value' }, // html colors { regex: /(-?\\d+)(\\.\\d+)?(px|em|pt|\\:|\\%|)/g, css: 'value' }, // sizes { regex: /!important/g, css: 'color3' }, // !important { regex: new RegExp(getKeywordsCSS(keywords), 'gm'), css: 'keyword' }, // keywords { regex: new RegExp(getValuesCSS(values), 'g'), css: 'value' }, // values { regex: new RegExp(this.getKeywords(fonts), 'g'), css: 'color1' } // fonts ]; this.forHtmlScript({ left: /(&lt;|)/gi, right: /(&lt;|)/gi }); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['css']; SyntaxHighlighter.brushes.CSS = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.334Z","updated":"2019-04-27T04:08:33.654Z","comments":true,"path":"scripts/shBrushCpp.js","permalink":"https://shaokang.ga/scripts/shBrushCpp.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Copyright 2006 Shin, YoungJin var datatypes = 'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD DWORDLONG DWORD_PTR ' + 'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' + 'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP ' + 'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY ' + 'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT ' + 'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE ' + 'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE LPCOLORREF ' + 'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR ' + 'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR PCWSTR ' + 'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE PHKEY PINT ' + 'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 PLONG64 POINTER_32 ' + 'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR ' + 'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 ' + 'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SHORT ' + 'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 ULONG ' + 'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM WPARAM WPARAM ' + 'char bool short int __int32 __int64 __int8 __int16 long float double __wchar_t ' + 'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception _EXCEPTION_POINTERS ' + 'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t __finddata64_t ' + '__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t ' + 'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t _purecall_handler ' + 'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function ' + 'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' + 'va_list wchar_t wctrans_t wctype_t wint_t signed'; var keywords = 'break case catch class const __finally __exception __try ' + 'const_cast continue private public protected __declspec ' + 'default delete deprecated dllexport dllimport do dynamic_cast ' + 'else enum explicit extern if for friend goto inline ' + 'mutable naked namespace new noinline noreturn nothrow ' + 'register reinterpret_cast return selectany ' + 'sizeof static static_cast struct switch template this ' + 'thread throw true false try typedef typeid typename union ' + 'using uuid virtual void volatile whcar_t while'; var functions = 'assert isalnum isalpha iscntrl isdigit isgraph islower isprint' + 'ispunct isspace isupper isxdigit tolower toupper errno localeconv ' + 'setlocale acos asin atan atan2 ceil cos cosh exp fabs floor fmod ' + 'frexp ldexp log log10 modf pow sin sinh sqrt tan tanh jmp_buf ' + 'longjmp setjmp raise signal sig_atomic_t va_arg va_end va_start ' + 'clearerr fclose feof ferror fflush fgetc fgetpos fgets fopen ' + 'fprintf fputc fputs fread freopen fscanf fseek fsetpos ftell ' + 'fwrite getc getchar gets perror printf putc putchar puts remove ' + 'rename rewind scanf setbuf setvbuf sprintf sscanf tmpfile tmpnam ' + 'ungetc vfprintf vprintf vsprintf abort abs atexit atof atoi atol ' + 'bsearch calloc div exit free getenv labs ldiv malloc mblen mbstowcs ' + 'mbtowc qsort rand realloc srand strtod strtol strtoul system ' + 'wcstombs wctomb memchr memcmp memcpy memmove memset strcat strchr ' + 'strcmp strcoll strcpy strcspn strerror strlen strncat strncmp ' + 'strncpy strpbrk strrchr strspn strstr strtok strxfrm asctime ' + 'clock ctime difftime gmtime localtime mktime strftime time'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // strings { regex: /^ *#.*/gm, css: 'preprocessor' }, { regex: new RegExp(this.getKeywords(datatypes), 'gm'), css: 'color1 bold' }, { regex: new RegExp(this.getKeywords(functions), 'gm'), css: 'functions bold' }, { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword bold' } ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['cpp', 'c']; SyntaxHighlighter.brushes.Cpp = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.506Z","updated":"2019-04-27T04:08:33.664Z","comments":true,"path":"scripts/shBrushDiff.js","permalink":"https://shaokang.ga/scripts/shBrushDiff.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { this.regexList = [ { regex: /^\\+\\+\\+.*$/gm, css: 'color2' }, { regex: /^\\-\\-\\-.*$/gm, css: 'color2' }, { regex: /^\\s.*$/gm, css: 'color1' }, { regex: /^@@.*@@$/gm, css: 'variable' }, { regex: /^\\+[^\\+]{1}.*$/gm, css: 'string' }, { regex: /^\\-[^\\-]{1}.*$/gm, css: 'comments' } ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['diff', 'patch']; SyntaxHighlighter.brushes.Diff = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.470Z","updated":"2019-04-27T04:08:33.662Z","comments":true,"path":"scripts/shBrushDelphi.js","permalink":"https://shaokang.ga/scripts/shBrushDelphi.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var keywords = 'abs addr and ansichar ansistring array as asm begin boolean byte cardinal ' + 'case char class comp const constructor currency destructor div do double ' + 'downto else end except exports extended false file finalization finally ' + 'for function goto if implementation in inherited int64 initialization ' + 'integer interface is label library longint longword mod nil not object ' + 'of on or packed pansichar pansistring pchar pcurrency pdatetime pextended ' + 'pint64 pointer private procedure program property pshortstring pstring ' + 'pvariant pwidechar pwidestring protected public published raise real real48 ' + 'record repeat set shl shortint shortstring shr single smallint string then ' + 'threadvar to true try type unit until uses val var varirnt while widechar ' + 'widestring with word write writeln xor'; this.regexList = [ { regex: /\\(\\*[\\s\\S]*?\\*\\)/gm, css: 'comments' }, // multiline comments (* *) { regex: /{(?!\\$)[\\s\\S]*?}/gm, css: 'comments' }, // multiline comments { } { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // strings { regex: /\\{\\$[a-zA-Z]+ .+\\}/g, css: 'color1' }, // compiler Directives and Region tags { regex: /\\b[\\d\\.]+\\b/g, css: 'value' }, // numbers 12345 { regex: /\\$[a-zA-Z0-9]+\\b/g, css: 'value' }, // numbers $F5D3 { regex: new RegExp(this.getKeywords(keywords), 'gmi'), css: 'keyword' } // keyword ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['delphi', 'pascal', 'pas']; SyntaxHighlighter.brushes.Delphi = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.538Z","updated":"2019-04-27T04:08:33.666Z","comments":true,"path":"scripts/shBrushErlang.js","permalink":"https://shaokang.ga/scripts/shBrushErlang.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Jean-Lou Dupont // http://jldupont.blogspot.com/2009/06/erlang-syntax-highlighter.html // According to: http://erlang.org/doc/reference_manual/introduction.html#1.5 var keywords = 'after and andalso band begin bnot bor bsl bsr bxor '+ 'case catch cond div end fun if let not of or orelse '+ 'query receive rem try when xor'+ // additional ' module export import define'; this.regexList = [ { regex: new RegExp(\"[A-Z][A-Za-z0-9_]+\", 'g'), css: 'constants' }, { regex: new RegExp(\"\\\\%.+\", 'gm'), css: 'comments' }, { regex: new RegExp(\"\\\\?[A-Za-z0-9_]+\", 'g'), css: 'preprocessor' }, { regex: new RegExp(\"[a-z0-9_]+:[a-z0-9_]+\", 'g'), css: 'functions' }, { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['erl', 'erlang']; SyntaxHighlighter.brushes.Erland = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.302Z","updated":"2019-04-27T04:08:33.645Z","comments":true,"path":"scripts/shBrushColdFusion.js","permalink":"https://shaokang.ga/scripts/shBrushColdFusion.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Jen // http://www.jensbits.com/2009/05/14/coldfusion-brush-for-syntaxhighlighter-plus var funcs = 'Abs ACos AddSOAPRequestHeader AddSOAPResponseHeader AjaxLink AjaxOnLoad ArrayAppend ArrayAvg ArrayClear ArrayDeleteAt ' + 'ArrayInsertAt ArrayIsDefined ArrayIsEmpty ArrayLen ArrayMax ArrayMin ArraySet ArraySort ArraySum ArraySwap ArrayToList ' + 'Asc ASin Atn BinaryDecode BinaryEncode BitAnd BitMaskClear BitMaskRead BitMaskSet BitNot BitOr BitSHLN BitSHRN BitXor ' + 'Ceiling CharsetDecode CharsetEncode Chr CJustify Compare CompareNoCase Cos CreateDate CreateDateTime CreateObject ' + 'CreateODBCDate CreateODBCDateTime CreateODBCTime CreateTime CreateTimeSpan CreateUUID DateAdd DateCompare DateConvert ' + 'DateDiff DateFormat DatePart Day DayOfWeek DayOfWeekAsString DayOfYear DaysInMonth DaysInYear DE DecimalFormat DecrementValue ' + 'Decrypt DecryptBinary DeleteClientVariable DeserializeJSON DirectoryExists DollarFormat DotNetToCFType Duplicate Encrypt ' + 'EncryptBinary Evaluate Exp ExpandPath FileClose FileCopy FileDelete FileExists FileIsEOF FileMove FileOpen FileRead ' + 'FileReadBinary FileReadLine FileSetAccessMode FileSetAttribute FileSetLastModified FileWrite Find FindNoCase FindOneOf ' + 'FirstDayOfMonth Fix FormatBaseN GenerateSecretKey GetAuthUser GetBaseTagData GetBaseTagList GetBaseTemplatePath ' + 'GetClientVariablesList GetComponentMetaData GetContextRoot GetCurrentTemplatePath GetDirectoryFromPath GetEncoding ' + 'GetException GetFileFromPath GetFileInfo GetFunctionList GetGatewayHelper GetHttpRequestData GetHttpTimeString ' + 'GetK2ServerDocCount GetK2ServerDocCountLimit GetLocale GetLocaleDisplayName GetLocalHostIP GetMetaData GetMetricData ' + 'GetPageContext GetPrinterInfo GetProfileSections GetProfileString GetReadableImageFormats GetSOAPRequest GetSOAPRequestHeader ' + 'GetSOAPResponse GetSOAPResponseHeader GetTempDirectory GetTempFile GetTemplatePath GetTickCount GetTimeZoneInfo GetToken ' + 'GetUserRoles GetWriteableImageFormats Hash Hour HTMLCodeFormat HTMLEditFormat IIf ImageAddBorder ImageBlur ImageClearRect ' + 'ImageCopy ImageCrop ImageDrawArc ImageDrawBeveledRect ImageDrawCubicCurve ImageDrawLine ImageDrawLines ImageDrawOval ' + 'ImageDrawPoint ImageDrawQuadraticCurve ImageDrawRect ImageDrawRoundRect ImageDrawText ImageFlip ImageGetBlob ImageGetBufferedImage ' + 'ImageGetEXIFTag ImageGetHeight ImageGetIPTCTag ImageGetWidth ImageGrayscale ImageInfo ImageNegative ImageNew ImageOverlay ImagePaste ' + 'ImageRead ImageReadBase64 ImageResize ImageRotate ImageRotateDrawingAxis ImageScaleToFit ImageSetAntialiasing ImageSetBackgroundColor ' + 'ImageSetDrawingColor ImageSetDrawingStroke ImageSetDrawingTransparency ImageSharpen ImageShear ImageShearDrawingAxis ImageTranslate ' + 'ImageTranslateDrawingAxis ImageWrite ImageWriteBase64 ImageXORDrawingMode IncrementValue InputBaseN Insert Int IsArray IsBinary ' + 'IsBoolean IsCustomFunction IsDate IsDDX IsDebugMode IsDefined IsImage IsImageFile IsInstanceOf IsJSON IsLeapYear IsLocalHost ' + 'IsNumeric IsNumericDate IsObject IsPDFFile IsPDFObject IsQuery IsSimpleValue IsSOAPRequest IsStruct IsUserInAnyRole IsUserInRole ' + 'IsUserLoggedIn IsValid IsWDDX IsXML IsXmlAttribute IsXmlDoc IsXmlElem IsXmlNode IsXmlRoot JavaCast JSStringFormat LCase Left Len ' + 'ListAppend ListChangeDelims ListContains ListContainsNoCase ListDeleteAt ListFind ListFindNoCase ListFirst ListGetAt ListInsertAt ' + 'ListLast ListLen ListPrepend ListQualify ListRest ListSetAt ListSort ListToArray ListValueCount ListValueCountNoCase LJustify Log ' + 'Log10 LSCurrencyFormat LSDateFormat LSEuroCurrencyFormat LSIsCurrency LSIsDate LSIsNumeric LSNumberFormat LSParseCurrency LSParseDateTime ' + 'LSParseEuroCurrency LSParseNumber LSTimeFormat LTrim Max Mid Min Minute Month MonthAsString Now NumberFormat ParagraphFormat ParseDateTime ' + 'Pi PrecisionEvaluate PreserveSingleQuotes Quarter QueryAddColumn QueryAddRow QueryConvertForGrid QueryNew QuerySetCell QuotedValueList Rand ' + 'Randomize RandRange REFind REFindNoCase ReleaseComObject REMatch REMatchNoCase RemoveChars RepeatString Replace ReplaceList ReplaceNoCase ' + 'REReplace REReplaceNoCase Reverse Right RJustify Round RTrim Second SendGatewayMessage SerializeJSON SetEncoding SetLocale SetProfileString ' + 'SetVariable Sgn Sin Sleep SpanExcluding SpanIncluding Sqr StripCR StructAppend StructClear StructCopy StructCount StructDelete StructFind ' + 'StructFindKey StructFindValue StructGet StructInsert StructIsEmpty StructKeyArray StructKeyExists StructKeyList StructKeyList StructNew ' + 'StructSort StructUpdate Tan TimeFormat ToBase64 ToBinary ToScript ToString Trim UCase URLDecode URLEncodedFormat URLSessionFormat Val ' + 'ValueList VerifyClient Week Wrap Wrap WriteOutput XmlChildPos XmlElemNew XmlFormat XmlGetNodeType XmlNew XmlParse XmlSearch XmlTransform ' + 'XmlValidate Year YesNoFormat'; var keywords = 'cfabort cfajaximport cfajaxproxy cfapplet cfapplication cfargument cfassociate cfbreak cfcache cfcalendar ' + 'cfcase cfcatch cfchart cfchartdata cfchartseries cfcol cfcollection cfcomponent cfcontent cfcookie cfdbinfo ' + 'cfdefaultcase cfdirectory cfdiv cfdocument cfdocumentitem cfdocumentsection cfdump cfelse cfelseif cferror ' + 'cfexchangecalendar cfexchangeconnection cfexchangecontact cfexchangefilter cfexchangemail cfexchangetask ' + 'cfexecute cfexit cffeed cffile cfflush cfform cfformgroup cfformitem cfftp cffunction cfgrid cfgridcolumn ' + 'cfgridrow cfgridupdate cfheader cfhtmlhead cfhttp cfhttpparam cfif cfimage cfimport cfinclude cfindex ' + 'cfinput cfinsert cfinterface cfinvoke cfinvokeargument cflayout cflayoutarea cfldap cflocation cflock cflog ' + 'cflogin cfloginuser cflogout cfloop cfmail cfmailparam cfmailpart cfmenu cfmenuitem cfmodule cfNTauthenticate ' + 'cfobject cfobjectcache cfoutput cfparam cfpdf cfpdfform cfpdfformparam cfpdfparam cfpdfsubform cfpod cfpop ' + 'cfpresentation cfpresentationslide cfpresenter cfprint cfprocessingdirective cfprocparam cfprocresult ' + 'cfproperty cfquery cfqueryparam cfregistry cfreport cfreportparam cfrethrow cfreturn cfsavecontent cfschedule ' + 'cfscript cfsearch cfselect cfset cfsetting cfsilent cfslider cfsprydataset cfstoredproc cfswitch cftable ' + 'cftextarea cfthread cfthrow cftimer cftooltip cftrace cftransaction cftree cftreeitem cftry cfupdate cfwddx ' + 'cfwindow cfxml cfzip cfzipparam'; var operators = 'all and any between cross in join like not null or outer some'; this.regexList = [ { regex: new RegExp('--(.*)$', 'gm'), css: 'comments' }, // one line and multiline comments { regex: SyntaxHighlighter.regexLib.xmlComments, css: 'comments' }, // single quoted strings { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // single quoted strings { regex: new RegExp(this.getKeywords(funcs), 'gmi'), css: 'functions' }, // functions { regex: new RegExp(this.getKeywords(operators), 'gmi'), css: 'color1' }, // operators and such { regex: new RegExp(this.getKeywords(keywords), 'gmi'), css: 'keyword' } // keyword ]; } Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['coldfusion','cf']; SyntaxHighlighter.brushes.ColdFusion = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.570Z","updated":"2019-04-27T04:08:33.669Z","comments":true,"path":"scripts/shBrushGroovy.js","permalink":"https://shaokang.ga/scripts/shBrushGroovy.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Andres Almiray // http://jroller.com/aalmiray/entry/nice_source_code_syntax_highlighter var keywords = 'as assert break case catch class continue def default do else extends finally ' + 'if in implements import instanceof interface new package property return switch ' + 'throw throws try while public protected private static'; var types = 'void boolean byte char short int long float double'; var constants = 'null'; var methods = 'allProperties count get size '+ 'collect each eachProperty eachPropertyName eachWithIndex find findAll ' + 'findIndexOf grep inject max min reverseEach sort ' + 'asImmutable asSynchronized flatten intersect join pop reverse subMap toList ' + 'padRight padLeft contains eachMatch toCharacter toLong toUrl tokenize ' + 'eachFile eachFileRecurse eachB yte eachLine readBytes readLine getText ' + 'splitEachLine withReader append encodeBase64 decodeBase64 filterLine ' + 'transformChar transformLine withOutputStream withPrintWriter withStream ' + 'withStreams withWriter withWriterAppend write writeLine '+ 'dump inspect invokeMethod print println step times upto use waitForOrKill '+ 'getText'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // strings { regex: /\"\"\".*\"\"\"/g, css: 'string' }, // GStrings { regex: new RegExp('\\\\b([\\\\d]+(\\\\.[\\\\d]+)?|0x[a-f0-9]+)\\\\b', 'gi'), css: 'value' }, // numbers { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, // goovy keyword { regex: new RegExp(this.getKeywords(types), 'gm'), css: 'color1' }, // goovy/java type { regex: new RegExp(this.getKeywords(constants), 'gm'), css: 'constants' }, // constants { regex: new RegExp(this.getKeywords(methods), 'gm'), css: 'functions' } // methods ]; this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags); } Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['groovy']; SyntaxHighlighter.brushes.Groovy = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.606Z","updated":"2019-04-27T04:08:33.672Z","comments":true,"path":"scripts/shBrushJava.js","permalink":"https://shaokang.ga/scripts/shBrushJava.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var keywords = 'abstract assert boolean break byte case catch char class const ' + 'continue default do double else enum extends ' + 'false final finally float for goto if implements import ' + 'instanceof int interface long native new null ' + 'package private protected public return ' + 'short static strictfp super switch synchronized this throw throws true ' + 'transient try void volatile while'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line comments { regex: /\\/\\*([^\\*][\\s\\S]*)?\\*\\//gm, css: 'comments' }, // multiline comments { regex: /\\/\\*(?!\\*\\/)\\*[\\s\\S]*?\\*\\//gm, css: 'preprocessor' }, // documentation comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // strings { regex: /\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b/gi, css: 'value' }, // numbers { regex: /(?!\\@interface\\b)\\@[\\$\\w]+\\b/g, css: 'color1' }, // annotation @anno { regex: /\\@interface\\b/g, css: 'color2' }, // @interface keyword { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } // java keyword ]; this.forHtmlScript({ left : /(&lt;|)/g }); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['java']; SyntaxHighlighter.brushes.Java = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.698Z","updated":"2019-04-27T04:08:33.677Z","comments":true,"path":"scripts/shBrushJScript.js","permalink":"https://shaokang.ga/scripts/shBrushJScript.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var keywords = 'break case catch continue ' + 'default delete do else false ' + 'for function if in instanceof ' + 'new null return super switch ' + 'this throw true try typeof var while with' ; var r = SyntaxHighlighter.regexLib; this.regexList = [ { regex: r.multiLineDoubleQuotedString, css: 'string' }, // double quoted strings { regex: r.multiLineSingleQuotedString, css: 'string' }, // single quoted strings { regex: r.singleLineCComments, css: 'comments' }, // one line comments { regex: r.multiLineCComments, css: 'comments' }, // multiline comments { regex: /\\s*#.*/gm, css: 'preprocessor' }, // preprocessor tags like #region and #endregion { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } // keywords ]; this.forHtmlScript(r.scriptScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['js', 'jscript', 'javascript']; SyntaxHighlighter.brushes.JScript = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.650Z","updated":"2019-04-27T04:08:33.675Z","comments":true,"path":"scripts/shBrushJavaFX.js","permalink":"https://shaokang.ga/scripts/shBrushJavaFX.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Patrick Webster // http://patrickwebster.blogspot.com/2009/04/javafx-brush-for-syntaxhighlighter.html var datatypes = 'Boolean Byte Character Double Duration ' + 'Float Integer Long Number Short String Void' ; var keywords = 'abstract after and as assert at before bind bound break catch class ' + 'continue def delete else exclusive extends false finally first for from ' + 'function if import in indexof init insert instanceof into inverse last ' + 'lazy mixin mod nativearray new not null on or override package postinit ' + 'protected public public-init public-read replace return reverse sizeof ' + 'step super then this throw true try tween typeof var where while with ' + 'attribute let private readonly static trigger' ; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, { regex: /(-?\\.?)(\\b(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[+-]?\\d+)?|0x[a-f\\d]+)\\b\\.?/gi, css: 'color2' }, // numbers { regex: new RegExp(this.getKeywords(datatypes), 'gm'), css: 'variable' }, // datatypes { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } ]; this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['jfx', 'javafx']; SyntaxHighlighter.brushes.JavaFX = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.834Z","updated":"2019-04-27T04:08:33.690Z","comments":true,"path":"scripts/shBrushPlain.js","permalink":"https://shaokang.ga/scripts/shBrushPlain.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['text', 'plain']; SyntaxHighlighter.brushes.Plain = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.742Z","updated":"2019-04-27T04:08:33.684Z","comments":true,"path":"scripts/shBrushPerl.js","permalink":"https://shaokang.ga/scripts/shBrushPerl.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by David Simmons-Duffin and Marty Kube var funcs = 'abs accept alarm atan2 bind binmode chdir chmod chomp chop chown chr ' + 'chroot close closedir connect cos crypt defined delete each endgrent ' + 'endhostent endnetent endprotoent endpwent endservent eof exec exists ' + 'exp fcntl fileno flock fork format formline getc getgrent getgrgid ' + 'getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr ' + 'getnetbyname getnetent getpeername getpgrp getppid getpriority ' + 'getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwuid ' + 'getservbyname getservbyport getservent getsockname getsockopt glob ' + 'gmtime grep hex index int ioctl join keys kill lc lcfirst length link ' + 'listen localtime lock log lstat map mkdir msgctl msgget msgrcv msgsnd ' + 'oct open opendir ord pack pipe pop pos print printf prototype push ' + 'quotemeta rand read readdir readline readlink readpipe recv rename ' + 'reset reverse rewinddir rindex rmdir scalar seek seekdir select semctl ' + 'semget semop send setgrent sethostent setnetent setpgrp setpriority ' + 'setprotoent setpwent setservent setsockopt shift shmctl shmget shmread ' + 'shmwrite shutdown sin sleep socket socketpair sort splice split sprintf ' + 'sqrt srand stat study substr symlink syscall sysopen sysread sysseek ' + 'system syswrite tell telldir time times tr truncate uc ucfirst umask ' + 'undef unlink unpack unshift utime values vec wait waitpid warn write'; var keywords = 'bless caller continue dbmclose dbmopen die do dump else elsif eval exit ' + 'for foreach goto if import last local my next no our package redo ref ' + 'require return sub tie tied unless untie until use wantarray while'; this.regexList = [ { regex: new RegExp('#[^!].*$', 'gm'), css: 'comments' }, { regex: new RegExp('^\\\\s*#!.*$', 'gm'), css: 'preprocessor' }, // shebang { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, { regex: new RegExp('(\\\\$|@|%)\\\\w+', 'g'), css: 'variable' }, { regex: new RegExp(this.getKeywords(funcs), 'gmi'), css: 'functions' }, { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } ]; this.forHtmlScript(SyntaxHighlighter.regexLib.phpScriptTags); } Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['perl', 'Perl', 'pl']; SyntaxHighlighter.brushes.Perl = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.786Z","updated":"2019-04-27T04:08:33.687Z","comments":true,"path":"scripts/shBrushPhp.js","permalink":"https://shaokang.ga/scripts/shBrushPhp.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var funcs = 'abs acos acosh addcslashes addslashes ' + 'array_change_key_case array_chunk array_combine array_count_values array_diff '+ 'array_diff_assoc array_diff_key array_diff_uassoc array_diff_ukey array_fill '+ 'array_filter array_flip array_intersect array_intersect_assoc array_intersect_key '+ 'array_intersect_uassoc array_intersect_ukey array_key_exists array_keys array_map '+ 'array_merge array_merge_recursive array_multisort array_pad array_pop array_product '+ 'array_push array_rand array_reduce array_reverse array_search array_shift '+ 'array_slice array_splice array_sum array_udiff array_udiff_assoc '+ 'array_udiff_uassoc array_uintersect array_uintersect_assoc '+ 'array_uintersect_uassoc array_unique array_unshift array_values array_walk '+ 'array_walk_recursive atan atan2 atanh base64_decode base64_encode base_convert '+ 'basename bcadd bccomp bcdiv bcmod bcmul bindec bindtextdomain bzclose bzcompress '+ 'bzdecompress bzerrno bzerror bzerrstr bzflush bzopen bzread bzwrite ceil chdir '+ 'checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split class_exists '+ 'closedir closelog copy cos cosh count count_chars date decbin dechex decoct '+ 'deg2rad delete ebcdic2ascii echo empty end ereg ereg_replace eregi eregi_replace error_log '+ 'error_reporting escapeshellarg escapeshellcmd eval exec exit exp explode extension_loaded '+ 'feof fflush fgetc fgetcsv fgets fgetss file_exists file_get_contents file_put_contents '+ 'fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype '+ 'floatval flock floor flush fmod fnmatch fopen fpassthru fprintf fputcsv fputs fread fscanf '+ 'fseek fsockopen fstat ftell ftok getallheaders getcwd getdate getenv gethostbyaddr gethostbyname '+ 'gethostbynamel getimagesize getlastmod getmxrr getmygid getmyinode getmypid getmyuid getopt '+ 'getprotobyname getprotobynumber getrandmax getrusage getservbyname getservbyport gettext '+ 'gettimeofday gettype glob gmdate gmmktime ini_alter ini_get ini_get_all ini_restore ini_set '+ 'interface_exists intval ip2long is_a is_array is_bool is_callable is_dir is_double '+ 'is_executable is_file is_finite is_float is_infinite is_int is_integer is_link is_long '+ 'is_nan is_null is_numeric is_object is_readable is_real is_resource is_scalar is_soap_fault '+ 'is_string is_subclass_of is_uploaded_file is_writable is_writeable mkdir mktime nl2br '+ 'parse_ini_file parse_str parse_url passthru pathinfo print readlink realpath rewind rewinddir rmdir '+ 'round str_ireplace str_pad str_repeat str_replace str_rot13 str_shuffle str_split '+ 'str_word_count strcasecmp strchr strcmp strcoll strcspn strftime strip_tags stripcslashes '+ 'stripos stripslashes stristr strlen strnatcasecmp strnatcmp strncasecmp strncmp strpbrk '+ 'strpos strptime strrchr strrev strripos strrpos strspn strstr strtok strtolower strtotime '+ 'strtoupper strtr strval substr substr_compare'; var keywords = 'abstract and array as break case catch cfunction class clone const continue declare default die do ' + 'else elseif enddeclare endfor endforeach endif endswitch endwhile extends final for foreach ' + 'function include include_once global goto if implements interface instanceof namespace new ' + 'old_function or private protected public return require require_once static switch ' + 'throw try use var while xor '; var constants = '__FILE__ __LINE__ __METHOD__ __FUNCTION__ __CLASS__'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // single quoted strings { regex: /\\$\\w+/g, css: 'variable' }, // variables { regex: new RegExp(this.getKeywords(funcs), 'gmi'), css: 'functions' }, // common functions { regex: new RegExp(this.getKeywords(constants), 'gmi'), css: 'constants' }, // constants { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } // keyword ]; this.forHtmlScript(SyntaxHighlighter.regexLib.phpScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['php']; SyntaxHighlighter.brushes.Php = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.886Z","updated":"2019-04-27T04:08:33.693Z","comments":true,"path":"scripts/shBrushPowerShell.js","permalink":"https://shaokang.ga/scripts/shBrushPowerShell.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributes by B.v.Zanten, Getronics // http://confluence.atlassian.com/display/CONFEXT/New+Code+Macro var keywords = 'Add-Content Add-History Add-Member Add-PSSnapin Clear(-Content)? Clear-Item ' + 'Clear-ItemProperty Clear-Variable Compare-Object ConvertFrom-SecureString Convert-Path ' + 'ConvertTo-Html ConvertTo-SecureString Copy(-Item)? Copy-ItemProperty Export-Alias ' + 'Export-Clixml Export-Console Export-Csv ForEach(-Object)? Format-Custom Format-List ' + 'Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command ' + 'Get-Content Get-Credential Get-Culture Get-Date Get-EventLog Get-ExecutionPolicy ' + 'Get-Help Get-History Get-Host Get-Item Get-ItemProperty Get-Location Get-Member ' + 'Get-PfxCertificate Get-Process Get-PSDrive Get-PSProvider Get-PSSnapin Get-Service ' + 'Get-TraceSource Get-UICulture Get-Unique Get-Variable Get-WmiObject Group-Object ' + 'Import-Alias Import-Clixml Import-Csv Invoke-Expression Invoke-History Invoke-Item ' + 'Join-Path Measure-Command Measure-Object Move(-Item)? Move-ItemProperty New-Alias ' + 'New-Item New-ItemProperty New-Object New-PSDrive New-Service New-TimeSpan ' + 'New-Variable Out-Default Out-File Out-Host Out-Null Out-Printer Out-String Pop-Location ' + 'Push-Location Read-Host Remove-Item Remove-ItemProperty Remove-PSDrive Remove-PSSnapin ' + 'Remove-Variable Rename-Item Rename-ItemProperty Resolve-Path Restart-Service Resume-Service ' + 'Select-Object Select-String Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content ' + 'Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-Location Set-PSDebug ' + 'Set-Service Set-TraceSource Set(-Variable)? Sort-Object Split-Path Start-Service ' + 'Start-Sleep Start-Transcript Stop-Process Stop-Service Stop-Transcript Suspend-Service ' + 'Tee-Object Test-Path Trace-Command Update-FormatData Update-TypeData Where(-Object)? ' + 'Write-Debug Write-Error Write(-Host)? Write-Output Write-Progress Write-Verbose Write-Warning'; var alias = 'ac asnp clc cli clp clv cpi cpp cvpa diff epal epcsv fc fl ' + 'ft fw gal gc gci gcm gdr ghy gi gl gm gp gps group gsv ' + 'gsnp gu gv gwmi iex ihy ii ipal ipcsv mi mp nal ndr ni nv oh rdr ' + 'ri rni rnp rp rsnp rv rvpa sal sasv sc select si sl sleep sort sp ' + 'spps spsv sv tee cat cd cp h history kill lp ls ' + 'mount mv popd ps pushd pwd r rm rmdir echo cls chdir del dir ' + 'erase rd ren type % \\\\?'; this.regexList = [ { regex: /#.*$/gm, css: 'comments' }, // one line comments { regex: /\\$[a-zA-Z0-9]+\\b/g, css: 'value' }, // variables $Computer1 { regex: /\\-[a-zA-Z]+\\b/g, css: 'keyword' }, // Operators -not -and -eq { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // strings { regex: new RegExp(this.getKeywords(keywords), 'gmi'), css: 'keyword' }, { regex: new RegExp(this.getKeywords(alias), 'gmi'), css: 'keyword' } ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['powershell', 'ps']; SyntaxHighlighter.brushes.PowerShell = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.978Z","updated":"2019-04-27T04:08:33.697Z","comments":true,"path":"scripts/shBrushRuby.js","permalink":"https://shaokang.ga/scripts/shBrushRuby.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Erik Peterson. var keywords = 'alias and BEGIN begin break case class def define_method defined do each else elsif ' + 'END end ensure false for if in module new next nil not or raise redo rescue retry return ' + 'self super then throw true undef unless until when while yield'; var builtins = 'Array Bignum Binding Class Continuation Dir Exception FalseClass File::Stat File Fixnum Fload ' + 'Hash Integer IO MatchData Method Module NilClass Numeric Object Proc Range Regexp String Struct::TMS Symbol ' + 'ThreadGroup Thread Time TrueClass'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLinePerlComments, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.singleQuotedString, css: 'string' }, // single quoted strings { regex: /\\b[A-Z0-9_]+\\b/g, css: 'constants' }, // constants { regex: /:[a-z][A-Za-z0-9_]*/g, css: 'color2' }, // symbols { regex: /(\\$|@@|@)\\w+/g, css: 'variable bold' }, // $global, @instance, and @@class variables { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, // keywords { regex: new RegExp(this.getKeywords(builtins), 'gm'), css: 'color1' } // builtins ]; this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['ruby', 'rails', 'ror', 'rb']; SyntaxHighlighter.brushes.Ruby = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:46.046Z","updated":"2019-04-27T04:08:33.703Z","comments":true,"path":"scripts/shBrushScala.js","permalink":"https://shaokang.ga/scripts/shBrushScala.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Yegor Jbanov and David Bernard. var keywords = 'val sealed case def true trait implicit forSome import match object null finally super ' + 'override try lazy for var catch throw type extends class while with new final yield abstract ' + 'else do if return protected private this package false'; var keyops = '[_:=>"},{"title":"","date":"2019-06-11T00:08:46.014Z","updated":"2019-04-27T04:08:33.700Z","comments":true,"path":"scripts/shBrushSass.js","permalink":"https://shaokang.ga/scripts/shBrushSass.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { function getKeywordsCSS(str) { return '\\\\b([a-z_]|)' + str.replace(/ /g, '(?=:)\\\\b|\\\\b([a-z_\\\\*]|\\\\*|)') + '(?=:)\\\\b'; }; function getValuesCSS(str) { return '\\\\b' + str.replace(/ /g, '(?!-)(?!:)\\\\b|\\\\b()') + '\\:\\\\b'; }; var keywords = 'ascent azimuth background-attachment background-color background-image background-position ' + 'background-repeat background baseline bbox border-collapse border-color border-spacing border-style border-top ' + 'border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color ' + 'border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width ' + 'border-bottom-width border-left-width border-width border bottom cap-height caption-side centerline clear clip color ' + 'content counter-increment counter-reset cue-after cue-before cue cursor definition-src descent direction display ' + 'elevation empty-cells float font-size-adjust font-family font-size font-stretch font-style font-variant font-weight font ' + 'height left letter-spacing line-height list-style-image list-style-position list-style-type list-style margin-top ' + 'margin-right margin-bottom margin-left margin marker-offset marks mathline max-height max-width min-height min-width orphans ' + 'outline-color outline-style outline-width outline overflow padding-top padding-right padding-bottom padding-left padding page ' + 'page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position ' + 'quotes right richness size slope src speak-header speak-numeral speak-punctuation speak speech-rate stemh stemv stress ' + 'table-layout text-align top text-decoration text-indent text-shadow text-transform unicode-bidi unicode-range units-per-em ' + 'vertical-align visibility voice-family volume white-space widows width widths word-spacing x-height z-index'; var values = 'above absolute all always aqua armenian attr aural auto avoid baseline behind below bidi-override black blink block blue bold bolder '+ 'both bottom braille capitalize caption center center-left center-right circle close-quote code collapse compact condensed '+ 'continuous counter counters crop cross crosshair cursive dashed decimal decimal-leading-zero digits disc dotted double '+ 'embed embossed e-resize expanded extra-condensed extra-expanded fantasy far-left far-right fast faster fixed format fuchsia '+ 'gray green groove handheld hebrew help hidden hide high higher icon inline-table inline inset inside invert italic '+ 'justify landscape large larger left-side left leftwards level lighter lime line-through list-item local loud lower-alpha '+ 'lowercase lower-greek lower-latin lower-roman lower low ltr marker maroon medium message-box middle mix move narrower '+ 'navy ne-resize no-close-quote none no-open-quote no-repeat normal nowrap n-resize nw-resize oblique olive once open-quote outset '+ 'outside overline pointer portrait pre print projection purple red relative repeat repeat-x repeat-y rgb ridge right right-side '+ 'rightwards rtl run-in screen scroll semi-condensed semi-expanded separate se-resize show silent silver slower slow '+ 'small small-caps small-caption smaller soft solid speech spell-out square s-resize static status-bar sub super sw-resize '+ 'table-caption table-cell table-column table-column-group table-footer-group table-header-group table-row table-row-group teal '+ 'text-bottom text-top thick thin top transparent tty tv ultra-condensed ultra-expanded underline upper-alpha uppercase upper-latin '+ 'upper-roman url visible wait white wider w-resize x-fast x-high x-large x-loud x-low x-slow x-small x-soft xx-large xx-small yellow'; var fonts = '[mM]onospace [tT]ahoma [vV]erdana [aA]rial [hH]elvetica [sS]ans-serif [sS]erif [cC]ourier mono sans serif'; var statements = '!important !default'; var preprocessor = '@import @extend @debug @warn @if @for @while @mixin @include'; var r = SyntaxHighlighter.regexLib; this.regexList = [ { regex: r.multiLineCComments, css: 'comments' }, // multiline comments { regex: r.singleLineCComments, css: 'comments' }, // singleline comments { regex: r.doubleQuotedString, css: 'string' }, // double quoted strings { regex: r.singleQuotedString, css: 'string' }, // single quoted strings { regex: /\\#[a-fA-F0-9]{3,6}/g, css: 'value' }, // html colors { regex: /\\b(-?\\d+)(\\.\\d+)?(px|em|pt|\\:|\\%|)\\b/g, css: 'value' }, // sizes { regex: /\\$\\w+/g, css: 'variable' }, // variables { regex: new RegExp(this.getKeywords(statements), 'g'), css: 'color3' }, // statements { regex: new RegExp(this.getKeywords(preprocessor), 'g'), css: 'preprocessor' }, // preprocessor { regex: new RegExp(getKeywordsCSS(keywords), 'gm'), css: 'keyword' }, // keywords { regex: new RegExp(getValuesCSS(values), 'g'), css: 'value' }, // values { regex: new RegExp(this.getKeywords(fonts), 'g'), css: 'color1' } // fonts ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['sass', 'scss']; SyntaxHighlighter.brushes.Sass = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:45.934Z","updated":"2019-04-27T04:08:33.695Z","comments":true,"path":"scripts/shBrushPython.js","permalink":"https://shaokang.ga/scripts/shBrushPython.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { // Contributed by Gheorghe Milas and Ahmad Sherif var keywords = 'and assert break class continue def del elif else ' + 'except exec finally for from global if import in is ' + 'lambda not or pass print raise return try yield while'; var funcs = '__import__ abs all any apply basestring bin bool buffer callable ' + 'chr classmethod cmp coerce compile complex delattr dict dir ' + 'divmod enumerate eval execfile file filter float format frozenset ' + 'getattr globals hasattr hash help hex id input int intern ' + 'isinstance issubclass iter len list locals long map max min next ' + 'object oct open ord pow print property range raw_input reduce ' + 'reload repr reversed round set setattr slice sorted staticmethod ' + 'str sum super tuple type type unichr unicode vars xrange zip'; var special = 'None True False self cls class_'; this.regexList = [ { regex: SyntaxHighlighter.regexLib.singleLinePerlComments, css: 'comments' }, { regex: /^\\s*@\\w+/gm, css: 'decorator' }, { regex: /(['\\\"]{3})([^\\1])*?\\1/gm, css: 'comments' }, { regex: /\"(?!\")(?:\\.|\\\\\\\"|[^\\\"\"\\n])*\"/gm, css: 'string' }, { regex: /'(?!')(?:\\.|(\\\\\\')|[^\\''\\n])*'/gm, css: 'string' }, { regex: /\\+|\\-|\\*|\\/|\\%|=|==/gm, css: 'keyword' }, { regex: /\\b\\d+\\.?\\w*/g, css: 'value' }, { regex: new RegExp(this.getKeywords(funcs), 'gmi'), css: 'functions' }, { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, { regex: new RegExp(this.getKeywords(special), 'gm'), css: 'color1' } ]; this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['py', 'python']; SyntaxHighlighter.brushes.Python = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:46.078Z","updated":"2019-04-27T04:08:33.705Z","comments":true,"path":"scripts/shBrushSql.js","permalink":"https://shaokang.ga/scripts/shBrushSql.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var funcs = 'abs avg case cast coalesce convert count current_timestamp ' + 'current_user day isnull left lower month nullif replace right ' + 'session_user space substring sum system_user upper user year'; var keywords = 'absolute action add after alter as asc at authorization begin bigint ' + 'binary bit by cascade char character check checkpoint close collate ' + 'column commit committed connect connection constraint contains continue ' + 'create cube current current_date current_time cursor database date ' + 'deallocate dec decimal declare default delete desc distinct double drop ' + 'dynamic else end end-exec escape except exec execute false fetch first ' + 'float for force foreign forward free from full function global goto grant ' + 'group grouping having hour ignore index inner insensitive insert instead ' + 'int integer intersect into is isolation key last level load local max min ' + 'minute modify move name national nchar next no numeric of off on only ' + 'open option order out output partial password precision prepare primary ' + 'prior privileges procedure public read real references relative repeatable ' + 'restrict return returns revoke rollback rollup rows rule schema scroll ' + 'second section select sequence serializable set size smallint static ' + 'statistics table temp temporary then time timestamp to top transaction ' + 'translation trigger true truncate uncommitted union unique update values ' + 'varchar varying view when where with work'; var operators = 'all and any between cross in join like not null or outer some'; this.regexList = [ { regex: /--(.*)$/gm, css: 'comments' }, // one line and multiline comments { regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString, css: 'string' }, // double quoted strings { regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString, css: 'string' }, // single quoted strings { regex: new RegExp(this.getKeywords(funcs), 'gmi'), css: 'color2' }, // functions { regex: new RegExp(this.getKeywords(operators), 'gmi'), css: 'color1' }, // operators and such { regex: new RegExp(this.getKeywords(keywords), 'gmi'), css: 'keyword' } // keyword ]; }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['sql']; SyntaxHighlighter.brushes.Sql = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:46.102Z","updated":"2019-04-27T04:08:33.708Z","comments":true,"path":"scripts/shBrushVb.js","permalink":"https://shaokang.ga/scripts/shBrushVb.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { var keywords = 'AddHandler AddressOf AndAlso Alias And Ansi As Assembly Auto ' + 'Boolean ByRef Byte ByVal Call Case Catch CBool CByte CChar CDate ' + 'CDec CDbl Char CInt Class CLng CObj Const CShort CSng CStr CType ' + 'Date Decimal Declare Default Delegate Dim DirectCast Do Double Each ' + 'Else ElseIf End Enum Erase Error Event Exit False Finally For Friend ' + 'Function Get GetType GoSub GoTo Handles If Implements Imports In ' + 'Inherits Integer Interface Is Let Lib Like Long Loop Me Mod Module ' + 'MustInherit MustOverride MyBase MyClass Namespace New Next Not Nothing ' + 'NotInheritable NotOverridable Object On Option Optional Or OrElse ' + 'Overloads Overridable Overrides ParamArray Preserve Private Property ' + 'Protected Public RaiseEvent ReadOnly ReDim REM RemoveHandler Resume ' + 'Return Select Set Shadows Shared Short Single Static Step Stop String ' + 'Structure Sub SyncLock Then Throw To True Try TypeOf Unicode Until ' + 'Variant When While With WithEvents WriteOnly Xor'; this.regexList = [ { regex: /'.*$/gm, css: 'comments' }, // one line comments { regex: SyntaxHighlighter.regexLib.doubleQuotedString, css: 'string' }, // strings { regex: /^\\s*#.*$/gm, css: 'preprocessor' }, // preprocessor tags like #region and #endregion { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } // vb keyword ]; this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags); }; Brush.prototype = new SyntaxHighlighter.Highlighter(); Brush.aliases = ['vb', 'vbnet']; SyntaxHighlighter.brushes.Vb = Brush; // CommonJS typeof(exports) != 'undefined' ? exports.Brush = Brush : null; })();"},{"title":"","date":"2019-06-11T00:08:46.226Z","updated":"2019-04-27T04:08:33.813Z","comments":true,"path":"scripts/shLegacy.js","permalink":"https://shaokang.ga/scripts/shLegacy.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ eval(function(p,a,c,k,e,d){e=function(c){return(c35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('3 u={8:{}};u.8={A:4(c,k,l,m,n,o){4 d(a,b){2 a!=1?a:b}4 f(a){2 a!=1?a.E():1}c=c.I(\":\");3 g=c[0],e={};t={\"r\":K};M=1;5=8.5;9(3 j R c)e[c[j]]=\"r\";k=f(d(k,5.C));l=f(d(l,5.D));m=f(d(m,5.s));o=f(d(o,5.Q));n=f(d(n,5[\"x-y\"]));2{P:g,C:d(t[e.O],k),D:d(t[e.N],l),s:d({\"r\":r}[e.s],m),\"x-y\":d(4(a,b){9(3 h=T S(\"^\"+b+\"\\\\\\\\[(?\\\\\\\\w+)\\\\\\\\]$\",\"U\"),i=1,p=0;p"},{"title":"","date":"2019-06-11T00:08:46.146Z","updated":"2019-04-27T04:08:33.711Z","comments":true,"path":"scripts/shBrushXml.js","permalink":"https://shaokang.ga/scripts/shBrushXml.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ ;(function() { // CommonJS typeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null; function Brush() { function process(match, regexInfo) { var constructor = SyntaxHighlighter.Match, code = match[0], tag = new XRegExp('(&lt;|"},{"title":"","date":"2019-06-11T00:08:46.226Z","updated":"2019-04-27T04:08:33.833Z","comments":true,"path":"src/shAutoloader.js","permalink":"https://shaokang.ga/src/shAutoloader.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ (function() { var sh = SyntaxHighlighter; /** * Provides functionality to dynamically load only the brushes that a needed to render the current page. * * There are two syntaxes that autoload understands. For example: * * SyntaxHighlighter.autoloader( * [ 'applescript', 'Scripts/shBrushAppleScript.js' ], * [ 'actionscript3', 'as3', 'Scripts/shBrushAS3.js' ] * ); * * or a more easily comprehendable one: * * SyntaxHighlighter.autoloader( * 'applescript Scripts/shBrushAppleScript.js', * 'actionscript3 as3 Scripts/shBrushAS3.js' * ); */ sh.autoloader = function() { var list = arguments, elements = sh.findElements(), brushes = {}, scripts = {}, all = SyntaxHighlighter.all, allCalled = false, allParams = null, i ; SyntaxHighlighter.all = function(params) { allParams = params; allCalled = true; }; function addBrush(aliases, url) { for (var i = 0; i < aliases.length; i++) brushes[aliases[i]] = url; }; function getAliases(item) { return item.pop ? item : item.split(/\\s+/) ; } // create table of aliases and script urls for (i = 0; i < list.length; i++) { var aliases = getAliases(list[i]), url = aliases.pop() ; addBrush(aliases, url); } // dynamically add tags to the document body for (i = 0; i < elements.length; i++) { var url = brushes[elements[i].params.brush]; if (!url) continue; scripts[url] = false; loadScript(url); } function loadScript(url) { var script = document.createElement('script'), done = false ; script.src = url; script.type = 'text/javascript'; script.language = 'javascript'; script.onload = script.onreadystatechange = function() { if (!done && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) { done = true; scripts[url] = true; checkAll(); // Handle memory leak in IE script.onload = script.onreadystatechange = null; script.parentNode.removeChild(script); } }; // sync way of adding script tags to the page document.body.appendChild(script); }; function checkAll() { for(var url in scripts) if (scripts[url] == false) return; if (allCalled) SyntaxHighlighter.highlight(allParams); }; }; })();"},{"title":"","date":"2019-06-11T00:08:46.230Z","updated":"2019-04-27T04:08:33.852Z","comments":true,"path":"src/shLegacy.js","permalink":"https://shaokang.ga/src/shLegacy.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ var dp = { SyntaxHighlighter : {} }; dp.SyntaxHighlighter = { parseParams: function( input, showGutter, showControls, collapseAll, firstLine, showColumns ) { function getValue(list, name) { var regex = new XRegExp('^' + name + '\\\\[(?\\\\w+)\\\\]$', 'gi'), match = null ; for (var i = 0; i < list.length; i++) if ((match = regex.exec(list[i])) != null) return match.value; return null; }; function defaultValue(value, def) { return value != null ? value : def; }; function asString(value) { return value != null ? value.toString() : null; }; var parts = input.split(':'), brushName = parts[0], options = {}, straight = { 'true' : true } reverse = { 'true' : false }, result = null, defaults = SyntaxHighlighter.defaults ; for (var i in parts) options[parts[i]] = 'true'; showGutter = asString(defaultValue(showGutter, defaults.gutter)); showControls = asString(defaultValue(showControls, defaults.toolbar)); collapseAll = asString(defaultValue(collapseAll, defaults.collapse)); showColumns = asString(defaultValue(showColumns, defaults.ruler)); firstLine = asString(defaultValue(firstLine, defaults['first-line'])); return { brush : brushName, gutter : defaultValue(reverse[options.nogutter], showGutter), toolbar : defaultValue(reverse[options.nocontrols], showControls), collapse : defaultValue(straight[options.collapse], collapseAll), // ruler : defaultValue(straight[options.showcolumns], showColumns), 'first-line' : defaultValue(getValue(parts, 'firstline'), firstLine) }; }, HighlightAll: function( name, showGutter /* optional */, showControls /* optional */, collapseAll /* optional */, firstLine /* optional */, showColumns /* optional */ ) { function findValue() { var a = arguments; for (var i = 0; i < a.length; i++) { if (a[i] === null) continue; if (typeof(a[i]) == 'string' && a[i] != '') return a[i] + ''; if (typeof(a[i]) == 'object' && a[i].value != '') return a[i].value + ''; } return null; }; function findTagsByName(list, name, tagName) { var tags = document.getElementsByTagName(tagName); for (var i = 0; i < tags.length; i++) if (tags[i].getAttribute('name') == name) list.push(tags[i]); } var elements = [], highlighter = null, registered = {}, propertyName = 'innerHTML' ; // for some reason IE doesn't find by name, however it does see them just fine by tag name... findTagsByName(elements, name, 'pre'); findTagsByName(elements, name, 'textarea'); if (elements.length === 0) return; for (var i = 0; i < elements.length; i++) { var element = elements[i], params = findValue( element.attributes['class'], element.className, element.attributes['language'], element.language ), language = '' ; if (params === null) continue; params = dp.SyntaxHighlighter.parseParams( params, showGutter, showControls, collapseAll, firstLine, showColumns ); SyntaxHighlighter.highlight(params, element); } } };"},{"title":"","date":"2019-06-11T00:08:46.194Z","updated":"2019-04-27T04:08:33.714Z","comments":true,"path":"scripts/shCore.js","permalink":"https://shaokang.ga/scripts/shCore.js","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ eval(function(p,a,c,k,e,d){e=function(c){return(c35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('K M;I(M)1S 2U(\"2a\\'t 4k M 4K 2g 3l 4G 4H\");(6(){6 r(f,e){I(!M.1R(f))1S 3m(\"3s 15 4R\");K a=f.1w;f=M(f.1m,t(f)+(e||\"\"));I(a)f.1w={1m:a.1m,19:a.19?a.19.1a(0):N};H f}6 t(f){H(f.1J?\"g\":\"\")+(f.4s?\"i\":\"\")+(f.4p?\"m\":\"\")+(f.4v?\"x\":\"\")+(f.3n?\"y\":\"\")}6 B(f,e,a,b){K c=u.L,d,h,g;v=R;5K{O(;c--;){g=u[c];I(a&g.3r&&(!g.2p||g.2p.W(b))){g.2q.12=e;I((h=g.2q.X(f))&&h.P===e){d={3k:g.2b.W(b,h,a),1C:h};1N}}}}5v(i){1S i}5q{v=11}H d}6 p(f,e,a){I(3b.Z.1i)H f.1i(e,a);O(a=a||0;a-1},3d:6(g){e+=g}};c-1){a=15(J.1m,n.Q.W(t(J),\"g\",\"\"));n.Q.W(f.1a(e.P),a,6(){O(K c=1;ce.P&&J.12--}H e};I(!D)15.Z.1A=6(f){(f=n.X.W(J,f))&&J.1J&&!f[0].L&&J.12>f.P&&J.12--;H!!f};1r.Z.1C=6(f){M.1R(f)||(f=15(f));I(f.1J){K e=n.1C.1p(J,14);f.12=0;H e}H f.X(J)};1r.Z.Q=6(f,e){K a=M.1R(f),b,c;I(a&&1j e.58()===\"3f\"&&e.1i(\"${\")===-1&&y)H n.Q.1p(J,14);I(a){I(f.1w)b=f.1w.19}Y f+=\"\";I(1j e===\"6\")c=n.Q.W(J,f,6(){I(b){14[0]=1f 1r(14[0]);O(K d=0;dd.L-3;){i=1r.Z.1a.W(g,-1)+i;g=1Q.3i(g/10)}H(g?d[g]||\"\":\"$\")+i}Y{g=+i;I(g-1?d[g+1]:h}})})}I(a&&f.1J)f.12=0;H c};1r.Z.1e=6(f,e){I(!M.1R(f))H n.1e.1p(J,14);K a=J+\"\",b=[],c=0,d,h;I(e===1d||+ec){b.U(a.1a(c,d.P));d.L>1&&d.P=e)1N}f.12===d.P&&f.12++}I(c===a.L){I(!n.1A.W(f,\"\")||h)b.U(\"\")}Y b.U(a.1a(c));H b.L>e?b.1a(0,e):b};M.1h(/\\\\(\\\\?#[^)]*\\\\)/,6(f){H n.1A.W(A,f.2S.1a(f.P+f[0].L))?\"\":\"(?:)\"});M.1h(/\\\\((?!\\\\?)/,6(){J.19.U(N);H\"(\"});M.1h(/\\\\(\\\\?/,6(f){J.19.U(f[1]);J.2N=R;H\"(\"});M.1h(/\\\\\\\\k/,6(f){K e=p(J.19,f[1]);H e>-1?\"\\\\\\\\\"+(e+1)+(3R(f.2S.3a(f.P+f[0].L))?\"\":\"(?:)\"):f[0]});M.1h(/\\\\[\\\\^?]/,6(f){H f[0]===\"[]\"?\"\\\\\\\\b\\\\\\\\B\":\"[\\\\\\\\s\\\\\\\\S]\"});M.1h(/^\\\\(\\\\?([5A]+)\\\\)/,6(f){J.3d(f[1]);H\"\"});M.1h(/(?:\\\\s+|#.*)+/,6(f){H n.1A.W(A,f.2S.1a(f.P+f[0].L))?\"\":\"(?:)\"},M.1B,6(){H J.2K(\"x\")});M.1h(/\\\\./,6(){H\"[\\\\\\\\s\\\\\\\\S]\"},M.1B,6(){H J.2K(\"s\")})})();1j 2e!=\"1d\"&&(2e.M=M);K 1v=6(){6 r(a,b){a.1l.1i(b)!=-1||(a.1l+=\" \"+b)}6 t(a){H a.1i(\"3e\")==0?a:\"3e\"+a}6 B(a){H e.1Y.2A[t(a)]}6 p(a,b,c){I(a==N)H N;K d=c!=R?a.3G:[a.2G],h={\"#\":\"1c\",\".\":\"1l\"}[b.1o(0,1)]||\"3h\",g,i;g=h!=\"3h\"?b.1o(1):b.5u();I((a[h]||\"\").1i(g)!=-1)H a;O(a=0;d&&a"},{"title":"","date":"2019-06-11T00:08:46.242Z","updated":"2019-04-27T04:08:33.856Z","comments":true,"path":"styles/shCore.css","permalink":"https://shaokang.ga/styles/shCore.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; }"},{"title":"","date":"2019-06-11T00:08:46.230Z","updated":"2019-04-27T04:08:33.837Z","comments":true,"path":"src/shCore.js","permalink":"https://shaokang.ga/src/shCore.js","excerpt":"","text":"var XRegExp; (function () { function s(f, i) { if (!XRegExp.isRegExp(f)) throw TypeError(\"type RegExp expected\"); var g = f._xregexp; f = XRegExp(f.source, t(f) + (i || \"\")); if (g) f._xregexp = { source: g.source, captureNames: g.captureNames ? g.captureNames.slice(0) : null }; return f } function t(f) { return (f.global ? \"g\" : \"\") + (f.ignoreCase ? \"i\" : \"\") + (f.multiline ? \"m\" : \"\") + (f.extended ? \"x\" : \"\") + (f.sticky ? \"y\" : \"\") } function z(f, i, g, a) { var b = v.length, c, d, e; A = true; try { for (; b--; ) { e = v[b]; if (g & e.scope && (!e.trigger || e.trigger.call(a))) { e.pattern.lastIndex = i; if ((d = e.pattern.exec(f)) && d.index === i) { c = { output: e.handler.call(a, d, g), match: d }; break } } } } catch (h) { throw h } finally { A = false } return c } function B(f, i, g) { if (Array.prototype.indexOf) return f.indexOf(i, g); for (g = g || 0; g < f.length; g++) if (f[g] === i) return g; return -1 } XRegExp = function (f, i) { var g = [], a = XRegExp.OUTSIDE_CLASS, b = 0, c, d; if (XRegExp.isRegExp(f)) { if (i !== undefined) throw TypeError(\"can't supply flags when constructing one RegExp from another\"); return s(f) } if (A) throw Error(\"can't call the XRegExp constructor within token definition functions\"); i = i || \"\"; for (c = { hasNamedCapture: false, captureNames: [], hasFlag: function (e) { return i.indexOf(e) > -1 }, setFlag: function (e) { i += e } }; b < f.length; ) if (d = z(f, b, a, c)) { g.push(d.output); b += d.match[0].length || 1 } else if (d = o.exec.call(C[a], f.slice(b))) { g.push(d[0]); b += d[0].length } else { d = f.charAt(b); if (d === \"[\") a = XRegExp.INSIDE_CLASS; else if (d === \"]\") a = XRegExp.OUTSIDE_CLASS; g.push(d); b++ } g = RegExp(g.join(\"\"), o.replace.call(i, D, \"\")); g._xregexp = { source: f, captureNames: c.hasNamedCapture ? c.captureNames : null }; return g }; XRegExp.version = \"1.5.0\"; XRegExp.INSIDE_CLASS = 1; XRegExp.OUTSIDE_CLASS = 2; var q = /\\$(?:(\\d\\d?|[$&`'])|{([$\\w]+)})/g, D = /[^gimy]+|([\\s\\S])(?=[\\s\\S]*\\1)/g, w = /^(?:[?*+]|{\\d+(?:,\\d*)?})\\??/, A = false, v = [], o = { exec: RegExp.prototype.exec, test: RegExp.prototype.test, match: String.prototype.match, replace: String.prototype.replace, split: String.prototype.split }, F = o.exec.call(/()??/, \"\")[1] === undefined, x = function () { var f = /^/g; o.test.call(f, \"\"); return !f.lastIndex } (), G = function () { var f = /x/g; o.replace.call(\"x\", f, \"\"); return !f.lastIndex } (), y = RegExp.prototype.sticky !== undefined, C = {}; C[XRegExp.INSIDE_CLASS] = /^(?:\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S]))/; C[XRegExp.OUTSIDE_CLASS] = /^(?:\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??)/; XRegExp.addToken = function (f, i, g, a) { v.push({ pattern: s(f, \"g\" + (y ? \"y\" : \"\")), handler: i, scope: g || XRegExp.OUTSIDE_CLASS, trigger: a || null }) }; XRegExp.cache = function (f, i) { var g = f + \"/\" + (i || \"\"); return XRegExp.cache[g] || (XRegExp.cache[g] = XRegExp(f, i)) }; XRegExp.copyAsGlobal = function (f) { return s(f, \"g\") }; XRegExp.escape = function (f) { return f.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") }; XRegExp.execAt = function (f, i, g, a) { i = s(i, \"g\" + (a && y ? \"y\" : \"\")); i.lastIndex = g = g || 0; f = i.exec(f); return a ? f && f.index === g ? f : null : f }; XRegExp.freezeTokens = function () { XRegExp.addToken = function () { throw Error(\"can't run addToken after freezeTokens\") } }; XRegExp.isRegExp = function (f) { return Object.prototype.toString.call(f) === \"[object RegExp]\" }; XRegExp.iterate = function (f, i, g, a) { for (var b = s(i, \"g\"), c = -1, d; d = b.exec(f); ) { g.call(a, d, ++c, f, b); b.lastIndex === d.index && b.lastIndex++ } if (i.global) i.lastIndex = 0 }; XRegExp.matchChain = function (f, i) { return function g(a, b) { var c = i[b].regex ? i[b] : { regex: i[b] }, d = s(c.regex, \"g\"), e = [], h; for (h = 0; h < a.length; h++) XRegExp.iterate(a[h], d, function (j) { e.push(c.backref ? j[c.backref] || \"\" : j[0]) }); return b === i.length - 1 || !e.length ? e : g(e, b + 1) } ([f], 0) }; RegExp.prototype.apply = function (f, i) { return this.exec(i[0]) }; RegExp.prototype.call = function (f, i) { return this.exec(i) }; RegExp.prototype.exec = function (f) { var i = o.exec.apply(this, arguments), g; if (i) { if (!F && i.length > 1 && B(i, \"\") > -1) { g = RegExp(this.source, o.replace.call(t(this), \"g\", \"\")); o.replace.call(f.toString().slice(i.index), g, function () { for (var b = 1; b < arguments.length - 2; b++) if (arguments[b] === undefined) i[b] = undefined }) } if (this._xregexp && this._xregexp.captureNames) for (var a = 1; a < i.length; a++) if (g = this._xregexp.captureNames[a - 1]) i[g] = i[a]; !x && this.global && !i[0].length && this.lastIndex > i.index && this.lastIndex-- } return i }; if (!x) RegExp.prototype.test = function (f) { (f = o.exec.call(this, f)) && this.global && !f[0].length && this.lastIndex > f.index && this.lastIndex--; return !!f }; String.prototype.match = function (f) { XRegExp.isRegExp(f) || (f = RegExp(f)); if (f.global) { var i = o.match.apply(this, arguments); f.lastIndex = 0; return i } return f.exec(this) }; String.prototype.replace = function (f, i) { var g = XRegExp.isRegExp(f), a, b; if (g && typeof i.valueOf() === \"string\" && i.indexOf(\"${\") === -1 && G) return o.replace.apply(this, arguments); if (g) { if (f._xregexp) a = f._xregexp.captureNames } else f += \"\"; if (typeof i === \"function\") b = o.replace.call(this, f, function () { if (a) { arguments[0] = new String(arguments[0]); for (var c = 0; c < a.length; c++) if (a[c]) arguments[0][a[c]] = arguments[c + 1] } if (g && f.global) f.lastIndex = arguments[arguments.length - 2] + arguments[0].length; return i.apply(null, arguments) }); else { b = this + \"\"; b = o.replace.call(b, f, function () { var c = arguments; return o.replace.call(i, q, function (d, e, h) { if (e) switch (e) { case \"$\": return \"$\"; case \"&\": return c[0]; case \"`\": return c[c.length - 1].slice(0, c[c.length - 2]); case \"'\": return c[c.length - 1].slice(c[c.length - 2] + c[0].length); default: h = \"\"; e = +e; if (!e) return d; for (; e > c.length - 3; ) { h = String.prototype.slice.call(e, -1) + h; e = Math.floor(e / 10) } return (e ? c[e] || \"\" : \"$\") + h } else { e = +h; if (e -1 ? c[e + 1] : d } }) }) } if (g && f.global) f.lastIndex = 0; return b }; String.prototype.split = function (f, i) { if (!XRegExp.isRegExp(f)) return o.split.apply(this, arguments); var g = this + \"\", a = [], b = 0, c, d; if (i === undefined || +i < 0) i = Infinity; else { i = Math.floor(+i); if (!i) return [] } for (f = XRegExp.copyAsGlobal(f); c = f.exec(g); ) { if (f.lastIndex > b) { a.push(g.slice(b, c.index)); c.length > 1 && c.index < g.length && Array.prototype.push.apply(a, c.slice(1)); d = c[0].length; b = f.lastIndex; if (a.length >= i) break } f.lastIndex === c.index && f.lastIndex++ } if (b === g.length) { if (!o.test.call(f, \"\") || d) a.push(\"\") } else a.push(g.slice(b)); return a.length > i ? a.slice(0, i) : a }; XRegExp.addToken(/\\(\\?#[^)]*\\)/, function (f) { return o.test.call(w, f.input.slice(f.index + f[0].length)) ? \"\" : \"(?:)\" }); XRegExp.addToken(/\\((?!\\?)/, function () { this.captureNames.push(null); return \"(\" }); XRegExp.addToken(/\\(\\?/, function (f) { this.captureNames.push(f[1]); this.hasNamedCapture = true; return \"(\" }); XRegExp.addToken(/\\\\k/, function (f) { var i = B(this.captureNames, f[1]); return i > -1 ? \"\\\\\" + (i + 1) + (isNaN(f.input.charAt(f.index + f[0].length)) ? \"\" : \"(?:)\") : f[0] }); XRegExp.addToken(/\\[\\^?]/, function (f) { return f[0] === \"[]\" ? \"\\\\b\\\\B\" : \"[\\\\s\\\\S]\" }); XRegExp.addToken(/^\\(\\?([imsx]+)\\)/, function (f) { this.setFlag(f[1]); return \"\" }); XRegExp.addToken(/(?:\\s+|#.*)+/, function (f) { return o.test.call(w, f.input.slice(f.index + f[0].length)) ? \"\" : \"(?:)\" }, XRegExp.OUTSIDE_CLASS, function () { return this.hasFlag(\"x\") }); XRegExp.addToken(/\\./, function () { return \"[\\\\s\\\\S]\" }, XRegExp.OUTSIDE_CLASS, function () { return this.hasFlag(\"s\") }) })(); /** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ // // Begin anonymous function. This is used to contain local scope variables without polutting global scope. // var SyntaxHighlighter = function() { // CommonJS if (typeof(require) != 'undefined' && typeof(XRegExp) == 'undefined') { XRegExp = require('XRegExp').XRegExp; } // Shortcut object which will be assigned to the SyntaxHighlighter variable. // This is a shorthand for local reference in order to avoid long namespace // references to SyntaxHighlighter.whatever... var sh = { defaults : { /** Additional CSS class names to be added to highlighter elements. */ 'class-name' : '', /** First line number. */ 'first-line' : 1, /** * Pads line numbers. Possible values are: * * false - don't pad line numbers. * true - automaticaly pad numbers with minimum required number of leading zeroes. * [int] - length up to which pad line numbers. */ 'pad-line-numbers' : false, /** Lines to highlight. */ 'highlight' : null, /** Title to be displayed above the code block. */ 'title' : null, /** Enables or disables smart tabs. */ 'smart-tabs' : true, /** Gets or sets tab size. */ 'tab-size' : 4, /** Enables or disables gutter. */ 'gutter' : true, /** Enables or disables toolbar. */ 'toolbar' : true, /** Enables quick code copy and paste from double click. */ 'quick-code' : true, /** Forces code view to be collapsed. */ 'collapse' : false, /** Enables or disables automatic links. */ 'auto-links' : true, /** Gets or sets light mode. Equavalent to turning off gutter and toolbar. */ 'light' : false, 'html-script' : false }, config : { space : '&nbsp;', /** Enables use of tags. */ useScriptTags : true, /** Blogger mode flag. */ bloggerMode : false, stripBrs : false, /** Name of the tag that SyntaxHighlighter will automatically look for. */ tagName : 'pre', strings : { expandSource : 'expand source', help : '?', alert: 'SyntaxHighlighter\\n\\n', noBrush : 'Can\\'t find brush for: ', brushNotHtmlScript : 'Brush wasn\\'t configured for html-script option: ', // this is populated by the build script aboutDialog : 'About SyntaxHighlighterSyntaxHighlighterversion 3.0.83 (July 02 2010)http://alexgorbatchev.com/SyntaxHighlighterJavaScript code syntax highlighter.Copyright 2004-2010 Alex Gorbatchev.If you like this script, please donate to keep development active!' } }, /** Internal 'global' variables. */ vars : { discoveredBrushes : null, highlighters : {} }, /** This object is populated by user included external brush files. */ brushes : {}, /** Common regular expressions. */ regexLib : { multiLineCComments : /\\/\\*[\\s\\S]*?\\*\\//gm, singleLineCComments : /\\/\\/.*$/gm, singleLinePerlComments : /#.*$/gm, doubleQuotedString : /\"([^\\\\\"\\n]|\\\\.)*\"/g, singleQuotedString : /'([^\\\\'\\n]|\\\\.)*'/g, multiLineDoubleQuotedString : new XRegExp('\"([^\\\\\\\\\"]|\\\\\\\\.)*\"', 'gs'), multiLineSingleQuotedString : new XRegExp(\"'([^\\\\\\\\']|\\\\\\\\.)*'\", 'gs'), xmlComments : /(&lt;|)/gm, url : /\\w+:\\/\\/[\\w-.\\/?%&=:@;]*/g, /** tags. */ phpScriptTags : { left: /(&lt;|)/g }, /** tags. */ aspScriptTags : { left: /(&lt;|)/g }, /** tags. */ scriptScriptTags : { left: /(&lt;|)/gi, right: /(&lt;|)/gi } }, toolbar: { /** * Generates HTML markup for the toolbar. * @param {Highlighter} highlighter Highlighter instance. * @return {String} Returns HTML markup. */ getHtml: function(highlighter) { var html = '', items = sh.toolbar.items, list = items.list ; function defaultGetHtml(highlighter, name) { return sh.toolbar.getButtonHtml(highlighter, name, sh.config.strings[name]); }; for (var i = 0; i < list.length; i++) html += (items[list[i]].getHtml || defaultGetHtml)(highlighter, list[i]); html += ''; return html; }, /** * Generates HTML markup for a regular button in the toolbar. * @param {Highlighter} highlighter Highlighter instance. * @param {String} commandName Command name that would be executed. * @param {String} label Label text to display. * @return {String} Returns HTML markup. */ getButtonHtml: function(highlighter, commandName, label) { return '' + label + '' ; }, /** * Event handler for a toolbar anchor. */ handler: function(e) { var target = e.target, className = target.className || '' ; function getValue(name) { var r = new RegExp(name + '_(\\\\w+)'), match = r.exec(className) ; return match ? match[1] : null; }; var highlighter = getHighlighterById(findParentElement(target, '.syntaxhighlighter').id), commandName = getValue('command') ; // execute the toolbar command if (highlighter && commandName) sh.toolbar.items[commandName].execute(highlighter); // disable default A click behaviour e.preventDefault(); }, /** Collection of toolbar items. */ items : { // Ordered lis of items in the toolbar. Can't expect `for (var n in items)` to be consistent. list: ['expandSource', 'help'], expandSource: { getHtml: function(highlighter) { if (highlighter.getParam('collapse') != true) return ''; var title = highlighter.getParam('title'); return sh.toolbar.getButtonHtml(highlighter, 'expandSource', title ? title : sh.config.strings.expandSource); }, execute: function(highlighter) { var div = getHighlighterDivById(highlighter.id); removeClass(div, 'collapsed'); } }, /** Command to display the about dialog window. */ help: { execute: function(highlighter) { var wnd = popup('', '_blank', 500, 250, 'scrollbars=0'), doc = wnd.document ; doc.write(sh.config.strings.aboutDialog); doc.close(); wnd.focus(); } } } }, /** * Finds all elements on the page which should be processes by SyntaxHighlighter. * * @param {Object} globalParams Optional parameters which override element's * parameters. Only used if element is specified. * * @param {Object} element Optional element to highlight. If none is * provided, all elements in the current document * are returned which qualify. * * @return {Array} Returns list of { target: DOMElement, params: Object } objects. */ findElements: function(globalParams, element) { var elements = element ? [element] : toArray(document.getElementsByTagName(sh.config.tagName)), conf = sh.config, result = [] ; // support for feature if (conf.useScriptTags) elements = elements.concat(getSyntaxHighlighterScriptTags()); if (elements.length === 0) return result; for (var i = 0; i < elements.length; i++) { var item = { target: elements[i], // local params take precedence over globals params: merge(globalParams, parseParams(elements[i].className)) }; if (item.params['brush'] == null) continue; result.push(item); } return result; }, /** * Shorthand to highlight all elements on the page that are marked as * SyntaxHighlighter source code. * * @param {Object} globalParams Optional parameters which override element's * parameters. Only used if element is specified. * * @param {Object} element Optional element to highlight. If none is * provided, all elements in the current document * are highlighted. */ highlight: function(globalParams, element) { var elements = this.findElements(globalParams, element), propertyName = 'innerHTML', highlighter = null, conf = sh.config ; if (elements.length === 0) return; for (var i = 0; i < elements.length; i++) { var element = elements[i], target = element.target, params = element.params, brushName = params.brush, code ; if (brushName == null) continue; // Instantiate a brush if (params['html-script'] == 'true' || sh.defaults['html-script'] == true) { highlighter = new sh.HtmlScript(brushName); brushName = 'htmlscript'; } else { var brush = findBrush(brushName); if (brush) highlighter = new brush(); else continue; } code = target[propertyName]; // remove CDATA from tags if it's present if (conf.useScriptTags) code = stripCData(code); // Inject title if the attribute is present if ((target.title || '') != '') params.title = target.title; params['brush'] = brushName; highlighter.init(params); element = highlighter.getDiv(code); // carry over ID if ((target.id || '') != '') element.id = target.id; target.parentNode.replaceChild(element, target); } }, /** * Main entry point for the SyntaxHighlighter. * @param {Object} params Optional params to apply to all highlighted elements. */ all: function(params) { attachEvent( window, 'load', function() { sh.highlight(params); } ); } }; // end of sh sh['all'] = sh.all; sh['highlight'] = sh.highlight; /** * Checks if target DOM elements has specified CSS class. * @param {DOMElement} target Target DOM element to check. * @param {String} className Name of the CSS class to check for. * @return {Boolean} Returns true if class name is present, false otherwise. */ function hasClass(target, className) { return target.className.indexOf(className) != -1; }; /** * Adds CSS class name to the target DOM element. * @param {DOMElement} target Target DOM element. * @param {String} className New CSS class to add. */ function addClass(target, className) { if (!hasClass(target, className)) target.className += ' ' + className; }; /** * Removes CSS class name from the target DOM element. * @param {DOMElement} target Target DOM element. * @param {String} className CSS class to remove. */ function removeClass(target, className) { target.className = target.className.replace(className, ''); }; /** * Converts the source to array object. Mostly used for function arguments and * lists returned by getElementsByTagName() which aren't Array objects. * @param {List} source Source list. * @return {Array} Returns array. */ function toArray(source) { var result = []; for (var i = 0; i < source.length; i++) result.push(source[i]); return result; }; /** * Splits block of text into lines. * @param {String} block Block of text. * @return {Array} Returns array of lines. */ function splitLines(block) { return block.split('\\n'); } /** * Generates HTML ID for the highlighter. * @param {String} highlighterId Highlighter ID. * @return {String} Returns HTML ID. */ function getHighlighterId(id) { var prefix = 'highlighter_'; return id.indexOf(prefix) == 0 ? id : prefix + id; }; /** * Finds Highlighter instance by ID. * @param {String} highlighterId Highlighter ID. * @return {Highlighter} Returns instance of the highlighter. */ function getHighlighterById(id) { return sh.vars.highlighters[getHighlighterId(id)]; }; /** * Finds highlighter's DIV container. * @param {String} highlighterId Highlighter ID. * @return {Element} Returns highlighter's DIV element. */ function getHighlighterDivById(id) { return document.getElementById(getHighlighterId(id)); }; /** * Stores highlighter so that getHighlighterById() can do its thing. Each * highlighter must call this method to preserve itself. * @param {Highilghter} highlighter Highlighter instance. */ function storeHighlighter(highlighter) { sh.vars.highlighters[getHighlighterId(highlighter.id)] = highlighter; }; /** * Looks for a child or parent node which has specified classname. * Equivalent to jQuery's $(container).find(\".className\") * @param {Element} target Target element. * @param {String} search Class name or node name to look for. * @param {Boolean} reverse If set to true, will go up the node tree instead of down. * @return {Element} Returns found child or parent element on null. */ function findElement(target, search, reverse /* optional */) { if (target == null) return null; var nodes = reverse != true ? target.childNodes : [ target.parentNode ], propertyToFind = { '#' : 'id', '.' : 'className' }[search.substr(0, 1)] || 'nodeName', expectedValue, found ; expectedValue = propertyToFind != 'nodeName' ? search.substr(1) : search.toUpperCase() ; // main return of the found node if ((target[propertyToFind] || '').indexOf(expectedValue) != -1) return target; for (var i = 0; nodes && i < nodes.length && found == null; i++) found = findElement(nodes[i], search, reverse); return found; }; /** * Looks for a parent node which has specified classname. * This is an alias to findElement(container, className, true). * @param {Element} target Target element. * @param {String} className Class name to look for. * @return {Element} Returns found parent element on null. */ function findParentElement(target, className) { return findElement(target, className, true); }; /** * Finds an index of element in the array. * @ignore * @param {Object} searchElement * @param {Number} fromIndex * @return {Number} Returns index of element if found; -1 otherwise. */ function indexOf(array, searchElement, fromIndex) { fromIndex = Math.max(fromIndex || 0, 0); for (var i = fromIndex; i < array.length; i++) if(array[i] == searchElement) return i; return -1; }; /** * Generates a unique element ID. */ function guid(prefix) { return (prefix || '') + Math.round(Math.random() * 1000000).toString(); }; /** * Merges two objects. Values from obj2 override values in obj1. * Function is NOT recursive and works only for one dimensional objects. * @param {Object} obj1 First object. * @param {Object} obj2 Second object. * @return {Object} Returns combination of both objects. */ function merge(obj1, obj2) { var result = {}, name; for (name in obj1) result[name] = obj1[name]; for (name in obj2) result[name] = obj2[name]; return result; }; /** * Attempts to convert string to boolean. * @param {String} value Input string. * @return {Boolean} Returns true if input was \"true\", false if input was \"false\" and value otherwise. */ function toBoolean(value) { var result = { \"true\" : true, \"false\" : false }[value]; return result == null ? value : result; }; /** * Opens up a centered popup window. * @param {String} url URL to open in the window. * @param {String} name Popup name. * @param {int} width Popup width. * @param {int} height Popup height. * @param {String} options window.open() options. * @return {Window} Returns window instance. */ function popup(url, name, width, height, options) { var x = (screen.width - width) / 2, y = (screen.height - height) / 2 ; options += ', left=' + x + ', top=' + y + ', width=' + width + ', height=' + height ; options = options.replace(/^,/, ''); var win = window.open(url, name, options); win.focus(); return win; }; /** * Adds event handler to the target object. * @param {Object} obj Target object. * @param {String} type Name of the event. * @param {Function} func Handling function. */ function attachEvent(obj, type, func, scope) { function handler(e) { e = e || window.event; if (!e.target) { e.target = e.srcElement; e.preventDefault = function() { this.returnValue = false; }; } func.call(scope || window, e); }; if (obj.attachEvent) { obj.attachEvent('on' + type, handler); } else { obj.addEventListener(type, handler, false); } }; /** * Displays an alert. * @param {String} str String to display. */ function alert(str) { window.alert(sh.config.strings.alert + str); }; /** * Finds a brush by its alias. * * @param {String} alias Brush alias. * @param {Boolean} showAlert Suppresses the alert if false. * @return {Brush} Returns bursh constructor if found, null otherwise. */ function findBrush(alias, showAlert) { var brushes = sh.vars.discoveredBrushes, result = null ; if (brushes == null) { brushes = {}; // Find all brushes for (var brush in sh.brushes) { var info = sh.brushes[brush], aliases = info.aliases ; if (aliases == null) continue; // keep the brush name info.brushName = brush.toLowerCase(); for (var i = 0; i < aliases.length; i++) brushes[aliases[i]] = brush; } sh.vars.discoveredBrushes = brushes; } result = sh.brushes[brushes[alias]]; if (result == null && showAlert != false) alert(sh.config.strings.noBrush + alias); return result; }; /** * Executes a callback on each line and replaces each line with result from the callback. * @param {Object} str Input string. * @param {Object} callback Callback function taking one string argument and returning a string. */ function eachLine(str, callback) { var lines = splitLines(str); for (var i = 0; i < lines.length; i++) lines[i] = callback(lines[i], i); return lines.join('\\n'); }; /** * This is a special trim which only removes first and last empty lines * and doesn't affect valid leading space on the first line. * * @param {String} str Input string * @return {String} Returns string without empty first and last lines. */ function trimFirstAndLastLines(str) { return str.replace(/^[ ]*[\\n]+|[\\n]*[ ]*$/g, ''); }; /** * Parses key/value pairs into hash object. * * Understands the following formats: * - name: word; * - name: [word, word]; * - name: \"string\"; * - name: 'string'; * * For example: * name1: value; name2: [value, value]; name3: 'value' * * @param {String} str Input string. * @return {Object} Returns deserialized object. */ function parseParams(str) { var match, result = {}, arrayRegex = new XRegExp(\"^\\\\[(?(.*?))\\\\]$\"), regex = new XRegExp( \"(?[\\\\w-]+)\" + \"\\\\s*:\\\\s*\" + \"(?\" + \"[\\\\w-%#]+|\" + // word \"\\\\[.*?\\\\]|\" + // [] array '\".*?\"|' + // \"\" string \"'.*?'\" + // '' string \")\\\\s*;?\", \"g\" ) ; while ((match = regex.exec(str)) != null) { var value = match.value .replace(/^['\"]|['\"]$/g, '') // strip quotes from end of strings ; // try to parse array value if (value != null && arrayRegex.test(value)) { var m = arrayRegex.exec(value); value = m.values.length > 0 ? m.values.split(/\\s*,\\s*/) : []; } result[match.name] = value; } return result; }; /** * Wraps each line of the string into tag with given style applied to it. * * @param {String} str Input string. * @param {String} css Style name to apply to the string. * @return {String} Returns input string with each line surrounded by tag. */ function wrapLinesWithCode(str, css) { if (str == null || str.length == 0 || str == '\\n') return str; str = str.replace(/"},{"title":"","date":"2019-06-11T00:08:46.242Z","updated":"2019-04-27T06:30:09.539Z","comments":true,"path":"styles/shCoreDefault.css","permalink":"https://shaokang.ga/styles/shCoreDefault.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 1px 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre-wrap !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: white !important; } .syntaxhighlighter .line.alt1 { background-color: white !important; } .syntaxhighlighter .line.alt2 { background-color: white !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #e0e0e0 !important; } .syntaxhighlighter .line.highlighted.number { color: black !important; } .syntaxhighlighter table caption { color: black !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #6ce26c !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #6ce26c !important; color: white !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: blue !important; background: white !important; border: 1px solid #6ce26c !important; } .syntaxhighlighter.collapsed .toolbar a { color: blue !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: red !important; } .syntaxhighlighter .toolbar { color: white !important; background: #6ce26c !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: black !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: black !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #008200 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: blue !important; } .syntaxhighlighter .keyword { color: #006699 !important; } .syntaxhighlighter .preprocessor { color: gray !important; } .syntaxhighlighter .variable { color: #aa7700 !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #ff1493 !important; } .syntaxhighlighter .constants { color: #0066cc !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #006699 !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: gray !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #ff1493 !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: red !important; } .syntaxhighlighter .keyword { font-weight: bold !important; }"},{"title":"","date":"2019-06-11T00:08:46.242Z","updated":"2019-04-27T04:08:33.864Z","comments":true,"path":"styles/shCoreDjango.css","permalink":"https://shaokang.ga/styles/shCoreDjango.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: #0a2b1d !important; } .syntaxhighlighter .line.alt1 { background-color: #0a2b1d !important; } .syntaxhighlighter .line.alt2 { background-color: #0a2b1d !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #233729 !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: #f8f8f8 !important; } .syntaxhighlighter .gutter { color: #497958 !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #41a83e !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #41a83e !important; color: #0a2b1d !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #96dd3b !important; background: black !important; border: 1px solid #41a83e !important; } .syntaxhighlighter.collapsed .toolbar a { color: #96dd3b !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: white !important; } .syntaxhighlighter .toolbar { color: white !important; background: #41a83e !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #ffe862 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #f8f8f8 !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #336442 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #9df39f !important; } .syntaxhighlighter .keyword { color: #96dd3b !important; } .syntaxhighlighter .preprocessor { color: #91bb9e !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #f7e741 !important; } .syntaxhighlighter .functions { color: #ffaa3e !important; } .syntaxhighlighter .constants { color: #e0e8ff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #96dd3b !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #eb939a !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #91bb9e !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #edef7d !important; } .syntaxhighlighter .comments { font-style: italic !important; } .syntaxhighlighter .keyword { font-weight: bold !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.869Z","comments":true,"path":"styles/shCoreEclipse.css","permalink":"https://shaokang.ga/styles/shCoreEclipse.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: white !important; } .syntaxhighlighter .line.alt1 { background-color: white !important; } .syntaxhighlighter .line.alt2 { background-color: white !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #c3defe !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: black !important; } .syntaxhighlighter .gutter { color: #787878 !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #d4d0c8 !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #d4d0c8 !important; color: white !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #3f5fbf !important; background: white !important; border: 1px solid #d4d0c8 !important; } .syntaxhighlighter.collapsed .toolbar a { color: #3f5fbf !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #aa7700 !important; } .syntaxhighlighter .toolbar { color: #a0a0a0 !important; background: #d4d0c8 !important; border: none !important; } .syntaxhighlighter .toolbar a { color: #a0a0a0 !important; } .syntaxhighlighter .toolbar a:hover { color: red !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: black !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #3f5fbf !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #2a00ff !important; } .syntaxhighlighter .keyword { color: #7f0055 !important; } .syntaxhighlighter .preprocessor { color: #646464 !important; } .syntaxhighlighter .variable { color: #aa7700 !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #ff1493 !important; } .syntaxhighlighter .constants { color: #0066cc !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #7f0055 !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: gray !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #ff1493 !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: red !important; } .syntaxhighlighter .keyword { font-weight: bold !important; } .syntaxhighlighter .xml .keyword { color: #3f7f7f !important; font-weight: normal !important; } .syntaxhighlighter .xml .color1, .syntaxhighlighter .xml .color1 a { color: #7f007f !important; } .syntaxhighlighter .xml .string { font-style: italic !important; color: #2a00ff !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.876Z","comments":true,"path":"styles/shCoreEmacs.css","permalink":"https://shaokang.ga/styles/shCoreEmacs.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: black !important; } .syntaxhighlighter .line.alt1 { background-color: black !important; } .syntaxhighlighter .line.alt2 { background-color: black !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #2a3133 !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: #d3d3d3 !important; } .syntaxhighlighter .gutter { color: #d3d3d3 !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #990000 !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #990000 !important; color: black !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #ebdb8d !important; background: black !important; border: 1px solid #990000 !important; } .syntaxhighlighter.collapsed .toolbar a { color: #ebdb8d !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #ff7d27 !important; } .syntaxhighlighter .toolbar { color: white !important; background: #990000 !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #9ccff4 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #d3d3d3 !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #ff7d27 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #ff9e7b !important; } .syntaxhighlighter .keyword { color: aqua !important; } .syntaxhighlighter .preprocessor { color: #aec4de !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #81cef9 !important; } .syntaxhighlighter .constants { color: #ff9e7b !important; } .syntaxhighlighter .script { font-weight: bold !important; color: aqua !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #ebdb8d !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #ff7d27 !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #aec4de !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.887Z","comments":true,"path":"styles/shCoreMDUltra.css","permalink":"https://shaokang.ga/styles/shCoreMDUltra.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: #222222 !important; } .syntaxhighlighter .line.alt1 { background-color: #222222 !important; } .syntaxhighlighter .line.alt2 { background-color: #222222 !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #253e5a !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: lime !important; } .syntaxhighlighter .gutter { color: #38566f !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #435a5f !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #435a5f !important; color: #222222 !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #428bdd !important; background: black !important; border: 1px solid #435a5f !important; } .syntaxhighlighter.collapsed .toolbar a { color: #428bdd !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: lime !important; } .syntaxhighlighter .toolbar { color: #aaaaff !important; background: #435a5f !important; border: none !important; } .syntaxhighlighter .toolbar a { color: #aaaaff !important; } .syntaxhighlighter .toolbar a:hover { color: #9ccff4 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: lime !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #428bdd !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: lime !important; } .syntaxhighlighter .keyword { color: #aaaaff !important; } .syntaxhighlighter .preprocessor { color: #8aa6c1 !important; } .syntaxhighlighter .variable { color: aqua !important; } .syntaxhighlighter .value { color: #f7e741 !important; } .syntaxhighlighter .functions { color: #ff8000 !important; } .syntaxhighlighter .constants { color: yellow !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #aaaaff !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: red !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: yellow !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #ffaa3e !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.894Z","comments":true,"path":"styles/shCoreMidnight.css","permalink":"https://shaokang.ga/styles/shCoreMidnight.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: #0f192a !important; } .syntaxhighlighter .line.alt1 { background-color: #0f192a !important; } .syntaxhighlighter .line.alt2 { background-color: #0f192a !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #253e5a !important; } .syntaxhighlighter .line.highlighted.number { color: #38566f !important; } .syntaxhighlighter table caption { color: #d1edff !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #435a5f !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #435a5f !important; color: #0f192a !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #428bdd !important; background: black !important; border: 1px solid #435a5f !important; } .syntaxhighlighter.collapsed .toolbar a { color: #428bdd !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #1dc116 !important; } .syntaxhighlighter .toolbar { color: #d1edff !important; background: #435a5f !important; border: none !important; } .syntaxhighlighter .toolbar a { color: #d1edff !important; } .syntaxhighlighter .toolbar a:hover { color: #8aa6c1 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #d1edff !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #428bdd !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #1dc116 !important; } .syntaxhighlighter .keyword { color: #b43d3d !important; } .syntaxhighlighter .preprocessor { color: #8aa6c1 !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #f7e741 !important; } .syntaxhighlighter .functions { color: #ffaa3e !important; } .syntaxhighlighter .constants { color: #e0e8ff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #b43d3d !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #f8bb00 !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: white !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #ffaa3e !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.900Z","comments":true,"path":"styles/shCoreRDark.css","permalink":"https://shaokang.ga/styles/shCoreRDark.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: #1b2426 !important; } .syntaxhighlighter .line.alt1 { background-color: #1b2426 !important; } .syntaxhighlighter .line.alt2 { background-color: #1b2426 !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #323e41 !important; } .syntaxhighlighter .line.highlighted.number { color: #b9bdb6 !important; } .syntaxhighlighter table caption { color: #b9bdb6 !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #435a5f !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #435a5f !important; color: #1b2426 !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #5ba1cf !important; background: black !important; border: 1px solid #435a5f !important; } .syntaxhighlighter.collapsed .toolbar a { color: #5ba1cf !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #5ce638 !important; } .syntaxhighlighter .toolbar { color: white !important; background: #435a5f !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #e0e8ff !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #b9bdb6 !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #878a85 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #5ce638 !important; } .syntaxhighlighter .keyword { color: #5ba1cf !important; } .syntaxhighlighter .preprocessor { color: #435a5f !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #ffaa3e !important; } .syntaxhighlighter .constants { color: #e0e8ff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #5ba1cf !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #e0e8ff !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: white !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #ffaa3e !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.908Z","comments":true,"path":"styles/shThemeDjango.css","permalink":"https://shaokang.ga/styles/shThemeDjango.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: #0a2b1d !important; } .syntaxhighlighter .line.alt1 { background-color: #0a2b1d !important; } .syntaxhighlighter .line.alt2 { background-color: #0a2b1d !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #233729 !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: #f8f8f8 !important; } .syntaxhighlighter .gutter { color: #497958 !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #41a83e !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #41a83e !important; color: #0a2b1d !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #96dd3b !important; background: black !important; border: 1px solid #41a83e !important; } .syntaxhighlighter.collapsed .toolbar a { color: #96dd3b !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: white !important; } .syntaxhighlighter .toolbar { color: white !important; background: #41a83e !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #ffe862 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #f8f8f8 !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #336442 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #9df39f !important; } .syntaxhighlighter .keyword { color: #96dd3b !important; } .syntaxhighlighter .preprocessor { color: #91bb9e !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #f7e741 !important; } .syntaxhighlighter .functions { color: #ffaa3e !important; } .syntaxhighlighter .constants { color: #e0e8ff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #96dd3b !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #eb939a !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #91bb9e !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #edef7d !important; } .syntaxhighlighter .comments { font-style: italic !important; } .syntaxhighlighter .keyword { font-weight: bold !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.881Z","comments":true,"path":"styles/shCoreFadeToGrey.css","permalink":"https://shaokang.ga/styles/shCoreFadeToGrey.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter a, .syntaxhighlighter div, .syntaxhighlighter code, .syntaxhighlighter table, .syntaxhighlighter table td, .syntaxhighlighter table tr, .syntaxhighlighter table tbody, .syntaxhighlighter table thead, .syntaxhighlighter table caption, .syntaxhighlighter textarea { -moz-border-radius: 0 0 0 0 !important; -webkit-border-radius: 0 0 0 0 !important; background: none !important; border: 0 !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; margin: 0 !important; outline: 0 !important; overflow: visible !important; padding: 0 !important; position: static !important; right: auto !important; text-align: left !important; top: auto !important; vertical-align: baseline !important; width: auto !important; box-sizing: content-box !important; font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; font-weight: normal !important; font-style: normal !important; font-size: 1em !important; min-height: inherit !important; min-height: auto !important; } .syntaxhighlighter { width: 100% !important; margin: 1em 0 1em 0 !important; position: relative !important; overflow: auto !important; font-size: 1em !important; } .syntaxhighlighter.source { overflow: hidden !important; } .syntaxhighlighter .bold { font-weight: bold !important; } .syntaxhighlighter .italic { font-style: italic !important; } .syntaxhighlighter .line { white-space: pre !important; } .syntaxhighlighter table { width: 100% !important; } .syntaxhighlighter table caption { text-align: left !important; padding: .5em 0 0.5em 1em !important; } .syntaxhighlighter table td.code { width: 100% !important; } .syntaxhighlighter table td.code .container { position: relative !important; } .syntaxhighlighter table td.code .container textarea { box-sizing: border-box !important; position: absolute !important; left: 0 !important; top: 0 !important; width: 100% !important; height: 100% !important; border: none !important; background: white !important; padding-left: 1em !important; overflow: hidden !important; white-space: pre !important; } .syntaxhighlighter table td.gutter .line { text-align: right !important; padding: 0 0.5em 0 1em !important; } .syntaxhighlighter table td.code .line { padding: 0 1em !important; } .syntaxhighlighter.nogutter td.code .container textarea, .syntaxhighlighter.nogutter td.code .line { padding-left: 0em !important; } .syntaxhighlighter.show { display: block !important; } .syntaxhighlighter.collapsed table { display: none !important; } .syntaxhighlighter.collapsed .toolbar { padding: 0.1em 0.8em 0em 0.8em !important; font-size: 1em !important; position: static !important; width: auto !important; height: auto !important; } .syntaxhighlighter.collapsed .toolbar span { display: inline !important; margin-right: 1em !important; } .syntaxhighlighter.collapsed .toolbar span a { padding: 0 !important; display: none !important; } .syntaxhighlighter.collapsed .toolbar span a.expandSource { display: inline !important; } .syntaxhighlighter .toolbar { position: absolute !important; right: 1px !important; top: 1px !important; width: 11px !important; height: 11px !important; font-size: 10px !important; z-index: 10 !important; } .syntaxhighlighter .toolbar span.title { display: inline !important; } .syntaxhighlighter .toolbar a { display: block !important; text-align: center !important; text-decoration: none !important; padding-top: 1px !important; } .syntaxhighlighter .toolbar a.expandSource { display: none !important; } .syntaxhighlighter.ie { font-size: .9em !important; padding: 1px 0 1px 0 !important; } .syntaxhighlighter.ie .toolbar { line-height: 8px !important; } .syntaxhighlighter.ie .toolbar a { padding-top: 0px !important; } .syntaxhighlighter.printing .line.alt1 .content, .syntaxhighlighter.printing .line.alt2 .content, .syntaxhighlighter.printing .line.highlighted .number, .syntaxhighlighter.printing .line.highlighted.alt1 .content, .syntaxhighlighter.printing .line.highlighted.alt2 .content { background: none !important; } .syntaxhighlighter.printing .line .number { color: #bbbbbb !important; } .syntaxhighlighter.printing .line .content { color: black !important; } .syntaxhighlighter.printing .toolbar { display: none !important; } .syntaxhighlighter.printing a { text-decoration: none !important; } .syntaxhighlighter.printing .plain, .syntaxhighlighter.printing .plain a { color: black !important; } .syntaxhighlighter.printing .comments, .syntaxhighlighter.printing .comments a { color: #008200 !important; } .syntaxhighlighter.printing .string, .syntaxhighlighter.printing .string a { color: blue !important; } .syntaxhighlighter.printing .keyword { color: #006699 !important; font-weight: bold !important; } .syntaxhighlighter.printing .preprocessor { color: gray !important; } .syntaxhighlighter.printing .variable { color: #aa7700 !important; } .syntaxhighlighter.printing .value { color: #009900 !important; } .syntaxhighlighter.printing .functions { color: #ff1493 !important; } .syntaxhighlighter.printing .constants { color: #0066cc !important; } .syntaxhighlighter.printing .script { font-weight: bold !important; } .syntaxhighlighter.printing .color1, .syntaxhighlighter.printing .color1 a { color: gray !important; } .syntaxhighlighter.printing .color2, .syntaxhighlighter.printing .color2 a { color: #ff1493 !important; } .syntaxhighlighter.printing .color3, .syntaxhighlighter.printing .color3 a { color: red !important; } .syntaxhighlighter.printing .break, .syntaxhighlighter.printing .break a { color: black !important; } .syntaxhighlighter { background-color: #121212 !important; } .syntaxhighlighter .line.alt1 { background-color: #121212 !important; } .syntaxhighlighter .line.alt2 { background-color: #121212 !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #2c2c29 !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: white !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #3185b9 !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #3185b9 !important; color: #121212 !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #3185b9 !important; background: black !important; border: 1px solid #3185b9 !important; } .syntaxhighlighter.collapsed .toolbar a { color: #3185b9 !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #d01d33 !important; } .syntaxhighlighter .toolbar { color: white !important; background: #3185b9 !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #96daff !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: white !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #696854 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #e3e658 !important; } .syntaxhighlighter .keyword { color: #d01d33 !important; } .syntaxhighlighter .preprocessor { color: #435a5f !important; } .syntaxhighlighter .variable { color: #898989 !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #aaaaaa !important; } .syntaxhighlighter .constants { color: #96daff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #d01d33 !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #ffc074 !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #4a8cdb !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #96daff !important; } .syntaxhighlighter .functions { font-weight: bold !important; }"},{"title":"","date":"2019-06-11T00:08:46.246Z","updated":"2019-04-27T04:08:33.906Z","comments":true,"path":"styles/shThemeDefault.css","permalink":"https://shaokang.ga/styles/shThemeDefault.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: white !important; } .syntaxhighlighter .line.alt1 { background-color: white !important; } .syntaxhighlighter .line.alt2 { background-color: white !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #e0e0e0 !important; } .syntaxhighlighter .line.highlighted.number { color: black !important; } .syntaxhighlighter table caption { color: black !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #6ce26c !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #6ce26c !important; color: white !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: blue !important; background: white !important; border: 1px solid #6ce26c !important; } .syntaxhighlighter.collapsed .toolbar a { color: blue !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: red !important; } .syntaxhighlighter .toolbar { color: white !important; background: #6ce26c !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: black !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: black !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #008200 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: blue !important; } .syntaxhighlighter .keyword { color: #006699 !important; } .syntaxhighlighter .preprocessor { color: gray !important; } .syntaxhighlighter .variable { color: #aa7700 !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #ff1493 !important; } .syntaxhighlighter .constants { color: #0066cc !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #006699 !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: gray !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #ff1493 !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: red !important; } .syntaxhighlighter .keyword { font-weight: bold !important; }"},{"title":"","date":"2019-06-11T00:08:46.250Z","updated":"2019-04-27T04:08:33.910Z","comments":true,"path":"styles/shThemeEclipse.css","permalink":"https://shaokang.ga/styles/shThemeEclipse.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: white !important; } .syntaxhighlighter .line.alt1 { background-color: white !important; } .syntaxhighlighter .line.alt2 { background-color: white !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #c3defe !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: black !important; } .syntaxhighlighter .gutter { color: #787878 !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #d4d0c8 !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #d4d0c8 !important; color: white !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #3f5fbf !important; background: white !important; border: 1px solid #d4d0c8 !important; } .syntaxhighlighter.collapsed .toolbar a { color: #3f5fbf !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #aa7700 !important; } .syntaxhighlighter .toolbar { color: #a0a0a0 !important; background: #d4d0c8 !important; border: none !important; } .syntaxhighlighter .toolbar a { color: #a0a0a0 !important; } .syntaxhighlighter .toolbar a:hover { color: red !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: black !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #3f5fbf !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #2a00ff !important; } .syntaxhighlighter .keyword { color: #7f0055 !important; } .syntaxhighlighter .preprocessor { color: #646464 !important; } .syntaxhighlighter .variable { color: #aa7700 !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #ff1493 !important; } .syntaxhighlighter .constants { color: #0066cc !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #7f0055 !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: gray !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #ff1493 !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: red !important; } .syntaxhighlighter .keyword { font-weight: bold !important; } .syntaxhighlighter .xml .keyword { color: #3f7f7f !important; font-weight: normal !important; } .syntaxhighlighter .xml .color1, .syntaxhighlighter .xml .color1 a { color: #7f007f !important; } .syntaxhighlighter .xml .string { font-style: italic !important; color: #2a00ff !important; }"},{"title":"","date":"2019-06-11T00:08:46.250Z","updated":"2019-04-27T04:08:33.913Z","comments":true,"path":"styles/shThemeEmacs.css","permalink":"https://shaokang.ga/styles/shThemeEmacs.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: black !important; } .syntaxhighlighter .line.alt1 { background-color: black !important; } .syntaxhighlighter .line.alt2 { background-color: black !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #2a3133 !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: #d3d3d3 !important; } .syntaxhighlighter .gutter { color: #d3d3d3 !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #990000 !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #990000 !important; color: black !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #ebdb8d !important; background: black !important; border: 1px solid #990000 !important; } .syntaxhighlighter.collapsed .toolbar a { color: #ebdb8d !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #ff7d27 !important; } .syntaxhighlighter .toolbar { color: white !important; background: #990000 !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #9ccff4 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #d3d3d3 !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #ff7d27 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #ff9e7b !important; } .syntaxhighlighter .keyword { color: aqua !important; } .syntaxhighlighter .preprocessor { color: #aec4de !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #81cef9 !important; } .syntaxhighlighter .constants { color: #ff9e7b !important; } .syntaxhighlighter .script { font-weight: bold !important; color: aqua !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #ebdb8d !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #ff7d27 !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #aec4de !important; }"},{"title":"","date":"2019-06-11T00:08:46.250Z","updated":"2019-04-27T04:08:33.915Z","comments":true,"path":"styles/shThemeFadeToGrey.css","permalink":"https://shaokang.ga/styles/shThemeFadeToGrey.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: #121212 !important; } .syntaxhighlighter .line.alt1 { background-color: #121212 !important; } .syntaxhighlighter .line.alt2 { background-color: #121212 !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #2c2c29 !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: white !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #3185b9 !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #3185b9 !important; color: #121212 !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #3185b9 !important; background: black !important; border: 1px solid #3185b9 !important; } .syntaxhighlighter.collapsed .toolbar a { color: #3185b9 !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #d01d33 !important; } .syntaxhighlighter .toolbar { color: white !important; background: #3185b9 !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #96daff !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: white !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #696854 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #e3e658 !important; } .syntaxhighlighter .keyword { color: #d01d33 !important; } .syntaxhighlighter .preprocessor { color: #435a5f !important; } .syntaxhighlighter .variable { color: #898989 !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #aaaaaa !important; } .syntaxhighlighter .constants { color: #96daff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #d01d33 !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #ffc074 !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: #4a8cdb !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #96daff !important; } .syntaxhighlighter .functions { font-weight: bold !important; }"},{"title":"","date":"2019-06-11T00:08:46.250Z","updated":"2019-04-27T04:08:33.917Z","comments":true,"path":"styles/shThemeMDUltra.css","permalink":"https://shaokang.ga/styles/shThemeMDUltra.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: #222222 !important; } .syntaxhighlighter .line.alt1 { background-color: #222222 !important; } .syntaxhighlighter .line.alt2 { background-color: #222222 !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #253e5a !important; } .syntaxhighlighter .line.highlighted.number { color: white !important; } .syntaxhighlighter table caption { color: lime !important; } .syntaxhighlighter .gutter { color: #38566f !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #435a5f !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #435a5f !important; color: #222222 !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #428bdd !important; background: black !important; border: 1px solid #435a5f !important; } .syntaxhighlighter.collapsed .toolbar a { color: #428bdd !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: lime !important; } .syntaxhighlighter .toolbar { color: #aaaaff !important; background: #435a5f !important; border: none !important; } .syntaxhighlighter .toolbar a { color: #aaaaff !important; } .syntaxhighlighter .toolbar a:hover { color: #9ccff4 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: lime !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #428bdd !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: lime !important; } .syntaxhighlighter .keyword { color: #aaaaff !important; } .syntaxhighlighter .preprocessor { color: #8aa6c1 !important; } .syntaxhighlighter .variable { color: aqua !important; } .syntaxhighlighter .value { color: #f7e741 !important; } .syntaxhighlighter .functions { color: #ff8000 !important; } .syntaxhighlighter .constants { color: yellow !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #aaaaff !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: red !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: yellow !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #ffaa3e !important; }"},{"title":"","date":"2019-06-11T00:08:46.250Z","updated":"2019-04-27T04:08:33.919Z","comments":true,"path":"styles/shThemeMidnight.css","permalink":"https://shaokang.ga/styles/shThemeMidnight.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: #0f192a !important; } .syntaxhighlighter .line.alt1 { background-color: #0f192a !important; } .syntaxhighlighter .line.alt2 { background-color: #0f192a !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #253e5a !important; } .syntaxhighlighter .line.highlighted.number { color: #38566f !important; } .syntaxhighlighter table caption { color: #d1edff !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #435a5f !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #435a5f !important; color: #0f192a !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #428bdd !important; background: black !important; border: 1px solid #435a5f !important; } .syntaxhighlighter.collapsed .toolbar a { color: #428bdd !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #1dc116 !important; } .syntaxhighlighter .toolbar { color: #d1edff !important; background: #435a5f !important; border: none !important; } .syntaxhighlighter .toolbar a { color: #d1edff !important; } .syntaxhighlighter .toolbar a:hover { color: #8aa6c1 !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #d1edff !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #428bdd !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #1dc116 !important; } .syntaxhighlighter .keyword { color: #b43d3d !important; } .syntaxhighlighter .preprocessor { color: #8aa6c1 !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #f7e741 !important; } .syntaxhighlighter .functions { color: #ffaa3e !important; } .syntaxhighlighter .constants { color: #e0e8ff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #b43d3d !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #f8bb00 !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: white !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #ffaa3e !important; }"},{"title":"","date":"2019-06-11T00:08:46.250Z","updated":"2019-04-27T04:08:33.923Z","comments":true,"path":"styles/shThemeRDark.css","permalink":"https://shaokang.ga/styles/shThemeRDark.css","excerpt":"","text":"/** * SyntaxHighlighter * http://alexgorbatchev.com/SyntaxHighlighter * * SyntaxHighlighter is donationware. If you are using it, please donate. * http://alexgorbatchev.com/SyntaxHighlighter/donate.html * * @version * 3.0.83 (July 02 2010) * * @copyright * Copyright (C) 2004-2010 Alex Gorbatchev. * * @license * Dual licensed under the MIT and GPL licenses. */ .syntaxhighlighter { background-color: #1b2426 !important; } .syntaxhighlighter .line.alt1 { background-color: #1b2426 !important; } .syntaxhighlighter .line.alt2 { background-color: #1b2426 !important; } .syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 { background-color: #323e41 !important; } .syntaxhighlighter .line.highlighted.number { color: #b9bdb6 !important; } .syntaxhighlighter table caption { color: #b9bdb6 !important; } .syntaxhighlighter .gutter { color: #afafaf !important; } .syntaxhighlighter .gutter .line { border-right: 3px solid #435a5f !important; } .syntaxhighlighter .gutter .line.highlighted { background-color: #435a5f !important; color: #1b2426 !important; } .syntaxhighlighter.printing .line .content { border: none !important; } .syntaxhighlighter.collapsed { overflow: visible !important; } .syntaxhighlighter.collapsed .toolbar { color: #5ba1cf !important; background: black !important; border: 1px solid #435a5f !important; } .syntaxhighlighter.collapsed .toolbar a { color: #5ba1cf !important; } .syntaxhighlighter.collapsed .toolbar a:hover { color: #5ce638 !important; } .syntaxhighlighter .toolbar { color: white !important; background: #435a5f !important; border: none !important; } .syntaxhighlighter .toolbar a { color: white !important; } .syntaxhighlighter .toolbar a:hover { color: #e0e8ff !important; } .syntaxhighlighter .plain, .syntaxhighlighter .plain a { color: #b9bdb6 !important; } .syntaxhighlighter .comments, .syntaxhighlighter .comments a { color: #878a85 !important; } .syntaxhighlighter .string, .syntaxhighlighter .string a { color: #5ce638 !important; } .syntaxhighlighter .keyword { color: #5ba1cf !important; } .syntaxhighlighter .preprocessor { color: #435a5f !important; } .syntaxhighlighter .variable { color: #ffaa3e !important; } .syntaxhighlighter .value { color: #009900 !important; } .syntaxhighlighter .functions { color: #ffaa3e !important; } .syntaxhighlighter .constants { color: #e0e8ff !important; } .syntaxhighlighter .script { font-weight: bold !important; color: #5ba1cf !important; background-color: none !important; } .syntaxhighlighter .color1, .syntaxhighlighter .color1 a { color: #e0e8ff !important; } .syntaxhighlighter .color2, .syntaxhighlighter .color2 a { color: white !important; } .syntaxhighlighter .color3, .syntaxhighlighter .color3 a { color: #ffaa3e !important; }"},{"title":"All tags","date":"2019-06-13T03:26:51.511Z","updated":"2019-06-13T03:26:51.471Z","comments":true,"path":"tags/index.html","permalink":"https://shaokang.ga/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-06-11T00:08:36.818Z","updated":"2019-04-27T04:08:33.584Z","comments":true,"path":"js/jquery-1.4.2.js","permalink":"https://shaokang.ga/js/jquery-1.4.2.js","excerpt":"","text":"/*! * jQuery JavaScript Library v1.4.2 * http://jquery.com/ * * Copyright 2010, John Resig * Dual licensed under the MIT or GPL Version 2 licenses. * http://jquery.org/license * * Includes Sizzle.js * http://sizzlejs.com/ * Copyright 2010, The Dojo Foundation * Released under the MIT, BSD, and GPL Licenses. * * Date: Sat Feb 13 22:33:48 2010 -0500 */ (function( window, undefined ) { // Define a local copy of jQuery var jQuery = function( selector, context ) { // The jQuery object is actually just the init constructor 'enhanced' return new jQuery.fn.init( selector, context ); }, // Map over jQuery in case of overwrite _jQuery = window.jQuery, // Map over the $ in case of overwrite _$ = window.$, // Use the correct document accordingly with window argument (sandbox) document = window.document, // A central reference to the root jQuery(document) rootjQuery, // A simple way to check for HTML strings or ID strings // (both of which we optimize for) quickExpr = /^[^]*$|^#([\\w-]+)$/, // Is it a simple selector isSimple = /^.[^:#\\[\\.,]*$/, // Check if a string has a non-whitespace character in it rnotwhite = /\\S/, // Used for trimming whitespace rtrim = /^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g, // Match a standalone tag rsingleTag = /^(?:)?$/, // Keep a UserAgent string for use with jQuery.browser userAgent = navigator.userAgent, // For matching the engine and version of the browser browserMatch, // Has the ready events already been bound? readyBound = false, // The functions to execute on DOM ready readyList = [], // The ready event handler DOMContentLoaded, // Save a reference to some core methods toString = Object.prototype.toString, hasOwnProperty = Object.prototype.hasOwnProperty, push = Array.prototype.push, slice = Array.prototype.slice, indexOf = Array.prototype.indexOf; jQuery.fn = jQuery.prototype = { init: function( selector, context ) { var match, elem, ret, doc; // Handle $(\"\"), $(null), or $(undefined) if ( !selector ) { return this; } // Handle $(DOMElement) if ( selector.nodeType ) { this.context = this[0] = selector; this.length = 1; return this; } // The body element only exists once, optimize finding it if ( selector === \"body\" && !context ) { this.context = document; this[0] = document.body; this.selector = \"body\"; this.length = 1; return this; } // Handle HTML strings if ( typeof selector === \"string\" ) { // Are we dealing with HTML string or an ID? match = quickExpr.exec( selector ); // Verify a match, and that no context was specified for #id if ( match && (match[1] || !context) ) { // HANDLE: $(html) -> $(array) if ( match[1] ) { doc = (context ? context.ownerDocument || context : document); // If a single string is passed in and it's a single tag // just do a createElement and skip the rest ret = rsingleTag.exec( selector ); if ( ret ) { if ( jQuery.isPlainObject( context ) ) { selector = [ document.createElement( ret[1] ) ]; jQuery.fn.attr.call( selector, context, true ); } else { selector = [ doc.createElement( ret[1] ) ]; } } else { ret = buildFragment( [ match[1] ], [ doc ] ); selector = (ret.cacheable ? ret.fragment.cloneNode(true) : ret.fragment).childNodes; } return jQuery.merge( this, selector ); // HANDLE: $(\"#id\") } else { elem = document.getElementById( match[2] ); if ( elem ) { // Handle the case where IE and Opera return items // by name instead of ID if ( elem.id !== match[2] ) { return rootjQuery.find( selector ); } // Otherwise, we inject the element directly into the jQuery object this.length = 1; this[0] = elem; } this.context = document; this.selector = selector; return this; } // HANDLE: $(\"TAG\") } else if ( !context && /^\\w+$/.test( selector ) ) { this.selector = selector; this.context = document; selector = document.getElementsByTagName( selector ); return jQuery.merge( this, selector ); // HANDLE: $(expr, $(...)) } else if ( !context || context.jquery ) { return (context || rootjQuery).find( selector ); // HANDLE: $(expr, context) // (which is just equivalent to: $(context).find(expr) } else { return jQuery( context ).find( selector ); } // HANDLE: $(function) // Shortcut for document ready } else if ( jQuery.isFunction( selector ) ) { return rootjQuery.ready( selector ); } if (selector.selector !== undefined) { this.selector = selector.selector; this.context = selector.context; } return jQuery.makeArray( selector, this ); }, // Start with an empty selector selector: \"\", // The current version of jQuery being used jquery: \"1.4.2\", // The default length of a jQuery object is 0 length: 0, // The number of elements contained in the matched element set size: function() { return this.length; }, toArray: function() { return slice.call( this, 0 ); }, // Get the Nth element in the matched element set OR // Get the whole matched element set as a clean array get: function( num ) { return num == null ? // Return a 'clean' array this.toArray() : // Return just the object ( num < 0 ? this.slice(num)[ 0 ] : this[ num ] ); }, // Take an array of elements and push it onto the stack // (returning the new matched element set) pushStack: function( elems, name, selector ) { // Build a new jQuery matched element set var ret = jQuery(); if ( jQuery.isArray( elems ) ) { push.apply( ret, elems ); } else { jQuery.merge( ret, elems ); } // Add the old object onto the stack (as a reference) ret.prevObject = this; ret.context = this.context; if ( name === \"find\" ) { ret.selector = this.selector + (this.selector ? \" \" : \"\") + selector; } else if ( name ) { ret.selector = this.selector + \".\" + name + \"(\" + selector + \")\"; } // Return the newly-formed element set return ret; }, // Execute a callback for every element in the matched set. // (You can seed the arguments with an array of args, but this is // only used internally.) each: function( callback, args ) { return jQuery.each( this, callback, args ); }, ready: function( fn ) { // Attach the listeners jQuery.bindReady(); // If the DOM is already ready if ( jQuery.isReady ) { // Execute the function immediately fn.call( document, jQuery ); // Otherwise, remember the function for later } else if ( readyList ) { // Add the function to the wait list readyList.push( fn ); } return this; }, eq: function( i ) { return i === -1 ? this.slice( i ) : this.slice( i, +i + 1 ); }, first: function() { return this.eq( 0 ); }, last: function() { return this.eq( -1 ); }, slice: function() { return this.pushStack( slice.apply( this, arguments ), \"slice\", slice.call(arguments).join(\",\") ); }, map: function( callback ) { return this.pushStack( jQuery.map(this, function( elem, i ) { return callback.call( elem, i, elem ); })); }, end: function() { return this.prevObject || jQuery(null); }, // For internal use only. // Behaves like an Array's method, not like a jQuery method. push: push, sort: [].sort, splice: [].splice }; // Give the init function the jQuery prototype for later instantiation jQuery.fn.init.prototype = jQuery.fn; jQuery.extend = jQuery.fn.extend = function() { // copy reference to target object var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options, name, src, copy; // Handle a deep copy situation if ( typeof target === \"boolean\" ) { deep = target; target = arguments[1] || {}; // skip the boolean and the target i = 2; } // Handle case when target is a string or something (possible in deep copy) if ( typeof target !== \"object\" && !jQuery.isFunction(target) ) { target = {}; } // extend jQuery itself if only one argument is passed if ( length === i ) { target = this; --i; } for ( ; i < length; i++ ) { // Only deal with non-null/undefined values if ( (options = arguments[ i ]) != null ) { // Extend the base object for ( name in options ) { src = target[ name ]; copy = options[ name ]; // Prevent never-ending loop if ( target === copy ) { continue; } // Recurse if we're merging object literal values or arrays if ( deep && copy && ( jQuery.isPlainObject(copy) || jQuery.isArray(copy) ) ) { var clone = src && ( jQuery.isPlainObject(src) || jQuery.isArray(src) ) ? src : jQuery.isArray(copy) ? [] : {}; // Never move original objects, clone them target[ name ] = jQuery.extend( deep, clone, copy ); // Don't bring in undefined values } else if ( copy !== undefined ) { target[ name ] = copy; } } } } // Return the modified object return target; }; jQuery.extend({ noConflict: function( deep ) { window.$ = _$; if ( deep ) { window.jQuery = _jQuery; } return jQuery; }, // Is the DOM ready to be used? Set to true once it occurs. isReady: false, // Handle when the DOM is ready ready: function() { // Make sure that the DOM is not already loaded if ( !jQuery.isReady ) { // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443). if ( !document.body ) { return setTimeout( jQuery.ready, 13 ); } // Remember that the DOM is ready jQuery.isReady = true; // If there are functions bound, to execute if ( readyList ) { // Execute all of them var fn, i = 0; while ( (fn = readyList[ i++ ]) ) { fn.call( document, jQuery ); } // Reset the list of functions readyList = null; } // Trigger any bound ready events if ( jQuery.fn.triggerHandler ) { jQuery( document ).triggerHandler( \"ready\" ); } } }, bindReady: function() { if ( readyBound ) { return; } readyBound = true; // Catch cases where $(document).ready() is called after the // browser event has already occurred. if ( document.readyState === \"complete\" ) { return jQuery.ready(); } // Mozilla, Opera and webkit nightlies currently support this event if ( document.addEventListener ) { // Use the handy event callback document.addEventListener( \"DOMContentLoaded\", DOMContentLoaded, false ); // A fallback to window.onload, that will always work window.addEventListener( \"load\", jQuery.ready, false ); // If IE event model is used } else if ( document.attachEvent ) { // ensure firing before onload, // maybe late but safe also for iframes document.attachEvent(\"onreadystatechange\", DOMContentLoaded); // A fallback to window.onload, that will always work window.attachEvent( \"onload\", jQuery.ready ); // If IE and not a frame // continually check to see if the document is ready var toplevel = false; try { toplevel = window.frameElement == null; } catch(e) {} if ( document.documentElement.doScroll && toplevel ) { doScrollCheck(); } } }, // See test/unit/core.js for details concerning isFunction. // Since version 1.3, DOM methods and functions like alert // aren't supported. They return false on IE (#2968). isFunction: function( obj ) { return toString.call(obj) === \"[object Function]\"; }, isArray: function( obj ) { return toString.call(obj) === \"[object Array]\"; }, isPlainObject: function( obj ) { // Must be an Object. // Because of IE, we also have to check the presence of the constructor property. // Make sure that DOM nodes and window objects don't pass through, as well if ( !obj || toString.call(obj) !== \"[object Object]\" || obj.nodeType || obj.setInterval ) { return false; } // Not own constructor property must be Object if ( obj.constructor && !hasOwnProperty.call(obj, \"constructor\") && !hasOwnProperty.call(obj.constructor.prototype, \"isPrototypeOf\") ) { return false; } // Own properties are enumerated firstly, so to speed up, // if last one is own, then all properties are own. var key; for ( key in obj ) {} return key === undefined || hasOwnProperty.call( obj, key ); }, isEmptyObject: function( obj ) { for ( var name in obj ) { return false; } return true; }, error: function( msg ) { throw msg; }, parseJSON: function( data ) { if ( typeof data !== \"string\" || !data ) { return null; } // Make sure leading/trailing whitespace is removed (IE can't handle it) data = jQuery.trim( data ); // Make sure the incoming data is actual JSON // Logic borrowed from http://json.org/json2.js if ( /^[\\],:{}\\s]*$/.test(data.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, \"@\") .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \"]\") .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \"\")) ) { // Try to use the native JSON parser first return window.JSON && window.JSON.parse ? window.JSON.parse( data ) : (new Function(\"return \" + data))(); } else { jQuery.error( \"Invalid JSON: \" + data ); } }, noop: function() {}, // Evalulates a script in a global context globalEval: function( data ) { if ( data && rnotwhite.test(data) ) { // Inspired by code by Andrea Giammarchi // http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html var head = document.getElementsByTagName(\"head\")[0] || document.documentElement, script = document.createElement(\"script\"); script.type = \"text/javascript\"; if ( jQuery.support.scriptEval ) { script.appendChild( document.createTextNode( data ) ); } else { script.text = data; } // Use insertBefore instead of appendChild to circumvent an IE6 bug. // This arises when a base node is used (#2709). head.insertBefore( script, head.firstChild ); head.removeChild( script ); } }, nodeName: function( elem, name ) { return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase(); }, // args is for internal usage only each: function( object, callback, args ) { var name, i = 0, length = object.length, isObj = length === undefined || jQuery.isFunction(object); if ( args ) { if ( isObj ) { for ( name in object ) { if ( callback.apply( object[ name ], args ) === false ) { break; } } } else { for ( ; i < length; ) { if ( callback.apply( object[ i++ ], args ) === false ) { break; } } } // A special, fast, case for the most common use of each } else { if ( isObj ) { for ( name in object ) { if ( callback.call( object[ name ], name, object[ name ] ) === false ) { break; } } } else { for ( var value = object[0]; i < length && callback.call( value, i, value ) !== false; value = object[++i] ) {} } } return object; }, trim: function( text ) { return (text || \"\").replace( rtrim, \"\" ); }, // results is for internal usage only makeArray: function( array, results ) { var ret = results || []; if ( array != null ) { // The window, strings (and functions) also have 'length' // The extra typeof function check is to prevent crashes // in Safari 2 (See: #3039) if ( array.length == null || typeof array === \"string\" || jQuery.isFunction(array) || (typeof array !== \"function\" && array.setInterval) ) { push.call( ret, array ); } else { jQuery.merge( ret, array ); } } return ret; }, inArray: function( elem, array ) { if ( array.indexOf ) { return array.indexOf( elem ); } for ( var i = 0, length = array.length; i < length; i++ ) { if ( array[ i ] === elem ) { return i; } } return -1; }, merge: function( first, second ) { var i = first.length, j = 0; if ( typeof second.length === \"number\" ) { for ( var l = second.length; j < l; j++ ) { first[ i++ ] = second[ j ]; } } else { while ( second[j] !== undefined ) { first[ i++ ] = second[ j++ ]; } } first.length = i; return first; }, grep: function( elems, callback, inv ) { var ret = []; // Go through the array, only saving the items // that pass the validator function for ( var i = 0, length = elems.length; i < length; i++ ) { if ( !inv !== !callback( elems[ i ], i ) ) { ret.push( elems[ i ] ); } } return ret; }, // arg is for internal usage only map: function( elems, callback, arg ) { var ret = [], value; // Go through the array, translating each of the items to their // new value (or values). for ( var i = 0, length = elems.length; i < length; i++ ) { value = callback( elems[ i ], i, arg ); if ( value != null ) { ret[ ret.length ] = value; } } return ret.concat.apply( [], ret ); }, // A global GUID counter for objects guid: 1, proxy: function( fn, proxy, thisObject ) { if ( arguments.length === 2 ) { if ( typeof proxy === \"string\" ) { thisObject = fn; fn = thisObject[ proxy ]; proxy = undefined; } else if ( proxy && !jQuery.isFunction( proxy ) ) { thisObject = proxy; proxy = undefined; } } if ( !proxy && fn ) { proxy = function() { return fn.apply( thisObject || this, arguments ); }; } // Set the guid of unique handler to the same of original handler, so it can be removed if ( fn ) { proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++; } // So proxy can be declared as an argument return proxy; }, // Use of jQuery.browser is frowned upon. // More details: http://docs.jquery.com/Utilities/jQuery.browser uaMatch: function( ua ) { ua = ua.toLowerCase(); var match = /(webkit)[ \\/]([\\w.]+)/.exec( ua ) || /(opera)(?:.*version)?[ \\/]([\\w.]+)/.exec( ua ) || /(msie) ([\\w.]+)/.exec( ua ) || !/compatible/.test( ua ) && /(mozilla)(?:.*? rv:([\\w.]+))?/.exec( ua ) || []; return { browser: match[1] || \"\", version: match[2] || \"0\" }; }, browser: {} }); browserMatch = jQuery.uaMatch( userAgent ); if ( browserMatch.browser ) { jQuery.browser[ browserMatch.browser ] = true; jQuery.browser.version = browserMatch.version; } // Deprecated, use jQuery.browser.webkit instead if ( jQuery.browser.webkit ) { jQuery.browser.safari = true; } if ( indexOf ) { jQuery.inArray = function( elem, array ) { return indexOf.call( array, elem ); }; } // All jQuery objects should point back to these rootjQuery = jQuery(document); // Cleanup functions for the document ready method if ( document.addEventListener ) { DOMContentLoaded = function() { document.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false ); jQuery.ready(); }; } else if ( document.attachEvent ) { DOMContentLoaded = function() { // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443). if ( document.readyState === \"complete\" ) { document.detachEvent( \"onreadystatechange\", DOMContentLoaded ); jQuery.ready(); } }; } // The DOM ready check for Internet Explorer function doScrollCheck() { if ( jQuery.isReady ) { return; } try { // If IE is used, use the trick by Diego Perini // http://javascript.nwbox.com/IEContentLoaded/ document.documentElement.doScroll(\"left\"); } catch( error ) { setTimeout( doScrollCheck, 1 ); return; } // and execute any waiting functions jQuery.ready(); } function evalScript( i, elem ) { if ( elem.src ) { jQuery.ajax({ url: elem.src, async: false, dataType: \"script\" }); } else { jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || \"\" ); } if ( elem.parentNode ) { elem.parentNode.removeChild( elem ); } } // Mutifunctional method to get and set values to a collection // The value/s can be optionally by executed if its a function function access( elems, key, value, exec, fn, pass ) { var length = elems.length; // Setting many attributes if ( typeof key === \"object\" ) { for ( var k in key ) { access( elems, k, key[k], exec, fn, value ); } return elems; } // Setting one attribute if ( value !== undefined ) { // Optionally, function values get executed if exec is true exec = !pass && exec && jQuery.isFunction(value); for ( var i = 0; i < length; i++ ) { fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass ); } return elems; } // Getting an attribute return length ? fn( elems[0], key ) : undefined; } function now() { return (new Date).getTime(); } (function() { jQuery.support = {}; var root = document.documentElement, script = document.createElement(\"script\"), div = document.createElement(\"div\"), id = \"script\" + now(); div.style.display = \"none\"; div.innerHTML = \" a\"; var all = div.getElementsByTagName(\"*\"), a = div.getElementsByTagName(\"a\")[0]; // Can't get basic test support if ( !all || !all.length || !a ) { return; } jQuery.support = { // IE strips leading whitespace when .innerHTML is used leadingWhitespace: div.firstChild.nodeType === 3, // Make sure that tbody elements aren't automatically inserted // IE will insert them into empty tables tbody: !div.getElementsByTagName(\"tbody\").length, // Make sure that link elements get serialized correctly by innerHTML // This requires a wrapper element in IE htmlSerialize: !!div.getElementsByTagName(\"link\").length, // Get the style information from getAttribute // (IE uses .cssText insted) style: /red/.test( a.getAttribute(\"style\") ), // Make sure that URLs aren't manipulated // (IE normalizes it by default) hrefNormalized: a.getAttribute(\"href\") === \"/a\", // Make sure that element opacity exists // (IE uses filter instead) // Use a regex to work around a WebKit issue. See #5145 opacity: /^0.55$/.test( a.style.opacity ), // Verify style float existence // (IE uses styleFloat instead of cssFloat) cssFloat: !!a.style.cssFloat, // Make sure that if no value is specified for a checkbox // that it defaults to \"on\". // (WebKit defaults to \"\" instead) checkOn: div.getElementsByTagName(\"input\")[0].value === \"on\", // Make sure that a selected-by-default option has a working selected property. // (WebKit defaults to false instead of true, IE too, if it's in an optgroup) optSelected: document.createElement(\"select\").appendChild( document.createElement(\"option\") ).selected, parentNode: div.removeChild( div.appendChild( document.createElement(\"div\") ) ).parentNode === null, // Will be defined later deleteExpando: true, checkClone: false, scriptEval: false, noCloneEvent: true, boxModel: null }; script.type = \"text/javascript\"; try { script.appendChild( document.createTextNode( \"window.\" + id + \"=1;\" ) ); } catch(e) {} root.insertBefore( script, root.firstChild ); // Make sure that the execution of code works by injecting a script // tag with appendChild/createTextNode // (IE doesn't support this, fails, and uses .text instead) if ( window[ id ] ) { jQuery.support.scriptEval = true; delete window[ id ]; } // Test to see if it's possible to delete an expando from an element // Fails in Internet Explorer try { delete script.test; } catch(e) { jQuery.support.deleteExpando = false; } root.removeChild( script ); if ( div.attachEvent && div.fireEvent ) { div.attachEvent(\"onclick\", function click() { // Cloning a node shouldn't copy over any // bound event handlers (IE does this) jQuery.support.noCloneEvent = false; div.detachEvent(\"onclick\", click); }); div.cloneNode(true).fireEvent(\"onclick\"); } div = document.createElement(\"div\"); div.innerHTML = \"\"; var fragment = document.createDocumentFragment(); fragment.appendChild( div.firstChild ); // WebKit doesn't clone checked state correctly in fragments jQuery.support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked; // Figure out if the W3C box model works as expected // document.body must exist before we can do this jQuery(function() { var div = document.createElement(\"div\"); div.style.width = div.style.paddingLeft = \"1px\"; document.body.appendChild( div ); jQuery.boxModel = jQuery.support.boxModel = div.offsetWidth === 2; document.body.removeChild( div ).style.display = 'none'; div = null; }); // Technique from Juriy Zaytsev // http://thinkweb2.com/projects/prototype/detecting-event-support-without-browser-sniffing/ var eventSupported = function( eventName ) { var el = document.createElement(\"div\"); eventName = \"on\" + eventName; var isSupported = (eventName in el); if ( !isSupported ) { el.setAttribute(eventName, \"return;\"); isSupported = typeof el[eventName] === \"function\"; } el = null; return isSupported; }; jQuery.support.submitBubbles = eventSupported(\"submit\"); jQuery.support.changeBubbles = eventSupported(\"change\"); // release memory in IE root = script = div = all = a = null; })(); jQuery.props = { \"for\": \"htmlFor\", \"class\": \"className\", readonly: \"readOnly\", maxlength: \"maxLength\", cellspacing: \"cellSpacing\", rowspan: \"rowSpan\", colspan: \"colSpan\", tabindex: \"tabIndex\", usemap: \"useMap\", frameborder: \"frameBorder\" }; var expando = \"jQuery\" + now(), uuid = 0, windowData = {}; jQuery.extend({ cache: {}, expando:expando, // The following elements throw uncatchable exceptions if you // attempt to add expando properties to them. noData: { \"embed\": true, \"object\": true, \"applet\": true }, data: function( elem, name, data ) { if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) { return; } elem = elem == window ? windowData : elem; var id = elem[ expando ], cache = jQuery.cache, thisCache; if ( !id && typeof name === \"string\" && data === undefined ) { return null; } // Compute a unique ID for the element if ( !id ) { id = ++uuid; } // Avoid generating a new cache unless none exists and we // want to manipulate it. if ( typeof name === \"object\" ) { elem[ expando ] = id; thisCache = cache[ id ] = jQuery.extend(true, {}, name); } else if ( !cache[ id ] ) { elem[ expando ] = id; cache[ id ] = {}; } thisCache = cache[ id ]; // Prevent overriding the named cache with undefined values if ( data !== undefined ) { thisCache[ name ] = data; } return typeof name === \"string\" ? thisCache[ name ] : thisCache; }, removeData: function( elem, name ) { if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) { return; } elem = elem == window ? windowData : elem; var id = elem[ expando ], cache = jQuery.cache, thisCache = cache[ id ]; // If we want to remove a specific section of the element's data if ( name ) { if ( thisCache ) { // Remove the section of cache data delete thisCache[ name ]; // If we've removed all the data, remove the element's cache if ( jQuery.isEmptyObject(thisCache) ) { jQuery.removeData( elem ); } } // Otherwise, we want to remove all of the element's data } else { if ( jQuery.support.deleteExpando ) { delete elem[ jQuery.expando ]; } else if ( elem.removeAttribute ) { elem.removeAttribute( jQuery.expando ); } // Completely remove the data cache delete cache[ id ]; } } }); jQuery.fn.extend({ data: function( key, value ) { if ( typeof key === \"undefined\" && this.length ) { return jQuery.data( this[0] ); } else if ( typeof key === \"object\" ) { return this.each(function() { jQuery.data( this, key ); }); } var parts = key.split(\".\"); parts[1] = parts[1] ? \".\" + parts[1] : \"\"; if ( value === undefined ) { var data = this.triggerHandler(\"getData\" + parts[1] + \"!\", [parts[0]]); if ( data === undefined && this.length ) { data = jQuery.data( this[0], key ); } return data === undefined && parts[1] ? this.data( parts[0] ) : data; } else { return this.trigger(\"setData\" + parts[1] + \"!\", [parts[0], value]).each(function() { jQuery.data( this, key, value ); }); } }, removeData: function( key ) { return this.each(function() { jQuery.removeData( this, key ); }); } }); jQuery.extend({ queue: function( elem, type, data ) { if ( !elem ) { return; } type = (type || \"fx\") + \"queue\"; var q = jQuery.data( elem, type ); // Speed up dequeue by getting out quickly if this is just a lookup if ( !data ) { return q || []; } if ( !q || jQuery.isArray(data) ) { q = jQuery.data( elem, type, jQuery.makeArray(data) ); } else { q.push( data ); } return q; }, dequeue: function( elem, type ) { type = type || \"fx\"; var queue = jQuery.queue( elem, type ), fn = queue.shift(); // If the fx queue is dequeued, always remove the progress sentinel if ( fn === \"inprogress\" ) { fn = queue.shift(); } if ( fn ) { // Add a progress sentinel to prevent the fx queue from being // automatically dequeued if ( type === \"fx\" ) { queue.unshift(\"inprogress\"); } fn.call(elem, function() { jQuery.dequeue(elem, type); }); } } }); jQuery.fn.extend({ queue: function( type, data ) { if ( typeof type !== \"string\" ) { data = type; type = \"fx\"; } if ( data === undefined ) { return jQuery.queue( this[0], type ); } return this.each(function( i, elem ) { var queue = jQuery.queue( this, type, data ); if ( type === \"fx\" && queue[0] !== \"inprogress\" ) { jQuery.dequeue( this, type ); } }); }, dequeue: function( type ) { return this.each(function() { jQuery.dequeue( this, type ); }); }, // Based off of the plugin by Clint Helfers, with permission. // http://blindsignals.com/index.php/2009/07/jquery-delay/ delay: function( time, type ) { time = jQuery.fx ? jQuery.fx.speeds[time] || time : time; type = type || \"fx\"; return this.queue( type, function() { var elem = this; setTimeout(function() { jQuery.dequeue( elem, type ); }, time ); }); }, clearQueue: function( type ) { return this.queue( type || \"fx\", [] ); } }); var rclass = /[\\n\\t]/g, rspace = /\\s+/, rreturn = /\\r/g, rspecialurl = /href|src|style/, rtype = /(button|input)/i, rfocusable = /(button|input|object|select|textarea)/i, rclickable = /^(a|area)$/i, rradiocheck = /radio|checkbox/; jQuery.fn.extend({ attr: function( name, value ) { return access( this, name, value, true, jQuery.attr ); }, removeAttr: function( name, fn ) { return this.each(function(){ jQuery.attr( this, name, \"\" ); if ( this.nodeType === 1 ) { this.removeAttribute( name ); } }); }, addClass: function( value ) { if ( jQuery.isFunction(value) ) { return this.each(function(i) { var self = jQuery(this); self.addClass( value.call(this, i, self.attr(\"class\")) ); }); } if ( value && typeof value === \"string\" ) { var classNames = (value || \"\").split( rspace ); for ( var i = 0, l = this.length; i < l; i++ ) { var elem = this[i]; if ( elem.nodeType === 1 ) { if ( !elem.className ) { elem.className = value; } else { var className = \" \" + elem.className + \" \", setClass = elem.className; for ( var c = 0, cl = classNames.length; c < cl; c++ ) { if ( className.indexOf( \" \" + classNames[c] + \" \" ) < 0 ) { setClass += \" \" + classNames[c]; } } elem.className = jQuery.trim( setClass ); } } } } return this; }, removeClass: function( value ) { if ( jQuery.isFunction(value) ) { return this.each(function(i) { var self = jQuery(this); self.removeClass( value.call(this, i, self.attr(\"class\")) ); }); } if ( (value && typeof value === \"string\") || value === undefined ) { var classNames = (value || \"\").split(rspace); for ( var i = 0, l = this.length; i < l; i++ ) { var elem = this[i]; if ( elem.nodeType === 1 && elem.className ) { if ( value ) { var className = (\" \" + elem.className + \" \").replace(rclass, \" \"); for ( var c = 0, cl = classNames.length; c < cl; c++ ) { className = className.replace(\" \" + classNames[c] + \" \", \" \"); } elem.className = jQuery.trim( className ); } else { elem.className = \"\"; } } } } return this; }, toggleClass: function( value, stateVal ) { var type = typeof value, isBool = typeof stateVal === \"boolean\"; if ( jQuery.isFunction( value ) ) { return this.each(function(i) { var self = jQuery(this); self.toggleClass( value.call(this, i, self.attr(\"class\"), stateVal), stateVal ); }); } return this.each(function() { if ( type === \"string\" ) { // toggle individual class names var className, i = 0, self = jQuery(this), state = stateVal, classNames = value.split( rspace ); while ( (className = classNames[ i++ ]) ) { // check each className given, space seperated list state = isBool ? state : !self.hasClass( className ); self[ state ? \"addClass\" : \"removeClass\" ]( className ); } } else if ( type === \"undefined\" || type === \"boolean\" ) { if ( this.className ) { // store className if set jQuery.data( this, \"__className__\", this.className ); } // toggle whole className this.className = this.className || value === false ? \"\" : jQuery.data( this, \"__className__\" ) || \"\"; } }); }, hasClass: function( selector ) { var className = \" \" + selector + \" \"; for ( var i = 0, l = this.length; i < l; i++ ) { if ( (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) > -1 ) { return true; } } return false; }, val: function( value ) { if ( value === undefined ) { var elem = this[0]; if ( elem ) { if ( jQuery.nodeName( elem, \"option\" ) ) { return (elem.attributes.value || {}).specified ? elem.value : elem.text; } // We need to handle select boxes special if ( jQuery.nodeName( elem, \"select\" ) ) { var index = elem.selectedIndex, values = [], options = elem.options, one = elem.type === \"select-one\"; // Nothing was selected if ( index < 0 ) { return null; } // Loop through all the selected options for ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) { var option = options[ i ]; if ( option.selected ) { // Get the specifc value for the option value = jQuery(option).val(); // We don't need an array for one selects if ( one ) { return value; } // Multi-Selects return an array values.push( value ); } } return values; } // Handle the case where in Webkit \"\" is returned instead of \"on\" if a value isn't specified if ( rradiocheck.test( elem.type ) && !jQuery.support.checkOn ) { return elem.getAttribute(\"value\") === null ? \"on\" : elem.value; } // Everything else, we just grab the value return (elem.value || \"\").replace(rreturn, \"\"); } return undefined; } var isFunction = jQuery.isFunction(value); return this.each(function(i) { var self = jQuery(this), val = value; if ( this.nodeType !== 1 ) { return; } if ( isFunction ) { val = value.call(this, i, self.val()); } // Typecast each time if the value is a Function and the appended // value is therefore different each time. if ( typeof val === \"number\" ) { val += \"\"; } if ( jQuery.isArray(val) && rradiocheck.test( this.type ) ) { this.checked = jQuery.inArray( self.val(), val ) >= 0; } else if ( jQuery.nodeName( this, \"select\" ) ) { var values = jQuery.makeArray(val); jQuery( \"option\", this ).each(function() { this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0; }); if ( !values.length ) { this.selectedIndex = -1; } } else { this.value = val; } }); } }); jQuery.extend({ attrFn: { val: true, css: true, html: true, text: true, data: true, width: true, height: true, offset: true }, attr: function( elem, name, value, pass ) { // don't set attributes on text and comment nodes if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 ) { return undefined; } if ( pass && name in jQuery.attrFn ) { return jQuery(elem)[name](value); } var notxml = elem.nodeType !== 1 || !jQuery.isXMLDoc( elem ), // Whether we are setting (or getting) set = value !== undefined; // Try to normalize/fix the name name = notxml && jQuery.props[ name ] || name; // Only do all the following if this is a node (faster for style) if ( elem.nodeType === 1 ) { // These attributes require special treatment var special = rspecialurl.test( name ); // Safari mis-reports the default selected property of an option // Accessing the parent's selectedIndex property fixes it if ( name === \"selected\" && !jQuery.support.optSelected ) { var parent = elem.parentNode; if ( parent ) { parent.selectedIndex; // Make sure that it also works with optgroups, see #5701 if ( parent.parentNode ) { parent.parentNode.selectedIndex; } } } // If applicable, access the attribute via the DOM 0 way if ( name in elem && notxml && !special ) { if ( set ) { // We can't allow the type property to be changed (since it causes problems in IE) if ( name === \"type\" && rtype.test( elem.nodeName ) && elem.parentNode ) { jQuery.error( \"type property can't be changed\" ); } elem[ name ] = value; } // browsers index elements by id/name on forms, give priority to attributes. if ( jQuery.nodeName( elem, \"form\" ) && elem.getAttributeNode(name) ) { return elem.getAttributeNode( name ).nodeValue; } // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/ if ( name === \"tabIndex\" ) { var attributeNode = elem.getAttributeNode( \"tabIndex\" ); return attributeNode && attributeNode.specified ? attributeNode.value : rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ? 0 : undefined; } return elem[ name ]; } if ( !jQuery.support.style && notxml && name === \"style\" ) { if ( set ) { elem.style.cssText = \"\" + value; } return elem.style.cssText; } if ( set ) { // convert the value to a string (all browsers do this but IE) see #1070 elem.setAttribute( name, \"\" + value ); } var attr = !jQuery.support.hrefNormalized && notxml && special ? // Some attributes require a special call on IE elem.getAttribute( name, 2 ) : elem.getAttribute( name ); // Non-existent attributes return null, we normalize to undefined return attr === null ? undefined : attr; } // elem is actually elem.style ... set the style // Using attr for specific style information is now deprecated. Use style instead. return jQuery.style( elem, name, value ); } }); var rnamespaces = /\\.(.*)$/, fcleanup = function( nm ) { return nm.replace(/[^\\w\\s\\.\\|`]/g, function( ch ) { return \"\\\\\" + ch; }); }; /* * A number of helper functions used for managing events. * Many of the ideas behind this code originated from * Dean Edwards' addEvent library. */ jQuery.event = { // Bind an event to an element // Original by Dean Edwards add: function( elem, types, handler, data ) { if ( elem.nodeType === 3 || elem.nodeType === 8 ) { return; } // For whatever reason, IE has trouble passing the window object // around, causing it to be cloned in the process if ( elem.setInterval && ( elem !== window && !elem.frameElement ) ) { elem = window; } var handleObjIn, handleObj; if ( handler.handler ) { handleObjIn = handler; handler = handleObjIn.handler; } // Make sure that the function being executed has a unique ID if ( !handler.guid ) { handler.guid = jQuery.guid++; } // Init the element's event structure var elemData = jQuery.data( elem ); // If no elemData is found then we must be trying to bind to one of the // banned noData elements if ( !elemData ) { return; } var events = elemData.events = elemData.events || {}, eventHandle = elemData.handle, eventHandle; if ( !eventHandle ) { elemData.handle = eventHandle = function() { // Handle the second event of a trigger and when // an event is called after a page has unloaded return typeof jQuery !== \"undefined\" && !jQuery.event.triggered ? jQuery.event.handle.apply( eventHandle.elem, arguments ) : undefined; }; } // Add elem as a property of the handle function // This is to prevent a memory leak with non-native events in IE. eventHandle.elem = elem; // Handle multiple events separated by a space // jQuery(...).bind(\"mouseover mouseout\", fn); types = types.split(\" \"); var type, i = 0, namespaces; while ( (type = types[ i++ ]) ) { handleObj = handleObjIn ? jQuery.extend({}, handleObjIn) : { handler: handler, data: data }; // Namespaced event handlers if ( type.indexOf(\".\") > -1 ) { namespaces = type.split(\".\"); type = namespaces.shift(); handleObj.namespace = namespaces.slice(0).sort().join(\".\"); } else { namespaces = []; handleObj.namespace = \"\"; } handleObj.type = type; handleObj.guid = handler.guid; // Get the current list of functions bound to this event var handlers = events[ type ], special = jQuery.event.special[ type ] || {}; // Init the event handler queue if ( !handlers ) { handlers = events[ type ] = []; // Check for a special event handler // Only use addEventListener/attachEvent if the special // events handler returns false if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) { // Bind the global event handler to the element if ( elem.addEventListener ) { elem.addEventListener( type, eventHandle, false ); } else if ( elem.attachEvent ) { elem.attachEvent( \"on\" + type, eventHandle ); } } } if ( special.add ) { special.add.call( elem, handleObj ); if ( !handleObj.handler.guid ) { handleObj.handler.guid = handler.guid; } } // Add the function to the element's handler list handlers.push( handleObj ); // Keep track of which events have been used, for global triggering jQuery.event.global[ type ] = true; } // Nullify elem to prevent memory leaks in IE elem = null; }, global: {}, // Detach an event or set of events from an element remove: function( elem, types, handler, pos ) { // don't do events on text and comment nodes if ( elem.nodeType === 3 || elem.nodeType === 8 ) { return; } var ret, type, fn, i = 0, all, namespaces, namespace, special, eventType, handleObj, origType, elemData = jQuery.data( elem ), events = elemData && elemData.events; if ( !elemData || !events ) { return; } // types is actually an event object here if ( types && types.type ) { handler = types.handler; types = types.type; } // Unbind all events for the element if ( !types || typeof types === \"string\" && types.charAt(0) === \".\" ) { types = types || \"\"; for ( type in events ) { jQuery.event.remove( elem, type + types ); } return; } // Handle multiple events separated by a space // jQuery(...).unbind(\"mouseover mouseout\", fn); types = types.split(\" \"); while ( (type = types[ i++ ]) ) { origType = type; handleObj = null; all = type.indexOf(\".\") < 0; namespaces = []; if ( !all ) { // Namespaced event handlers namespaces = type.split(\".\"); type = namespaces.shift(); namespace = new RegExp(\"(^|\\\\.)\" + jQuery.map( namespaces.slice(0).sort(), fcleanup ).join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") } eventType = events[ type ]; if ( !eventType ) { continue; } if ( !handler ) { for ( var j = 0; j < eventType.length; j++ ) { handleObj = eventType[ j ]; if ( all || namespace.test( handleObj.namespace ) ) { jQuery.event.remove( elem, origType, handleObj.handler, j ); eventType.splice( j--, 1 ); } } continue; } special = jQuery.event.special[ type ] || {}; for ( var j = pos || 0; j < eventType.length; j++ ) { handleObj = eventType[ j ]; if ( handler.guid === handleObj.guid ) { // remove the given handler for the given type if ( all || namespace.test( handleObj.namespace ) ) { if ( pos == null ) { eventType.splice( j--, 1 ); } if ( special.remove ) { special.remove.call( elem, handleObj ); } } if ( pos != null ) { break; } } } // remove generic event handler if no more handlers exist if ( eventType.length === 0 || pos != null && eventType.length === 1 ) { if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) { removeEvent( elem, type, elemData.handle ); } ret = null; delete events[ type ]; } } // Remove the expando if it's no longer used if ( jQuery.isEmptyObject( events ) ) { var handle = elemData.handle; if ( handle ) { handle.elem = null; } delete elemData.events; delete elemData.handle; if ( jQuery.isEmptyObject( elemData ) ) { jQuery.removeData( elem ); } } }, // bubbling is internal trigger: function( event, data, elem /*, bubbling */ ) { // Event object or event type var type = event.type || event, bubbling = arguments[3]; if ( !bubbling ) { event = typeof event === \"object\" ? // jQuery.Event object event[expando] ? event : // Object literal jQuery.extend( jQuery.Event(type), event ) : // Just the event type (string) jQuery.Event(type); if ( type.indexOf(\"!\") >= 0 ) { event.type = type = type.slice(0, -1); event.exclusive = true; } // Handle a global trigger if ( !elem ) { // Don't bubble custom events when global (to avoid too much overhead) event.stopPropagation(); // Only trigger if we've ever bound an event for it if ( jQuery.event.global[ type ] ) { jQuery.each( jQuery.cache, function() { if ( this.events && this.events[type] ) { jQuery.event.trigger( event, data, this.handle.elem ); } }); } } // Handle triggering a single element // don't do events on text and comment nodes if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 ) { return undefined; } // Clean up in case it is reused event.result = undefined; event.target = elem; // Clone the incoming data, if any data = jQuery.makeArray( data ); data.unshift( event ); } event.currentTarget = elem; // Trigger the event, it is assumed that \"handle\" is a function var handle = jQuery.data( elem, \"handle\" ); if ( handle ) { handle.apply( elem, data ); } var parent = elem.parentNode || elem.ownerDocument; // Trigger an inline bound script try { if ( !(elem && elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()]) ) { if ( elem[ \"on\" + type ] && elem[ \"on\" + type ].apply( elem, data ) === false ) { event.result = false; } } // prevent IE from throwing an error for some elements with some event types, see #3533 } catch (e) {} if ( !event.isPropagationStopped() && parent ) { jQuery.event.trigger( event, data, parent, true ); } else if ( !event.isDefaultPrevented() ) { var target = event.target, old, isClick = jQuery.nodeName(target, \"a\") && type === \"click\", special = jQuery.event.special[ type ] || {}; if ( (!special._default || special._default.call( elem, event ) === false) && !isClick && !(target && target.nodeName && jQuery.noData[target.nodeName.toLowerCase()]) ) { try { if ( target[ type ] ) { // Make sure that we don't accidentally re-trigger the onFOO events old = target[ \"on\" + type ]; if ( old ) { target[ \"on\" + type ] = null; } jQuery.event.triggered = true; target[ type ](); } // prevent IE from throwing an error for some elements with some event types, see #3533 } catch (e) {} if ( old ) { target[ \"on\" + type ] = old; } jQuery.event.triggered = false; } } }, handle: function( event ) { var all, handlers, namespaces, namespace, events; event = arguments[0] = jQuery.event.fix( event || window.event ); event.currentTarget = this; // Namespaced event handlers all = event.type.indexOf(\".\") < 0 && !event.exclusive; if ( !all ) { namespaces = event.type.split(\".\"); event.type = namespaces.shift(); namespace = new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\"); } var events = jQuery.data(this, \"events\"), handlers = events[ event.type ]; if ( events && handlers ) { // Clone the handlers to prevent manipulation handlers = handlers.slice(0); for ( var j = 0, l = handlers.length; j < l; j++ ) { var handleObj = handlers[ j ]; // Filter the functions by class if ( all || namespace.test( handleObj.namespace ) ) { // Pass in a reference to the handler function itself // So that we can later remove it event.handler = handleObj.handler; event.data = handleObj.data; event.handleObj = handleObj; var ret = handleObj.handler.apply( this, arguments ); if ( ret !== undefined ) { event.result = ret; if ( ret === false ) { event.preventDefault(); event.stopPropagation(); } } if ( event.isImmediatePropagationStopped() ) { break; } } } } return event.result; }, props: \"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which\".split(\" \"), fix: function( event ) { if ( event[ expando ] ) { return event; } // store a copy of the original event object // and \"clone\" to set read-only properties var originalEvent = event; event = jQuery.Event( originalEvent ); for ( var i = this.props.length, prop; i; ) { prop = this.props[ --i ]; event[ prop ] = originalEvent[ prop ]; } // Fix target property, if necessary if ( !event.target ) { event.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either } // check if target is a textnode (safari) if ( event.target.nodeType === 3 ) { event.target = event.target.parentNode; } // Add relatedTarget, if necessary if ( !event.relatedTarget && event.fromElement ) { event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement; } // Calculate pageX/Y if missing and clientX/Y available if ( event.pageX == null && event.clientX != null ) { var doc = document.documentElement, body = document.body; event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0); event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0); } // Add which for key events if ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) ) { event.which = event.charCode || event.keyCode; } // Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs) if ( !event.metaKey && event.ctrlKey ) { event.metaKey = event.ctrlKey; } // Add which for click: 1 === left; 2 === middle; 3 === right // Note: button is not normalized, so don't use it if ( !event.which && event.button !== undefined ) { event.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) )); } return event; }, // Deprecated, use jQuery.guid instead guid: 1E8, // Deprecated, use jQuery.proxy instead proxy: jQuery.proxy, special: { ready: { // Make sure the ready event is setup setup: jQuery.bindReady, teardown: jQuery.noop }, live: { add: function( handleObj ) { jQuery.event.add( this, handleObj.origType, jQuery.extend({}, handleObj, {handler: liveHandler}) ); }, remove: function( handleObj ) { var remove = true, type = handleObj.origType.replace(rnamespaces, \"\"); jQuery.each( jQuery.data(this, \"events\").live || [], function() { if ( type === this.origType.replace(rnamespaces, \"\") ) { remove = false; return false; } }); if ( remove ) { jQuery.event.remove( this, handleObj.origType, liveHandler ); } } }, beforeunload: { setup: function( data, namespaces, eventHandle ) { // We only want to do this special case on windows if ( this.setInterval ) { this.onbeforeunload = eventHandle; } return false; }, teardown: function( namespaces, eventHandle ) { if ( this.onbeforeunload === eventHandle ) { this.onbeforeunload = null; } } } } }; var removeEvent = document.removeEventListener ? function( elem, type, handle ) { elem.removeEventListener( type, handle, false ); } : function( elem, type, handle ) { elem.detachEvent( \"on\" + type, handle ); }; jQuery.Event = function( src ) { // Allow instantiation without the 'new' keyword if ( !this.preventDefault ) { return new jQuery.Event( src ); } // Event object if ( src && src.type ) { this.originalEvent = src; this.type = src.type; // Event type } else { this.type = src; } // timeStamp is buggy for some events on Firefox(#3843) // So we won't rely on the native value this.timeStamp = now(); // Mark it as fixed this[ expando ] = true; }; function returnFalse() { return false; } function returnTrue() { return true; } // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html jQuery.Event.prototype = { preventDefault: function() { this.isDefaultPrevented = returnTrue; var e = this.originalEvent; if ( !e ) { return; } // if preventDefault exists run it on the original event if ( e.preventDefault ) { e.preventDefault(); } // otherwise set the returnValue property of the original event to false (IE) e.returnValue = false; }, stopPropagation: function() { this.isPropagationStopped = returnTrue; var e = this.originalEvent; if ( !e ) { return; } // if stopPropagation exists run it on the original event if ( e.stopPropagation ) { e.stopPropagation(); } // otherwise set the cancelBubble property of the original event to true (IE) e.cancelBubble = true; }, stopImmediatePropagation: function() { this.isImmediatePropagationStopped = returnTrue; this.stopPropagation(); }, isDefaultPrevented: returnFalse, isPropagationStopped: returnFalse, isImmediatePropagationStopped: returnFalse }; // Checks if an event happened on an element within another element // Used in jQuery.event.special.mouseenter and mouseleave handlers var withinElement = function( event ) { // Check if mouse(over|out) are still within the same parent element var parent = event.relatedTarget; // Firefox sometimes assigns relatedTarget a XUL element // which we cannot access the parentNode property of try { // Traverse up the tree while ( parent && parent !== this ) { parent = parent.parentNode; } if ( parent !== this ) { // set the correct event type event.type = event.data; // handle event if we actually just moused on to a non sub-element jQuery.event.handle.apply( this, arguments ); } // assuming we've left the element since we most likely mousedover a xul element } catch(e) { } }, // In case of event delegation, we only need to rename the event.type, // liveHandler will take care of the rest. delegate = function( event ) { event.type = event.data; jQuery.event.handle.apply( this, arguments ); }; // Create mouseenter and mouseleave events jQuery.each({ mouseenter: \"mouseover\", mouseleave: \"mouseout\" }, function( orig, fix ) { jQuery.event.special[ orig ] = { setup: function( data ) { jQuery.event.add( this, fix, data && data.selector ? delegate : withinElement, orig ); }, teardown: function( data ) { jQuery.event.remove( this, fix, data && data.selector ? delegate : withinElement ); } }; }); // submit delegation if ( !jQuery.support.submitBubbles ) { jQuery.event.special.submit = { setup: function( data, namespaces ) { if ( this.nodeName.toLowerCase() !== \"form\" ) { jQuery.event.add(this, \"click.specialSubmit\", function( e ) { var elem = e.target, type = elem.type; if ( (type === \"submit\" || type === \"image\") && jQuery( elem ).closest(\"form\").length ) { return trigger( \"submit\", this, arguments ); } }); jQuery.event.add(this, \"keypress.specialSubmit\", function( e ) { var elem = e.target, type = elem.type; if ( (type === \"text\" || type === \"password\") && jQuery( elem ).closest(\"form\").length && e.keyCode === 13 ) { return trigger( \"submit\", this, arguments ); } }); } else { return false; } }, teardown: function( namespaces ) { jQuery.event.remove( this, \".specialSubmit\" ); } }; } // change delegation, happens here so we have bind. if ( !jQuery.support.changeBubbles ) { var formElems = /textarea|input|select/i, changeFilters, getVal = function( elem ) { var type = elem.type, val = elem.value; if ( type === \"radio\" || type === \"checkbox\" ) { val = elem.checked; } else if ( type === \"select-multiple\" ) { val = elem.selectedIndex > -1 ? jQuery.map( elem.options, function( elem ) { return elem.selected; }).join(\"-\") : \"\"; } else if ( elem.nodeName.toLowerCase() === \"select\" ) { val = elem.selectedIndex; } return val; }, testChange = function testChange( e ) { var elem = e.target, data, val; if ( !formElems.test( elem.nodeName ) || elem.readOnly ) { return; } data = jQuery.data( elem, \"_change_data\" ); val = getVal(elem); // the current data will be also retrieved by beforeactivate if ( e.type !== \"focusout\" || elem.type !== \"radio\" ) { jQuery.data( elem, \"_change_data\", val ); } if ( data === undefined || val === data ) { return; } if ( data != null || val ) { e.type = \"change\"; return jQuery.event.trigger( e, arguments[1], elem ); } }; jQuery.event.special.change = { filters: { focusout: testChange, click: function( e ) { var elem = e.target, type = elem.type; if ( type === \"radio\" || type === \"checkbox\" || elem.nodeName.toLowerCase() === \"select\" ) { return testChange.call( this, e ); } }, // Change has to be called before submit // Keydown will be called before keypress, which is used in submit-event delegation keydown: function( e ) { var elem = e.target, type = elem.type; if ( (e.keyCode === 13 && elem.nodeName.toLowerCase() !== \"textarea\") || (e.keyCode === 32 && (type === \"checkbox\" || type === \"radio\")) || type === \"select-multiple\" ) { return testChange.call( this, e ); } }, // Beforeactivate happens also before the previous element is blurred // with this event you can't trigger a change event, but you can store // information/focus[in] is not needed anymore beforeactivate: function( e ) { var elem = e.target; jQuery.data( elem, \"_change_data\", getVal(elem) ); } }, setup: function( data, namespaces ) { if ( this.type === \"file\" ) { return false; } for ( var type in changeFilters ) { jQuery.event.add( this, type + \".specialChange\", changeFilters[type] ); } return formElems.test( this.nodeName ); }, teardown: function( namespaces ) { jQuery.event.remove( this, \".specialChange\" ); return formElems.test( this.nodeName ); } }; changeFilters = jQuery.event.special.change.filters; } function trigger( type, elem, args ) { args[0].type = type; return jQuery.event.handle.apply( elem, args ); } // Create \"bubbling\" focus and blur events if ( document.addEventListener ) { jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) { jQuery.event.special[ fix ] = { setup: function() { this.addEventListener( orig, handler, true ); }, teardown: function() { this.removeEventListener( orig, handler, true ); } }; function handler( e ) { e = jQuery.event.fix( e ); e.type = fix; return jQuery.event.handle.call( this, e ); } }); } jQuery.each([\"bind\", \"one\"], function( i, name ) { jQuery.fn[ name ] = function( type, data, fn ) { // Handle object literals if ( typeof type === \"object\" ) { for ( var key in type ) { this[ name ](key, data, type[key], fn); } return this; } if ( jQuery.isFunction( data ) ) { fn = data; data = undefined; } var handler = name === \"one\" ? jQuery.proxy( fn, function( event ) { jQuery( this ).unbind( event, handler ); return fn.apply( this, arguments ); }) : fn; if ( type === \"unload\" && name !== \"one\" ) { this.one( type, data, fn ); } else { for ( var i = 0, l = this.length; i < l; i++ ) { jQuery.event.add( this[i], type, handler, data ); } } return this; }; }); jQuery.fn.extend({ unbind: function( type, fn ) { // Handle object literals if ( typeof type === \"object\" && !type.preventDefault ) { for ( var key in type ) { this.unbind(key, type[key]); } } else { for ( var i = 0, l = this.length; i < l; i++ ) { jQuery.event.remove( this[i], type, fn ); } } return this; }, delegate: function( selector, types, data, fn ) { return this.live( types, data, fn, selector ); }, undelegate: function( selector, types, fn ) { if ( arguments.length === 0 ) { return this.unbind( \"live\" ); } else { return this.die( types, null, fn, selector ); } }, trigger: function( type, data ) { return this.each(function() { jQuery.event.trigger( type, data, this ); }); }, triggerHandler: function( type, data ) { if ( this[0] ) { var event = jQuery.Event( type ); event.preventDefault(); event.stopPropagation(); jQuery.event.trigger( event, data, this[0] ); return event.result; } }, toggle: function( fn ) { // Save reference to arguments for access in closure var args = arguments, i = 1; // link all the functions, so any of them can unbind this click handler while ( i < args.length ) { jQuery.proxy( fn, args[ i++ ] ); } return this.click( jQuery.proxy( fn, function( event ) { // Figure out which function to execute var lastToggle = ( jQuery.data( this, \"lastToggle\" + fn.guid ) || 0 ) % i; jQuery.data( this, \"lastToggle\" + fn.guid, lastToggle + 1 ); // Make sure that clicks stop event.preventDefault(); // and execute the function return args[ lastToggle ].apply( this, arguments ) || false; })); }, hover: function( fnOver, fnOut ) { return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver ); } }); var liveMap = { focus: \"focusin\", blur: \"focusout\", mouseenter: \"mouseover\", mouseleave: \"mouseout\" }; jQuery.each([\"live\", \"die\"], function( i, name ) { jQuery.fn[ name ] = function( types, data, fn, origSelector /* Internal Use Only */ ) { var type, i = 0, match, namespaces, preType, selector = origSelector || this.selector, context = origSelector ? this : jQuery( this.context ); if ( jQuery.isFunction( data ) ) { fn = data; data = undefined; } types = (types || \"\").split(\" \"); while ( (type = types[ i++ ]) != null ) { match = rnamespaces.exec( type ); namespaces = \"\"; if ( match ) { namespaces = match[0]; type = type.replace( rnamespaces, \"\" ); } if ( type === \"hover\" ) { types.push( \"mouseenter\" + namespaces, \"mouseleave\" + namespaces ); continue; } preType = type; if ( type === \"focus\" || type === \"blur\" ) { types.push( liveMap[ type ] + namespaces ); type = type + namespaces; } else { type = (liveMap[ type ] || type) + namespaces; } if ( name === \"live\" ) { // bind live handler context.each(function(){ jQuery.event.add( this, liveConvert( type, selector ), { data: data, selector: selector, handler: fn, origType: type, origHandler: fn, preType: preType } ); }); } else { // unbind live handler context.unbind( liveConvert( type, selector ), fn ); } } return this; } }); function liveHandler( event ) { var stop, elems = [], selectors = [], args = arguments, related, match, handleObj, elem, j, i, l, data, events = jQuery.data( this, \"events\" ); // Make sure we avoid non-left-click bubbling in Firefox (#3861) if ( event.liveFired === this || !events || !events.live || event.button && event.type === \"click\" ) { return; } event.liveFired = this; var live = events.live.slice(0); for ( j = 0; j < live.length; j++ ) { handleObj = live[j]; if ( handleObj.origType.replace( rnamespaces, \"\" ) === event.type ) { selectors.push( handleObj.selector ); } else { live.splice( j--, 1 ); } } match = jQuery( event.target ).closest( selectors, event.currentTarget ); for ( i = 0, l = match.length; i < l; i++ ) { for ( j = 0; j < live.length; j++ ) { handleObj = live[j]; if ( match[i].selector === handleObj.selector ) { elem = match[i].elem; related = null; // Those two events require additional checking if ( handleObj.preType === \"mouseenter\" || handleObj.preType === \"mouseleave\" ) { related = jQuery( event.relatedTarget ).closest( handleObj.selector )[0]; } if ( !related || related !== elem ) { elems.push({ elem: elem, handleObj: handleObj }); } } } } for ( i = 0, l = elems.length; i < l; i++ ) { match = elems[i]; event.currentTarget = match.elem; event.data = match.handleObj.data; event.handleObj = match.handleObj; if ( match.handleObj.origHandler.apply( match.elem, args ) === false ) { stop = false; break; } } return stop; } function liveConvert( type, selector ) { return \"live.\" + (type && type !== \"*\" ? type + \".\" : \"\") + selector.replace(/\\./g, \"`\").replace(/ /g, \"&\"); } jQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup error\").split(\" \"), function( i, name ) { // Handle event binding jQuery.fn[ name ] = function( fn ) { return fn ? this.bind( name, fn ) : this.trigger( name ); }; if ( jQuery.attrFn ) { jQuery.attrFn[ name ] = true; } }); // Prevent memory leaks in IE // Window isn't included so as not to unbind existing unload events // More info: // - http://isaacschlueter.com/2006/10/msie-memory-leaks/ if ( window.attachEvent && !window.addEventListener ) { window.attachEvent(\"onunload\", function() { for ( var id in jQuery.cache ) { if ( jQuery.cache[ id ].handle ) { // Try/Catch is to handle iframes being unloaded, see #4280 try { jQuery.event.remove( jQuery.cache[ id ].handle.elem ); } catch(e) {} } } }); } /*! * Sizzle CSS Selector Engine - v1.0 * Copyright 2009, The Dojo Foundation * Released under the MIT, BSD, and GPL Licenses. * More information: http://sizzlejs.com/ */ (function(){ var chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g, done = 0, toString = Object.prototype.toString, hasDuplicate = false, baseHasDuplicate = true; // Here we check if the JavaScript engine is using some sort of // optimization where it does not always call our comparision // function. If that is the case, discard the hasDuplicate value. // Thus far that includes Google Chrome. [0, 0].sort(function(){ baseHasDuplicate = false; return 0; }); var Sizzle = function(selector, context, results, seed) { results = results || []; var origContext = context = context || document; if ( context.nodeType !== 1 && context.nodeType !== 9 ) { return []; } if ( !selector || typeof selector !== \"string\" ) { return results; } var parts = [], m, set, checkSet, extra, prune = true, contextXML = isXML(context), soFar = selector; // Reset the position of the chunker regexp (start from head) while ( (chunker.exec(\"\"), m = chunker.exec(soFar)) !== null ) { soFar = m[3]; parts.push( m[1] ); if ( m[2] ) { extra = m[3]; break; } } if ( parts.length > 1 && origPOS.exec( selector ) ) { if ( parts.length === 2 && Expr.relative[ parts[0] ] ) { set = posProcess( parts[0] + parts[1], context ); } else { set = Expr.relative[ parts[0] ] ? [ context ] : Sizzle( parts.shift(), context ); while ( parts.length ) { selector = parts.shift(); if ( Expr.relative[ selector ] ) { selector += parts.shift(); } set = posProcess( selector, set ); } } } else { // Take a shortcut and set the context if the root selector is an ID // (but not if it'll be faster if the inner selector is an ID) if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML && Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) { var ret = Sizzle.find( parts.shift(), context, contextXML ); context = ret.expr ? Sizzle.filter( ret.expr, ret.set )[0] : ret.set[0]; } if ( context ) { var ret = seed ? { expr: parts.pop(), set: makeArray(seed) } : Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === \"~\" || parts[0] === \"+\") && context.parentNode ? context.parentNode : context, contextXML ); set = ret.expr ? Sizzle.filter( ret.expr, ret.set ) : ret.set; if ( parts.length > 0 ) { checkSet = makeArray(set); } else { prune = false; } while ( parts.length ) { var cur = parts.pop(), pop = cur; if ( !Expr.relative[ cur ] ) { cur = \"\"; } else { pop = parts.pop(); } if ( pop == null ) { pop = context; } Expr.relative[ cur ]( checkSet, pop, contextXML ); } } else { checkSet = parts = []; } } if ( !checkSet ) { checkSet = set; } if ( !checkSet ) { Sizzle.error( cur || selector ); } if ( toString.call(checkSet) === \"[object Array]\" ) { if ( !prune ) { results.push.apply( results, checkSet ); } else if ( context && context.nodeType === 1 ) { for ( var i = 0; checkSet[i] != null; i++ ) { if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && contains(context, checkSet[i])) ) { results.push( set[i] ); } } } else { for ( var i = 0; checkSet[i] != null; i++ ) { if ( checkSet[i] && checkSet[i].nodeType === 1 ) { results.push( set[i] ); } } } } else { makeArray( checkSet, results ); } if ( extra ) { Sizzle( extra, origContext, results, seed ); Sizzle.uniqueSort( results ); } return results; }; Sizzle.uniqueSort = function(results){ if ( sortOrder ) { hasDuplicate = baseHasDuplicate; results.sort(sortOrder); if ( hasDuplicate ) { for ( var i = 1; i < results.length; i++ ) { if ( results[i] === results[i-1] ) { results.splice(i--, 1); } } } } return results; }; Sizzle.matches = function(expr, set){ return Sizzle(expr, null, null, set); }; Sizzle.find = function(expr, context, isXML){ var set, match; if ( !expr ) { return []; } for ( var i = 0, l = Expr.order.length; i < l; i++ ) { var type = Expr.order[i], match; if ( (match = Expr.leftMatch[ type ].exec( expr )) ) { var left = match[1]; match.splice(1,1); if ( left.substr( left.length - 1 ) !== \"\\\\\" ) { match[1] = (match[1] || \"\").replace(/\\\\/g, \"\"); set = Expr.find[ type ]( match, context, isXML ); if ( set != null ) { expr = expr.replace( Expr.match[ type ], \"\" ); break; } } } } if ( !set ) { set = context.getElementsByTagName(\"*\"); } return {set: set, expr: expr}; }; Sizzle.filter = function(expr, set, inplace, not){ var old = expr, result = [], curLoop = set, match, anyFound, isXMLFilter = set && set[0] && isXML(set[0]); while ( expr && set.length ) { for ( var type in Expr.filter ) { if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) { var filter = Expr.filter[ type ], found, item, left = match[1]; anyFound = false; match.splice(1,1); if ( left.substr( left.length - 1 ) === \"\\\\\" ) { continue; } if ( curLoop === result ) { result = []; } if ( Expr.preFilter[ type ] ) { match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter ); if ( !match ) { anyFound = found = true; } else if ( match === true ) { continue; } } if ( match ) { for ( var i = 0; (item = curLoop[i]) != null; i++ ) { if ( item ) { found = filter( item, match, i, curLoop ); var pass = not ^ !!found; if ( inplace && found != null ) { if ( pass ) { anyFound = true; } else { curLoop[i] = false; } } else if ( pass ) { result.push( item ); anyFound = true; } } } } if ( found !== undefined ) { if ( !inplace ) { curLoop = result; } expr = expr.replace( Expr.match[ type ], \"\" ); if ( !anyFound ) { return []; } break; } } } // Improper expression if ( expr === old ) { if ( anyFound == null ) { Sizzle.error( expr ); } else { break; } } old = expr; } return curLoop; }; Sizzle.error = function( msg ) { throw \"Syntax error, unrecognized expression: \" + msg; }; var Expr = Sizzle.selectors = { order: [ \"ID\", \"NAME\", \"TAG\" ], match: { ID: /#((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/, CLASS: /\\.((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/, NAME: /\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)['\"]*\\]/, ATTR: /\\[\\s*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(['\"]*)(.*?)\\3|)\\s*\\]/, TAG: /^((?:[\\w\\u00c0-\\uFFFF\\*-]|\\\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\\((even|odd|[\\dn+-]*)\\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^-]|$)/, PSEUDO: /:((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/ }, leftMatch: {}, attrMap: { \"class\": \"className\", \"for\": \"htmlFor\" }, attrHandle: { href: function(elem){ return elem.getAttribute(\"href\"); } }, relative: { \"+\": function(checkSet, part){ var isPartStr = typeof part === \"string\", isTag = isPartStr && !/\\W/.test(part), isPartStrNotTag = isPartStr && !isTag; if ( isTag ) { part = part.toLowerCase(); } for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) { if ( (elem = checkSet[i]) ) { while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {} checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ? elem || false : elem === part; } } if ( isPartStrNotTag ) { Sizzle.filter( part, checkSet, true ); } }, \">\": function(checkSet, part){ var isPartStr = typeof part === \"string\"; if ( isPartStr && !/\\W/.test(part) ) { part = part.toLowerCase(); for ( var i = 0, l = checkSet.length; i < l; i++ ) { var elem = checkSet[i]; if ( elem ) { var parent = elem.parentNode; checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false; } } } else { for ( var i = 0, l = checkSet.length; i < l; i++ ) { var elem = checkSet[i]; if ( elem ) { checkSet[i] = isPartStr ? elem.parentNode : elem.parentNode === part; } } if ( isPartStr ) { Sizzle.filter( part, checkSet, true ); } } }, \"\": function(checkSet, part, isXML){ var doneName = done++, checkFn = dirCheck; if ( typeof part === \"string\" && !/\\W/.test(part) ) { var nodeCheck = part = part.toLowerCase(); checkFn = dirNodeCheck; } checkFn(\"parentNode\", part, doneName, checkSet, nodeCheck, isXML); }, \"~\": function(checkSet, part, isXML){ var doneName = done++, checkFn = dirCheck; if ( typeof part === \"string\" && !/\\W/.test(part) ) { var nodeCheck = part = part.toLowerCase(); checkFn = dirNodeCheck; } checkFn(\"previousSibling\", part, doneName, checkSet, nodeCheck, isXML); } }, find: { ID: function(match, context, isXML){ if ( typeof context.getElementById !== \"undefined\" && !isXML ) { var m = context.getElementById(match[1]); return m ? [m] : []; } }, NAME: function(match, context){ if ( typeof context.getElementsByName !== \"undefined\" ) { var ret = [], results = context.getElementsByName(match[1]); for ( var i = 0, l = results.length; i < l; i++ ) { if ( results[i].getAttribute(\"name\") === match[1] ) { ret.push( results[i] ); } } return ret.length === 0 ? null : ret; } }, TAG: function(match, context){ return context.getElementsByTagName(match[1]); } }, preFilter: { CLASS: function(match, curLoop, inplace, result, not, isXML){ match = \" \" + match[1].replace(/\\\\/g, \"\") + \" \"; if ( isXML ) { return match; } for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) { if ( elem ) { if ( not ^ (elem.className && (\" \" + elem.className + \" \").replace(/[\\t\\n]/g, \" \").indexOf(match) >= 0) ) { if ( !inplace ) { result.push( elem ); } } else if ( inplace ) { curLoop[i] = false; } } } return false; }, ID: function(match){ return match[1].replace(/\\\\/g, \"\"); }, TAG: function(match, curLoop){ return match[1].toLowerCase(); }, CHILD: function(match){ if ( match[1] === \"nth\" ) { // parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6' var test = /(-?)(\\d*)n((?:\\+|-)?\\d*)/.exec( match[2] === \"even\" && \"2n\" || match[2] === \"odd\" && \"2n+1\" || !/\\D/.test( match[2] ) && \"0n+\" + match[2] || match[2]); // calculate the numbers (first)n+(last) including if they are negative match[2] = (test[1] + (test[2] || 1)) - 0; match[3] = test[3] - 0; } // TODO: Move to normal caching system match[0] = done++; return match; }, ATTR: function(match, curLoop, inplace, result, not, isXML){ var name = match[1].replace(/\\\\/g, \"\"); if ( !isXML && Expr.attrMap[name] ) { match[1] = Expr.attrMap[name]; } if ( match[2] === \"~=\" ) { match[4] = \" \" + match[4] + \" \"; } return match; }, PSEUDO: function(match, curLoop, inplace, result, not){ if ( match[1] === \"not\" ) { // If we're dealing with a complex expression, or a simple one if ( ( chunker.exec(match[3]) || \"\" ).length > 1 || /^\\w/.test(match[3]) ) { match[3] = Sizzle(match[3], null, null, curLoop); } else { var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not); if ( !inplace ) { result.push.apply( result, ret ); } return false; } } else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) { return true; } return match; }, POS: function(match){ match.unshift( true ); return match; } }, filters: { enabled: function(elem){ return elem.disabled === false && elem.type !== \"hidden\"; }, disabled: function(elem){ return elem.disabled === true; }, checked: function(elem){ return elem.checked === true; }, selected: function(elem){ // Accessing this property makes selected-by-default // options in Safari work properly elem.parentNode.selectedIndex; return elem.selected === true; }, parent: function(elem){ return !!elem.firstChild; }, empty: function(elem){ return !elem.firstChild; }, has: function(elem, i, match){ return !!Sizzle( match[3], elem ).length; }, header: function(elem){ return /h\\d/i.test( elem.nodeName ); }, text: function(elem){ return \"text\" === elem.type; }, radio: function(elem){ return \"radio\" === elem.type; }, checkbox: function(elem){ return \"checkbox\" === elem.type; }, file: function(elem){ return \"file\" === elem.type; }, password: function(elem){ return \"password\" === elem.type; }, submit: function(elem){ return \"submit\" === elem.type; }, image: function(elem){ return \"image\" === elem.type; }, reset: function(elem){ return \"reset\" === elem.type; }, button: function(elem){ return \"button\" === elem.type || elem.nodeName.toLowerCase() === \"button\"; }, input: function(elem){ return /input|select|textarea|button/i.test(elem.nodeName); } }, setFilters: { first: function(elem, i){ return i === 0; }, last: function(elem, i, match, array){ return i === array.length - 1; }, even: function(elem, i){ return i % 2 === 0; }, odd: function(elem, i){ return i % 2 === 1; }, lt: function(elem, i, match){ return i < match[3] - 0; }, gt: function(elem, i, match){ return i > match[3] - 0; }, nth: function(elem, i, match){ return match[3] - 0 === i; }, eq: function(elem, i, match){ return match[3] - 0 === i; } }, filter: { PSEUDO: function(elem, match, i, array){ var name = match[1], filter = Expr.filters[ name ]; if ( filter ) { return filter( elem, i, match, array ); } else if ( name === \"contains\" ) { return (elem.textContent || elem.innerText || getText([ elem ]) || \"\").indexOf(match[3]) >= 0; } else if ( name === \"not\" ) { var not = match[3]; for ( var i = 0, l = not.length; i < l; i++ ) { if ( not[i] === elem ) { return false; } } return true; } else { Sizzle.error( \"Syntax error, unrecognized expression: \" + name ); } }, CHILD: function(elem, match){ var type = match[1], node = elem; switch (type) { case 'only': case 'first': while ( (node = node.previousSibling) ) { if ( node.nodeType === 1 ) { return false; } } if ( type === \"first\" ) { return true; } node = elem; case 'last': while ( (node = node.nextSibling) ) { if ( node.nodeType === 1 ) { return false; } } return true; case 'nth': var first = match[2], last = match[3]; if ( first === 1 && last === 0 ) { return true; } var doneName = match[0], parent = elem.parentNode; if ( parent && (parent.sizcache !== doneName || !elem.nodeIndex) ) { var count = 0; for ( node = parent.firstChild; node; node = node.nextSibling ) { if ( node.nodeType === 1 ) { node.nodeIndex = ++count; } } parent.sizcache = doneName; } var diff = elem.nodeIndex - last; if ( first === 0 ) { return diff === 0; } else { return ( diff % first === 0 && diff / first >= 0 ); } } }, ID: function(elem, match){ return elem.nodeType === 1 && elem.getAttribute(\"id\") === match; }, TAG: function(elem, match){ return (match === \"*\" && elem.nodeType === 1) || elem.nodeName.toLowerCase() === match; }, CLASS: function(elem, match){ return (\" \" + (elem.className || elem.getAttribute(\"class\")) + \" \") .indexOf( match ) > -1; }, ATTR: function(elem, match){ var name = match[1], result = Expr.attrHandle[ name ] ? Expr.attrHandle[ name ]( elem ) : elem[ name ] != null ? elem[ name ] : elem.getAttribute( name ), value = result + \"\", type = match[2], check = match[4]; return result == null ? type === \"!=\" : type === \"=\" ? value === check : type === \"*=\" ? value.indexOf(check) >= 0 : type === \"~=\" ? (\" \" + value + \" \").indexOf(check) >= 0 : !check ? value && result !== false : type === \"!=\" ? value !== check : type === \"^=\" ? value.indexOf(check) === 0 : type === \"$=\" ? value.substr(value.length - check.length) === check : type === \"|=\" ? value === check || value.substr(0, check.length + 1) === check + \"-\" : false; }, POS: function(elem, match, i, array){ var name = match[2], filter = Expr.setFilters[ name ]; if ( filter ) { return filter( elem, i, match, array ); } } } }; var origPOS = Expr.match.POS; for ( var type in Expr.match ) { Expr.match[ type ] = new RegExp( Expr.match[ type ].source + /(?![^\\[]*\\])(?![^\\(]*\\))/.source ); Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){ return \"\\\\\" + (num - 0 + 1); })); } var makeArray = function(array, results) { array = Array.prototype.slice.call( array, 0 ); if ( results ) { results.push.apply( results, array ); return results; } return array; }; // Perform a simple check to determine if the browser is capable of // converting a NodeList to an array using builtin methods. // Also verifies that the returned array holds DOM nodes // (which is not the case in the Blackberry browser) try { Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType; // Provide a fallback method if it does not work } catch(e){ makeArray = function(array, results) { var ret = results || []; if ( toString.call(array) === \"[object Array]\" ) { Array.prototype.push.apply( ret, array ); } else { if ( typeof array.length === \"number\" ) { for ( var i = 0, l = array.length; i < l; i++ ) { ret.push( array[i] ); } } else { for ( var i = 0; array[i]; i++ ) { ret.push( array[i] ); } } } return ret; }; } var sortOrder; if ( document.documentElement.compareDocumentPosition ) { sortOrder = function( a, b ) { if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) { if ( a == b ) { hasDuplicate = true; } return a.compareDocumentPosition ? -1 : 1; } var ret = a.compareDocumentPosition(b) & 4 ? -1 : a === b ? 0 : 1; if ( ret === 0 ) { hasDuplicate = true; } return ret; }; } else if ( \"sourceIndex\" in document.documentElement ) { sortOrder = function( a, b ) { if ( !a.sourceIndex || !b.sourceIndex ) { if ( a == b ) { hasDuplicate = true; } return a.sourceIndex ? -1 : 1; } var ret = a.sourceIndex - b.sourceIndex; if ( ret === 0 ) { hasDuplicate = true; } return ret; }; } else if ( document.createRange ) { sortOrder = function( a, b ) { if ( !a.ownerDocument || !b.ownerDocument ) { if ( a == b ) { hasDuplicate = true; } return a.ownerDocument ? -1 : 1; } var aRange = a.ownerDocument.createRange(), bRange = b.ownerDocument.createRange(); aRange.setStart(a, 0); aRange.setEnd(a, 0); bRange.setStart(b, 0); bRange.setEnd(b, 0); var ret = aRange.compareBoundaryPoints(Range.START_TO_END, bRange); if ( ret === 0 ) { hasDuplicate = true; } return ret; }; } // Utility function for retreiving the text value of an array of DOM nodes function getText( elems ) { var ret = \"\", elem; for ( var i = 0; elems[i]; i++ ) { elem = elems[i]; // Get the text from text nodes and CDATA nodes if ( elem.nodeType === 3 || elem.nodeType === 4 ) { ret += elem.nodeValue; // Traverse everything else, except comment nodes } else if ( elem.nodeType !== 8 ) { ret += getText( elem.childNodes ); } } return ret; } // Check to see if the browser returns elements by name when // querying by getElementById (and provide a workaround) (function(){ // We're going to inject a fake input element with a specified name var form = document.createElement(\"div\"), id = \"script\" + (new Date).getTime(); form.innerHTML = \"\"; // Inject it into the root element, check its status, and remove it quickly var root = document.documentElement; root.insertBefore( form, root.firstChild ); // The workaround has to do additional checks after a getElementById // Which slows things down for other browsers (hence the branching) if ( document.getElementById( id ) ) { Expr.find.ID = function(match, context, isXML){ if ( typeof context.getElementById !== \"undefined\" && !isXML ) { var m = context.getElementById(match[1]); return m ? m.id === match[1] || typeof m.getAttributeNode !== \"undefined\" && m.getAttributeNode(\"id\").nodeValue === match[1] ? [m] : undefined : []; } }; Expr.filter.ID = function(elem, match){ var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\"); return elem.nodeType === 1 && node && node.nodeValue === match; }; } root.removeChild( form ); root = form = null; // release memory in IE })(); (function(){ // Check to see if the browser returns only elements // when doing getElementsByTagName(\"*\") // Create a fake element var div = document.createElement(\"div\"); div.appendChild( document.createComment(\"\") ); // Make sure no comments are found if ( div.getElementsByTagName(\"*\").length > 0 ) { Expr.find.TAG = function(match, context){ var results = context.getElementsByTagName(match[1]); // Filter out possible comments if ( match[1] === \"*\" ) { var tmp = []; for ( var i = 0; results[i]; i++ ) { if ( results[i].nodeType === 1 ) { tmp.push( results[i] ); } } results = tmp; } return results; }; } // Check to see if an attribute returns normalized href attributes div.innerHTML = \"\"; if ( div.firstChild && typeof div.firstChild.getAttribute !== \"undefined\" && div.firstChild.getAttribute(\"href\") !== \"#\" ) { Expr.attrHandle.href = function(elem){ return elem.getAttribute(\"href\", 2); }; } div = null; // release memory in IE })(); if ( document.querySelectorAll ) { (function(){ var oldSizzle = Sizzle, div = document.createElement(\"div\"); div.innerHTML = \"\"; // Safari can't handle uppercase or unicode characters when // in quirks mode. if ( div.querySelectorAll && div.querySelectorAll(\".TEST\").length === 0 ) { return; } Sizzle = function(query, context, extra, seed){ context = context || document; // Only use querySelectorAll on non-XML documents // (ID selectors don't work in non-HTML documents) if ( !seed && context.nodeType === 9 && !isXML(context) ) { try { return makeArray( context.querySelectorAll(query), extra ); } catch(e){} } return oldSizzle(query, context, extra, seed); }; for ( var prop in oldSizzle ) { Sizzle[ prop ] = oldSizzle[ prop ]; } div = null; // release memory in IE })(); } (function(){ var div = document.createElement(\"div\"); div.innerHTML = \"\"; // Opera can't find a second classname (in 9.6) // Also, make sure that getElementsByClassName actually exists if ( !div.getElementsByClassName || div.getElementsByClassName(\"e\").length === 0 ) { return; } // Safari caches class attributes, doesn't catch changes (in 3.2) div.lastChild.className = \"e\"; if ( div.getElementsByClassName(\"e\").length === 1 ) { return; } Expr.order.splice(1, 0, \"CLASS\"); Expr.find.CLASS = function(match, context, isXML) { if ( typeof context.getElementsByClassName !== \"undefined\" && !isXML ) { return context.getElementsByClassName(match[1]); } }; div = null; // release memory in IE })(); function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) { for ( var i = 0, l = checkSet.length; i < l; i++ ) { var elem = checkSet[i]; if ( elem ) { elem = elem[dir]; var match = false; while ( elem ) { if ( elem.sizcache === doneName ) { match = checkSet[elem.sizset]; break; } if ( elem.nodeType === 1 && !isXML ){ elem.sizcache = doneName; elem.sizset = i; } if ( elem.nodeName.toLowerCase() === cur ) { match = elem; break; } elem = elem[dir]; } checkSet[i] = match; } } } function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) { for ( var i = 0, l = checkSet.length; i < l; i++ ) { var elem = checkSet[i]; if ( elem ) { elem = elem[dir]; var match = false; while ( elem ) { if ( elem.sizcache === doneName ) { match = checkSet[elem.sizset]; break; } if ( elem.nodeType === 1 ) { if ( !isXML ) { elem.sizcache = doneName; elem.sizset = i; } if ( typeof cur !== \"string\" ) { if ( elem === cur ) { match = true; break; } } else if ( Sizzle.filter( cur, [elem] ).length > 0 ) { match = elem; break; } } elem = elem[dir]; } checkSet[i] = match; } } } var contains = document.compareDocumentPosition ? function(a, b){ return !!(a.compareDocumentPosition(b) & 16); } : function(a, b){ return a !== b && (a.contains ? a.contains(b) : true); }; var isXML = function(elem){ // documentElement is verified for cases where it doesn't yet exist // (such as loading iframes in IE - #4833) var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement; return documentElement ? documentElement.nodeName !== \"HTML\" : false; }; var posProcess = function(selector, context){ var tmpSet = [], later = \"\", match, root = context.nodeType ? [context] : context; // Position selectors must be done after the filter // And so must :not(positional) so we move all PSEUDOs to the end while ( (match = Expr.match.PSEUDO.exec( selector )) ) { later += match[0]; selector = selector.replace( Expr.match.PSEUDO, \"\" ); } selector = Expr.relative[selector] ? selector + \"*\" : selector; for ( var i = 0, l = root.length; i < l; i++ ) { Sizzle( selector, root[i], tmpSet ); } return Sizzle.filter( later, tmpSet ); }; // EXPOSE jQuery.find = Sizzle; jQuery.expr = Sizzle.selectors; jQuery.expr[\":\"] = jQuery.expr.filters; jQuery.unique = Sizzle.uniqueSort; jQuery.text = getText; jQuery.isXMLDoc = isXML; jQuery.contains = contains; return; window.Sizzle = Sizzle; })(); var runtil = /Until$/, rparentsprev = /^(?:parents|prevUntil|prevAll)/, // Note: This RegExp should be improved, or likely pulled from Sizzle rmultiselector = /,/, slice = Array.prototype.slice; // Implement the identical functionality for filter and not var winnow = function( elements, qualifier, keep ) { if ( jQuery.isFunction( qualifier ) ) { return jQuery.grep(elements, function( elem, i ) { return !!qualifier.call( elem, i, elem ) === keep; }); } else if ( qualifier.nodeType ) { return jQuery.grep(elements, function( elem, i ) { return (elem === qualifier) === keep; }); } else if ( typeof qualifier === \"string\" ) { var filtered = jQuery.grep(elements, function( elem ) { return elem.nodeType === 1; }); if ( isSimple.test( qualifier ) ) { return jQuery.filter(qualifier, filtered, !keep); } else { qualifier = jQuery.filter( qualifier, filtered ); } } return jQuery.grep(elements, function( elem, i ) { return (jQuery.inArray( elem, qualifier ) >= 0) === keep; }); }; jQuery.fn.extend({ find: function( selector ) { var ret = this.pushStack( \"\", \"find\", selector ), length = 0; for ( var i = 0, l = this.length; i < l; i++ ) { length = ret.length; jQuery.find( selector, this[i], ret ); if ( i > 0 ) { // Make sure that the results are unique for ( var n = length; n < ret.length; n++ ) { for ( var r = 0; r < length; r++ ) { if ( ret[r] === ret[n] ) { ret.splice(n--, 1); break; } } } } } return ret; }, has: function( target ) { var targets = jQuery( target ); return this.filter(function() { for ( var i = 0, l = targets.length; i < l; i++ ) { if ( jQuery.contains( this, targets[i] ) ) { return true; } } }); }, not: function( selector ) { return this.pushStack( winnow(this, selector, false), \"not\", selector); }, filter: function( selector ) { return this.pushStack( winnow(this, selector, true), \"filter\", selector ); }, is: function( selector ) { return !!selector && jQuery.filter( selector, this ).length > 0; }, closest: function( selectors, context ) { if ( jQuery.isArray( selectors ) ) { var ret = [], cur = this[0], match, matches = {}, selector; if ( cur && selectors.length ) { for ( var i = 0, l = selectors.length; i < l; i++ ) { selector = selectors[i]; if ( !matches[selector] ) { matches[selector] = jQuery.expr.match.POS.test( selector ) ? jQuery( selector, context || this.context ) : selector; } } while ( cur && cur.ownerDocument && cur !== context ) { for ( selector in matches ) { match = matches[selector]; if ( match.jquery ? match.index(cur) > -1 : jQuery(cur).is(match) ) { ret.push({ selector: selector, elem: cur }); delete matches[selector]; } } cur = cur.parentNode; } } return ret; } var pos = jQuery.expr.match.POS.test( selectors ) ? jQuery( selectors, context || this.context ) : null; return this.map(function( i, cur ) { while ( cur && cur.ownerDocument && cur !== context ) { if ( pos ? pos.index(cur) > -1 : jQuery(cur).is(selectors) ) { return cur; } cur = cur.parentNode; } return null; }); }, // Determine the position of an element within // the matched set of elements index: function( elem ) { if ( !elem || typeof elem === \"string\" ) { return jQuery.inArray( this[0], // If it receives a string, the selector is used // If it receives nothing, the siblings are used elem ? jQuery( elem ) : this.parent().children() ); } // Locate the position of the desired element return jQuery.inArray( // If it receives a jQuery object, the first element is used elem.jquery ? elem[0] : elem, this ); }, add: function( selector, context ) { var set = typeof selector === \"string\" ? jQuery( selector, context || this.context ) : jQuery.makeArray( selector ), all = jQuery.merge( this.get(), set ); return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ? all : jQuery.unique( all ) ); }, andSelf: function() { return this.add( this.prevObject ); } }); // A painfully simple check to see if an element is disconnected // from a document (should be improved, where feasible). function isDisconnected( node ) { return !node || !node.parentNode || node.parentNode.nodeType === 11; } jQuery.each({ parent: function( elem ) { var parent = elem.parentNode; return parent && parent.nodeType !== 11 ? parent : null; }, parents: function( elem ) { return jQuery.dir( elem, \"parentNode\" ); }, parentsUntil: function( elem, i, until ) { return jQuery.dir( elem, \"parentNode\", until ); }, next: function( elem ) { return jQuery.nth( elem, 2, \"nextSibling\" ); }, prev: function( elem ) { return jQuery.nth( elem, 2, \"previousSibling\" ); }, nextAll: function( elem ) { return jQuery.dir( elem, \"nextSibling\" ); }, prevAll: function( elem ) { return jQuery.dir( elem, \"previousSibling\" ); }, nextUntil: function( elem, i, until ) { return jQuery.dir( elem, \"nextSibling\", until ); }, prevUntil: function( elem, i, until ) { return jQuery.dir( elem, \"previousSibling\", until ); }, siblings: function( elem ) { return jQuery.sibling( elem.parentNode.firstChild, elem ); }, children: function( elem ) { return jQuery.sibling( elem.firstChild ); }, contents: function( elem ) { return jQuery.nodeName( elem, \"iframe\" ) ? elem.contentDocument || elem.contentWindow.document : jQuery.makeArray( elem.childNodes ); } }, function( name, fn ) { jQuery.fn[ name ] = function( until, selector ) { var ret = jQuery.map( this, fn, until ); if ( !runtil.test( name ) ) { selector = until; } if ( selector && typeof selector === \"string\" ) { ret = jQuery.filter( selector, ret ); } ret = this.length > 1 ? jQuery.unique( ret ) : ret; if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) { ret = ret.reverse(); } return this.pushStack( ret, name, slice.call(arguments).join(\",\") ); }; }); jQuery.extend({ filter: function( expr, elems, not ) { if ( not ) { expr = \":not(\" + expr + \")\"; } return jQuery.find.matches(expr, elems); }, dir: function( elem, dir, until ) { var matched = [], cur = elem[dir]; while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) { if ( cur.nodeType === 1 ) { matched.push( cur ); } cur = cur[dir]; } return matched; }, nth: function( cur, result, dir, elem ) { result = result || 1; var num = 0; for ( ; cur; cur = cur[dir] ) { if ( cur.nodeType === 1 && ++num === result ) { break; } } return cur; }, sibling: function( n, elem ) { var r = []; for ( ; n; n = n.nextSibling ) { if ( n.nodeType === 1 && n !== elem ) { r.push( n ); } } return r; } }); var rinlinejQuery = / jQuery\\d+=\"(?:\\d+|null)\"/g, rleadingWhitespace = /^\\s+/, rxhtmlTag = /(]*?)\\/>/g, rselfClosing = /^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i, rtagName = /\\s]+\\/)>/g, '=\"$1\">') .replace(rleadingWhitespace, \"\")], ownerDocument)[0]; } else { return this.cloneNode(true); } }); // Copy the events from the original to the clone if ( events === true ) { cloneCopyEvent( this, ret ); cloneCopyEvent( this.find(\"*\"), ret.find(\"*\") ); } // Return the cloned set return ret; }, html: function( value ) { if ( value === undefined ) { return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(rinlinejQuery, \"\") : null; // See if we can take a shortcut and just use innerHTML } else if ( typeof value === \"string\" && !rnocache.test( value ) && (jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) && !wrapMap[ (rtagName.exec( value ) || [\"\", \"\"])[1].toLowerCase() ] ) { value = value.replace(rxhtmlTag, fcloseTag); try { for ( var i = 0, l = this.length; i < l; i++ ) { // Remove element nodes and prevent memory leaks if ( this[i].nodeType === 1 ) { jQuery.cleanData( this[i].getElementsByTagName(\"*\") ); this[i].innerHTML = value; } } // If using innerHTML throws an exception, use the fallback method } catch(e) { this.empty().append( value ); } } else if ( jQuery.isFunction( value ) ) { this.each(function(i){ var self = jQuery(this), old = self.html(); self.empty().append(function(){ return value.call( this, i, old ); }); }); } else { this.empty().append( value ); } return this; }, replaceWith: function( value ) { if ( this[0] && this[0].parentNode ) { // Make sure that the elements are removed from the DOM before they are inserted // this can help fix replacing a parent with child elements if ( jQuery.isFunction( value ) ) { return this.each(function(i) { var self = jQuery(this), old = self.html(); self.replaceWith( value.call( this, i, old ) ); }); } if ( typeof value !== \"string\" ) { value = jQuery(value).detach(); } return this.each(function() { var next = this.nextSibling, parent = this.parentNode; jQuery(this).remove(); if ( next ) { jQuery(next).before( value ); } else { jQuery(parent).append( value ); } }); } else { return this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), \"replaceWith\", value ); } }, detach: function( selector ) { return this.remove( selector, true ); }, domManip: function( args, table, callback ) { var results, first, value = args[0], scripts = [], fragment, parent; // We can't cloneNode fragments that contain checked, in WebKit if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === \"string\" && rchecked.test( value ) ) { return this.each(function() { jQuery(this).domManip( args, table, callback, true ); }); } if ( jQuery.isFunction(value) ) { return this.each(function(i) { var self = jQuery(this); args[0] = value.call(this, i, table ? self.html() : undefined); self.domManip( args, table, callback ); }); } if ( this[0] ) { parent = value && value.parentNode; // If we're in a fragment, just use that instead of building a new one if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) { results = { fragment: parent }; } else { results = buildFragment( args, this, scripts ); } fragment = results.fragment; if ( fragment.childNodes.length === 1 ) { first = fragment = fragment.firstChild; } else { first = fragment.firstChild; } if ( first ) { table = table && jQuery.nodeName( first, \"tr\" ); for ( var i = 0, l = this.length; i < l; i++ ) { callback.call( table ? root(this[i], first) : this[i], i > 0 || results.cacheable || this.length > 1 ? fragment.cloneNode(true) : fragment ); } } if ( scripts.length ) { jQuery.each( scripts, evalScript ); } } return this; function root( elem, cur ) { return jQuery.nodeName(elem, \"table\") ? (elem.getElementsByTagName(\"tbody\")[0] || elem.appendChild(elem.ownerDocument.createElement(\"tbody\"))) : elem; } } }); function cloneCopyEvent(orig, ret) { var i = 0; ret.each(function() { if ( this.nodeName !== (orig[i] && orig[i].nodeName) ) { return; } var oldData = jQuery.data( orig[i++] ), curData = jQuery.data( this, oldData ), events = oldData && oldData.events; if ( events ) { delete curData.handle; curData.events = {}; for ( var type in events ) { for ( var handler in events[ type ] ) { jQuery.event.add( this, type, events[ type ][ handler ], events[ type ][ handler ].data ); } } } }); } function buildFragment( args, nodes, scripts ) { var fragment, cacheable, cacheresults, doc = (nodes && nodes[0] ? nodes[0].ownerDocument || nodes[0] : document); // Only cache \"small\" (1/2 KB) strings that are associated with the main document // Cloning options loses the selected state, so don't cache them // IE 6 doesn't like it when you put or elements in a fragment // Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache if ( args.length === 1 && typeof args[0] === \"string\" && args[0].length < 512 && doc === document && !rnocache.test( args[0] ) && (jQuery.support.checkClone || !rchecked.test( args[0] )) ) { cacheable = true; cacheresults = jQuery.fragments[ args[0] ]; if ( cacheresults ) { if ( cacheresults !== 1 ) { fragment = cacheresults; } } } if ( !fragment ) { fragment = doc.createDocumentFragment(); jQuery.clean( args, doc, fragment, scripts ); } if ( cacheable ) { jQuery.fragments[ args[0] ] = cacheresults ? fragment : 1; } return { fragment: fragment, cacheable: cacheable }; } jQuery.fragments = {}; jQuery.each({ appendTo: \"append\", prependTo: \"prepend\", insertBefore: \"before\", insertAfter: \"after\", replaceAll: \"replaceWith\" }, function( name, original ) { jQuery.fn[ name ] = function( selector ) { var ret = [], insert = jQuery( selector ), parent = this.length === 1 && this[0].parentNode; if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) { insert[ original ]( this[0] ); return this; } else { for ( var i = 0, l = insert.length; i < l; i++ ) { var elems = (i > 0 ? this.clone(true) : this).get(); jQuery.fn[ original ].apply( jQuery(insert[i]), elems ); ret = ret.concat( elems ); } return this.pushStack( ret, name, insert.selector ); } }; }); jQuery.extend({ clean: function( elems, context, fragment, scripts ) { context = context || document; // !context.createElement fails in IE with an error but returns typeof 'object' if ( typeof context.createElement === \"undefined\" ) { context = context.ownerDocument || context[0] && context[0].ownerDocument || document; } var ret = []; for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) { if ( typeof elem === \"number\" ) { elem += \"\"; } if ( !elem ) { continue; } // Convert html string into DOM nodes if ( typeof elem === \"string\" && !rhtml.test( elem ) ) { elem = context.createTextNode( elem ); } else if ( typeof elem === \"string\" ) { // Fix \"XHTML\"-style tags in all browsers elem = elem.replace(rxhtmlTag, fcloseTag); // Trim whitespace, otherwise indexOf won't work as expected var tag = (rtagName.exec( elem ) || [\"\", \"\"])[1].toLowerCase(), wrap = wrapMap[ tag ] || wrapMap._default, depth = wrap[0], div = context.createElement(\"div\"); // Go to html and back, then peel off extra wrappers div.innerHTML = wrap[1] + elem + wrap[2]; // Move to the right depth while ( depth-- ) { div = div.lastChild; } // Remove IE's autoinserted from table fragments if ( !jQuery.support.tbody ) { // String was a , *may* have spurious var hasBody = rtbody.test(elem), tbody = tag === \"table\" && !hasBody ? div.firstChild && div.firstChild.childNodes : // String was a bare or wrap[1] === \"\" && !hasBody ? div.childNodes : []; for ( var j = tbody.length - 1; j >= 0 ; --j ) { if ( jQuery.nodeName( tbody[ j ], \"tbody\" ) && !tbody[ j ].childNodes.length ) { tbody[ j ].parentNode.removeChild( tbody[ j ] ); } } } // IE completely kills leading whitespace when innerHTML is used if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) { div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild ); } elem = div.childNodes; } if ( elem.nodeType ) { ret.push( elem ); } else { ret = jQuery.merge( ret, elem ); } } if ( fragment ) { for ( var i = 0; ret[i]; i++ ) { if ( scripts && jQuery.nodeName( ret[i], \"script\" ) && (!ret[i].type || ret[i].type.toLowerCase() === \"text/javascript\") ) { scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( ret[i] ) : ret[i] ); } else { if ( ret[i].nodeType === 1 ) { ret.splice.apply( ret, [i + 1, 0].concat(jQuery.makeArray(ret[i].getElementsByTagName(\"script\"))) ); } fragment.appendChild( ret[i] ); } } } return ret; }, cleanData: function( elems ) { var data, id, cache = jQuery.cache, special = jQuery.event.special, deleteExpando = jQuery.support.deleteExpando; for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) { id = elem[ jQuery.expando ]; if ( id ) { data = cache[ id ]; if ( data.events ) { for ( var type in data.events ) { if ( special[ type ] ) { jQuery.event.remove( elem, type ); } else { removeEvent( elem, type, data.handle ); } } } if ( deleteExpando ) { delete elem[ jQuery.expando ]; } else if ( elem.removeAttribute ) { elem.removeAttribute( jQuery.expando ); } delete cache[ id ]; } } } }); // exclude the following css properties to add px var rexclude = /z-?index|font-?weight|opacity|zoom|line-?height/i, ralpha = /alpha\\([^)]*\\)/, ropacity = /opacity=([^)]*)/, rfloat = /float/i, rdashAlpha = /-([a-z])/ig, rupper = /([A-Z])/g, rnumpx = /^-?\\d+(?:px)?$/i, rnum = /^-?\\d/, cssShow = { position: \"absolute\", visibility: \"hidden\", display:\"block\" }, cssWidth = [ \"Left\", \"Right\" ], cssHeight = [ \"Top\", \"Bottom\" ], // cache check for defaultView.getComputedStyle getComputedStyle = document.defaultView && document.defaultView.getComputedStyle, // normalize float css property styleFloat = jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\", fcamelCase = function( all, letter ) { return letter.toUpperCase(); }; jQuery.fn.css = function( name, value ) { return access( this, name, value, true, function( elem, name, value ) { if ( value === undefined ) { return jQuery.curCSS( elem, name ); } if ( typeof value === \"number\" && !rexclude.test(name) ) { value += \"px\"; } jQuery.style( elem, name, value ); }); }; jQuery.extend({ style: function( elem, name, value ) { // don't set styles on text and comment nodes if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 ) { return undefined; } // ignore negative width and height values #1599 if ( (name === \"width\" || name === \"height\") && parseFloat(value) < 0 ) { value = undefined; } var style = elem.style || elem, set = value !== undefined; // IE uses filters for opacity if ( !jQuery.support.opacity && name === \"opacity\" ) { if ( set ) { // IE has trouble with opacity if it does not have layout // Force it by setting the zoom level style.zoom = 1; // Set the alpha filter to set the opacity var opacity = parseInt( value, 10 ) + \"\" === \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\"; var filter = style.filter || jQuery.curCSS( elem, \"filter\" ) || \"\"; style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : opacity; } return style.filter && style.filter.indexOf(\"opacity=\") >= 0 ? (parseFloat( ropacity.exec(style.filter)[1] ) / 100) + \"\": \"\"; } // Make sure we're using the right name for getting the float value if ( rfloat.test( name ) ) { name = styleFloat; } name = name.replace(rdashAlpha, fcamelCase); if ( set ) { style[ name ] = value; } return style[ name ]; }, css: function( elem, name, force, extra ) { if ( name === \"width\" || name === \"height\" ) { var val, props = cssShow, which = name === \"width\" ? cssWidth : cssHeight; function getWH() { val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight; if ( extra === \"border\" ) { return; } jQuery.each( which, function() { if ( !extra ) { val -= parseFloat(jQuery.curCSS( elem, \"padding\" + this, true)) || 0; } if ( extra === \"margin\" ) { val += parseFloat(jQuery.curCSS( elem, \"margin\" + this, true)) || 0; } else { val -= parseFloat(jQuery.curCSS( elem, \"border\" + this + \"Width\", true)) || 0; } }); } if ( elem.offsetWidth !== 0 ) { getWH(); } else { jQuery.swap( elem, props, getWH ); } return Math.max(0, Math.round(val)); } return jQuery.curCSS( elem, name, force ); }, curCSS: function( elem, name, force ) { var ret, style = elem.style, filter; // IE uses filters for opacity if ( !jQuery.support.opacity && name === \"opacity\" && elem.currentStyle ) { ret = ropacity.test(elem.currentStyle.filter || \"\") ? (parseFloat(RegExp.$1) / 100) + \"\" : \"\"; return ret === \"\" ? \"1\" : ret; } // Make sure we're using the right name for getting the float value if ( rfloat.test( name ) ) { name = styleFloat; } if ( !force && style && style[ name ] ) { ret = style[ name ]; } else if ( getComputedStyle ) { // Only \"float\" is needed here if ( rfloat.test( name ) ) { name = \"float\"; } name = name.replace( rupper, \"-$1\" ).toLowerCase(); var defaultView = elem.ownerDocument.defaultView; if ( !defaultView ) { return null; } var computedStyle = defaultView.getComputedStyle( elem, null ); if ( computedStyle ) { ret = computedStyle.getPropertyValue( name ); } // We should always get a number back from opacity if ( name === \"opacity\" && ret === \"\" ) { ret = \"1\"; } } else if ( elem.currentStyle ) { var camelCase = name.replace(rdashAlpha, fcamelCase); ret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ]; // From the awesome hack by Dean Edwards // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291 // If we're not dealing with a regular pixel number // but a number that has a weird ending, we need to convert it to pixels if ( !rnumpx.test( ret ) && rnum.test( ret ) ) { // Remember the original values var left = style.left, rsLeft = elem.runtimeStyle.left; // Put in the new values to get a computed value out elem.runtimeStyle.left = elem.currentStyle.left; style.left = camelCase === \"fontSize\" ? \"1em\" : (ret || 0); ret = style.pixelLeft + \"px\"; // Revert the changed values style.left = left; elem.runtimeStyle.left = rsLeft; } } return ret; }, // A method for quickly swapping in/out CSS properties to get correct calculations swap: function( elem, options, callback ) { var old = {}; // Remember the old values, and insert the new ones for ( var name in options ) { old[ name ] = elem.style[ name ]; elem.style[ name ] = options[ name ]; } callback.call( elem ); // Revert the old values for ( var name in options ) { elem.style[ name ] = old[ name ]; } } }); if ( jQuery.expr && jQuery.expr.filters ) { jQuery.expr.filters.hidden = function( elem ) { var width = elem.offsetWidth, height = elem.offsetHeight, skip = elem.nodeName.toLowerCase() === \"tr\"; return width === 0 && height === 0 && !skip ? true : width > 0 && height > 0 && !skip ? false : jQuery.curCSS(elem, \"display\") === \"none\"; }; jQuery.expr.filters.visible = function( elem ) { return !jQuery.expr.filters.hidden( elem ); }; } var jsc = now(), rscript = //gi, rselectTextarea = /select|textarea/i, rinput = /color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i, jsre = /=\\?(&|$)/, rquery = /\\?/, rts = /(\\?|&)_=.*?(&|$)/, rurl = /^(\\w+:)?\\/\\/([^\\/?#]+)/, r20 = /%20/g, // Keep a copy of the old load method _load = jQuery.fn.load; jQuery.fn.extend({ load: function( url, params, callback ) { if ( typeof url !== \"string\" ) { return _load.call( this, url ); // Don't do a request if no elements are being requested } else if ( !this.length ) { return this; } var off = url.indexOf(\" \"); if ( off >= 0 ) { var selector = url.slice(off, url.length); url = url.slice(0, off); } // Default to a GET request var type = \"GET\"; // If the second parameter was provided if ( params ) { // If it's a function if ( jQuery.isFunction( params ) ) { // We assume that it's the callback callback = params; params = null; // Otherwise, build a param string } else if ( typeof params === \"object\" ) { params = jQuery.param( params, jQuery.ajaxSettings.traditional ); type = \"POST\"; } } var self = this; // Request the remote document jQuery.ajax({ url: url, type: type, dataType: \"html\", data: params, complete: function( res, status ) { // If successful, inject the HTML into all the matched elements if ( status === \"success\" || status === \"notmodified\" ) { // See if a selector was specified self.html( selector ? // Create a dummy div to hold the results jQuery(\"\") // inject the contents of the document in, removing the scripts // to avoid any 'Permission Denied' errors in IE .append(res.responseText.replace(rscript, \"\")) // Locate the specified elements .find(selector) : // If not, just inject the full result res.responseText ); } if ( callback ) { self.each( callback, [res.responseText, status, res] ); } } }); return this; }, serialize: function() { return jQuery.param(this.serializeArray()); }, serializeArray: function() { return this.map(function() { return this.elements ? jQuery.makeArray(this.elements) : this; }) .filter(function() { return this.name && !this.disabled && (this.checked || rselectTextarea.test(this.nodeName) || rinput.test(this.type)); }) .map(function( i, elem ) { var val = jQuery(this).val(); return val == null ? null : jQuery.isArray(val) ? jQuery.map( val, function( val, i ) { return { name: elem.name, value: val }; }) : { name: elem.name, value: val }; }).get(); } }); // Attach a bunch of functions for handling common AJAX events jQuery.each( \"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"), function( i, o ) { jQuery.fn[o] = function( f ) { return this.bind(o, f); }; }); jQuery.extend({ get: function( url, data, callback, type ) { // shift arguments if data argument was omited if ( jQuery.isFunction( data ) ) { type = type || callback; callback = data; data = null; } return jQuery.ajax({ type: \"GET\", url: url, data: data, success: callback, dataType: type }); }, getScript: function( url, callback ) { return jQuery.get(url, null, callback, \"script\"); }, getJSON: function( url, data, callback ) { return jQuery.get(url, data, callback, \"json\"); }, post: function( url, data, callback, type ) { // shift arguments if data argument was omited if ( jQuery.isFunction( data ) ) { type = type || callback; callback = data; data = {}; } return jQuery.ajax({ type: \"POST\", url: url, data: data, success: callback, dataType: type }); }, ajaxSetup: function( settings ) { jQuery.extend( jQuery.ajaxSettings, settings ); }, ajaxSettings: { url: location.href, global: true, type: \"GET\", contentType: \"application/x-www-form-urlencoded\", processData: true, async: true, /* timeout: 0, data: null, username: null, password: null, traditional: false, */ // Create the request object; Microsoft failed to properly // implement the XMLHttpRequest in IE7 (can't request local files), // so we use the ActiveXObject when it is available // This function can be overriden by calling jQuery.ajaxSetup xhr: window.XMLHttpRequest && (window.location.protocol !== \"file:\" || !window.ActiveXObject) ? function() { return new window.XMLHttpRequest(); } : function() { try { return new window.ActiveXObject(\"Microsoft.XMLHTTP\"); } catch(e) {} }, accepts: { xml: \"application/xml, text/xml\", html: \"text/html\", script: \"text/javascript, application/javascript\", json: \"application/json, text/javascript\", text: \"text/plain\", _default: \"*/*\" } }, // Last-Modified header cache for next request lastModified: {}, etag: {}, ajax: function( origSettings ) { var s = jQuery.extend(true, {}, jQuery.ajaxSettings, origSettings); var jsonp, status, data, callbackContext = origSettings && origSettings.context || s, type = s.type.toUpperCase(); // convert data if not already a string if ( s.data && s.processData && typeof s.data !== \"string\" ) { s.data = jQuery.param( s.data, s.traditional ); } // Handle JSONP Parameter Callbacks if ( s.dataType === \"jsonp\" ) { if ( type === \"GET\" ) { if ( !jsre.test( s.url ) ) { s.url += (rquery.test( s.url ) ? \"&\" : \"?\") + (s.jsonp || \"callback\") + \"=?\"; } } else if ( !s.data || !jsre.test(s.data) ) { s.data = (s.data ? s.data + \"&\" : \"\") + (s.jsonp || \"callback\") + \"=?\"; } s.dataType = \"json\"; } // Build temporary JSONP function if ( s.dataType === \"json\" && (s.data && jsre.test(s.data) || jsre.test(s.url)) ) { jsonp = s.jsonpCallback || (\"jsonp\" + jsc++); // Replace the =? sequence both in the query string and the data if ( s.data ) { s.data = (s.data + \"\").replace(jsre, \"=\" + jsonp + \"$1\"); } s.url = s.url.replace(jsre, \"=\" + jsonp + \"$1\"); // We need to make sure // that a JSONP style response is executed properly s.dataType = \"script\"; // Handle JSONP-style loading window[ jsonp ] = window[ jsonp ] || function( tmp ) { data = tmp; success(); complete(); // Garbage collect window[ jsonp ] = undefined; try { delete window[ jsonp ]; } catch(e) {} if ( head ) { head.removeChild( script ); } }; } if ( s.dataType === \"script\" && s.cache === null ) { s.cache = false; } if ( s.cache === false && type === \"GET\" ) { var ts = now(); // try replacing _= if it is there var ret = s.url.replace(rts, \"$1_=\" + ts + \"$2\"); // if nothing was replaced, add timestamp to the end s.url = ret + ((ret === s.url) ? (rquery.test(s.url) ? \"&\" : \"?\") + \"_=\" + ts : \"\"); } // If data is available, append data to url for get requests if ( s.data && type === \"GET\" ) { s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.data; } // Watch for a new set of requests if ( s.global && ! jQuery.active++ ) { jQuery.event.trigger( \"ajaxStart\" ); } // Matches an absolute URL, and saves the domain var parts = rurl.exec( s.url ), remote = parts && (parts[1] && parts[1] !== location.protocol || parts[2] !== location.host); // If we're requesting a remote document // and trying to load JSON or Script with a GET if ( s.dataType === \"script\" && type === \"GET\" && remote ) { var head = document.getElementsByTagName(\"head\")[0] || document.documentElement; var script = document.createElement(\"script\"); script.src = s.url; if ( s.scriptCharset ) { script.charset = s.scriptCharset; } // Handle Script loading if ( !jsonp ) { var done = false; // Attach handlers for all browsers script.onload = script.onreadystatechange = function() { if ( !done && (!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\") ) { done = true; success(); complete(); // Handle memory leak in IE script.onload = script.onreadystatechange = null; if ( head && script.parentNode ) { head.removeChild( script ); } } }; } // Use insertBefore instead of appendChild to circumvent an IE6 bug. // This arises when a base node is used (#2709 and #4378). head.insertBefore( script, head.firstChild ); // We handle everything using the script element injection return undefined; } var requestDone = false; // Create the request object var xhr = s.xhr(); if ( !xhr ) { return; } // Open the socket // Passing null username, generates a login popup on Opera (#2865) if ( s.username ) { xhr.open(type, s.url, s.async, s.username, s.password); } else { xhr.open(type, s.url, s.async); } // Need an extra try/catch for cross domain requests in Firefox 3 try { // Set the correct header, if data is being sent if ( s.data || origSettings && origSettings.contentType ) { xhr.setRequestHeader(\"Content-Type\", s.contentType); } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode. if ( s.ifModified ) { if ( jQuery.lastModified[s.url] ) { xhr.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[s.url]); } if ( jQuery.etag[s.url] ) { xhr.setRequestHeader(\"If-None-Match\", jQuery.etag[s.url]); } } // Set header so the called script knows that it's an XMLHttpRequest // Only send the header if it's not a remote XHR if ( !remote ) { xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\"); } // Set the Accepts header for the server, depending on the dataType xhr.setRequestHeader(\"Accept\", s.dataType && s.accepts[ s.dataType ] ? s.accepts[ s.dataType ] + \", */*\" : s.accepts._default ); } catch(e) {} // Allow custom headers/mimetypes and early abort if ( s.beforeSend && s.beforeSend.call(callbackContext, xhr, s) === false ) { // Handle the global AJAX counter if ( s.global && ! --jQuery.active ) { jQuery.event.trigger( \"ajaxStop\" ); } // close opended socket xhr.abort(); return false; } if ( s.global ) { trigger(\"ajaxSend\", [xhr, s]); } // Wait for a response to come back var onreadystatechange = xhr.onreadystatechange = function( isTimeout ) { // The request was aborted if ( !xhr || xhr.readyState === 0 || isTimeout === \"abort\" ) { // Opera doesn't call onreadystatechange before this point // so we simulate the call if ( !requestDone ) { complete(); } requestDone = true; if ( xhr ) { xhr.onreadystatechange = jQuery.noop; } // The transfer is complete and the data is available, or the request timed out } else if ( !requestDone && xhr && (xhr.readyState === 4 || isTimeout === \"timeout\") ) { requestDone = true; xhr.onreadystatechange = jQuery.noop; status = isTimeout === \"timeout\" ? \"timeout\" : !jQuery.httpSuccess( xhr ) ? \"error\" : s.ifModified && jQuery.httpNotModified( xhr, s.url ) ? \"notmodified\" : \"success\"; var errMsg; if ( status === \"success\" ) { // Watch for, and catch, XML document parse errors try { // process the data (runs the xml through httpData regardless of callback) data = jQuery.httpData( xhr, s.dataType, s ); } catch(err) { status = \"parsererror\"; errMsg = err; } } // Make sure that the request was successful or notmodified if ( status === \"success\" || status === \"notmodified\" ) { // JSONP handles its own success callback if ( !jsonp ) { success(); } } else { jQuery.handleError(s, xhr, status, errMsg); } // Fire the complete handlers complete(); if ( isTimeout === \"timeout\" ) { xhr.abort(); } // Stop memory leaks if ( s.async ) { xhr = null; } } }; // Override the abort handler, if we can (IE doesn't allow it, but that's OK) // Opera doesn't fire onreadystatechange at all on abort try { var oldAbort = xhr.abort; xhr.abort = function() { if ( xhr ) { oldAbort.call( xhr ); } onreadystatechange( \"abort\" ); }; } catch(e) { } // Timeout checker if ( s.async && s.timeout > 0 ) { setTimeout(function() { // Check to see if the request is still happening if ( xhr && !requestDone ) { onreadystatechange( \"timeout\" ); } }, s.timeout); } // Send the data try { xhr.send( type === \"POST\" || type === \"PUT\" || type === \"DELETE\" ? s.data : null ); } catch(e) { jQuery.handleError(s, xhr, null, e); // Fire the complete handlers complete(); } // firefox 1.5 doesn't fire statechange for sync requests if ( !s.async ) { onreadystatechange(); } function success() { // If a local callback was specified, fire it and pass it the data if ( s.success ) { s.success.call( callbackContext, data, status, xhr ); } // Fire the global callback if ( s.global ) { trigger( \"ajaxSuccess\", [xhr, s] ); } } function complete() { // Process result if ( s.complete ) { s.complete.call( callbackContext, xhr, status); } // The request was completed if ( s.global ) { trigger( \"ajaxComplete\", [xhr, s] ); } // Handle the global AJAX counter if ( s.global && ! --jQuery.active ) { jQuery.event.trigger( \"ajaxStop\" ); } } function trigger(type, args) { (s.context ? jQuery(s.context) : jQuery.event).trigger(type, args); } // return XMLHttpRequest to allow aborting the request etc. return xhr; }, handleError: function( s, xhr, status, e ) { // If a local callback was specified, fire it if ( s.error ) { s.error.call( s.context || s, xhr, status, e ); } // Fire the global callback if ( s.global ) { (s.context ? jQuery(s.context) : jQuery.event).trigger( \"ajaxError\", [xhr, s, e] ); } }, // Counter for holding the number of active queries active: 0, // Determines if an XMLHttpRequest was successful or not httpSuccess: function( xhr ) { try { // IE error sometimes returns 1223 when it should be 204 so treat it as success, see #1450 return !xhr.status && location.protocol === \"file:\" || // Opera returns 0 when status is 304 ( xhr.status >= 200 && xhr.status < 300 ) || xhr.status === 304 || xhr.status === 1223 || xhr.status === 0; } catch(e) {} return false; }, // Determines if an XMLHttpRequest returns NotModified httpNotModified: function( xhr, url ) { var lastModified = xhr.getResponseHeader(\"Last-Modified\"), etag = xhr.getResponseHeader(\"Etag\"); if ( lastModified ) { jQuery.lastModified[url] = lastModified; } if ( etag ) { jQuery.etag[url] = etag; } // Opera returns 0 when status is 304 return xhr.status === 304 || xhr.status === 0; }, httpData: function( xhr, type, s ) { var ct = xhr.getResponseHeader(\"content-type\") || \"\", xml = type === \"xml\" || !type && ct.indexOf(\"xml\") >= 0, data = xml ? xhr.responseXML : xhr.responseText; if ( xml && data.documentElement.nodeName === \"parsererror\" ) { jQuery.error( \"parsererror\" ); } // Allow a pre-filtering function to sanitize the response // s is checked to keep backwards compatibility if ( s && s.dataFilter ) { data = s.dataFilter( data, type ); } // The filter can actually parse the response if ( typeof data === \"string\" ) { // Get the JavaScript object, if JSON is used. if ( type === \"json\" || !type && ct.indexOf(\"json\") >= 0 ) { data = jQuery.parseJSON( data ); // If the type is \"script\", eval it in global context } else if ( type === \"script\" || !type && ct.indexOf(\"javascript\") >= 0 ) { jQuery.globalEval( data ); } } return data; }, // Serialize an array of form elements or a set of // key/values into a query string param: function( a, traditional ) { var s = []; // Set traditional to true for jQuery"}],"posts":[{"title":"Optimal Energy Production","slug":"Optimal-Energy-Production","date":"2020-05-16T16:53:46.000Z","updated":"2020-05-17T16:02:18.270Z","comments":true,"path":"2020/Optimal-Energy-Production/","link":"","permalink":"https://shaokang.ga/2020/Optimal-Energy-Production/","excerpt":"A simple limitation is too less sometime. If we are using the fixed threshold, then we could simply let threshold to be the time that consumption is equal to usage. And we are not able to handle the battery capacity as well. This might not meet the real case. In the real case, equipment will use large amount of energy when they start. So the model should be able to predict. Thought wind does change everyday, but it is still some kind of predictable. So, we could train a model from the history data and then predict the wind speed in the future, like one year. We could use TensorFlow.js for training. Then Solve an optimization problem to see what would be the best time to start the engine and what would be the best time to stop the engine. Or solving an optimization problem to find the threshold to turn on or off the equipment would also better than a simple one.","text":"A simple limitation is too less sometime. If we are using the fixed threshold, then we could simply let threshold to be the time that consumption is equal to usage. And we are not able to handle the battery capacity as well. This might not meet the real case. In the real case, equipment will use large amount of energy when they start. So the model should be able to predict. Thought wind does change everyday, but it is still some kind of predictable. So, we could train a model from the history data and then predict the wind speed in the future, like one year. We could use TensorFlow.js for training. Then Solve an optimization problem to see what would be the best time to start the engine and what would be the best time to stop the engine. Or solving an optimization problem to find the threshold to turn on or off the equipment would also better than a simple one. Normal Count Model Define variables n : number of days c : the normal energy consumption per unit time S = {0,1}n^n​n​​, the status code to identify if we need to turn on the machine in this day/unit time. C = {0,1,2}n^n​n​​, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off. W = Rn\\mathbf{R}^nR​n​​, the energy produced per day/unit time Optimization Model \\begin{equation} \\begin{split} &\\text{Maximize } & \\sum_{i\\in n}W_iS_i-c\\sum_{i\\in n}C_iS_i\\\\ &\\text{Subject to } & C_i=S_i-S_{i-1}+1 \\ \\forall i\\in \\{2,\\cdots,n\\}\\\\ & & 0 \\le C_i \\le 2 \\ \\forall i\\in \\{1,\\cdots,n\\}\\\\ & & 0 \\le S_i \\le 1 \\ \\forall i\\in \\{1,\\cdots,n\\}\\\\ \\end{split} \\end{equation} Use MIP to solve it Sample data Sample data should be in csv format, each column contains different information. Only wind data is represented in the section below u is the x component of wind, v is the y component of the wind. Final wind speed is calculated by using ws=u2+v2ws = \\sqrt{u^2+v^2}ws=√​u​2​​+v​2​​​​​ 1234Time,u,v0.2,12,150.3,16,120.5,12,16 If we need to make this simpler or we are not able to collect related data for each type of energy, we could also use data in the below format: 1234Time,var0.2,120.3,160.5,12 var is the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way, e.g. wind speed. Possible GAMS code Interpret to Js Analyze Pros Considered the immediate on will consume much more energy. model could be extended to handle all power source in this single model Cons wind is not possible to be predicted, so turning on and off has less significance as the situation in the next year might be different. Expected Count Model Because the wind is hard to predict, especially in some unstable situation. And battery could only store a limited amount of energy. Using statistic data might be a better way to calculate. We could calculate the expectation of total energy and find a threshold for each type of energy to measure maximize possible energy production instead of in a specific day. In this setting, we only need to run the optimization for one turn and could overcome a lot of unnecessary production. Sample data before analyze Index Val(W) Possibility(%) Day count Expectation 0 65.2 8 2 5.216/130.4 1 32.8 4 1 1.312/32.8 2 23.3 4 1 0.932/23.3 … This data needs to be purified ahead of time, for those cases that produced energy is less than equipment consumption, we could simply set its total to 0. Define variables J : type of energy, J∈J\\inJ∈ {wind, water, ⋯\\cdots⋯ } N : value index, 1, 2, ⋯\\cdots⋯. C = RJ\\mathbf{R}^JR​J​​: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then CwindC_{wind}C​wind​​=10*2=20) U = R\\mathbf{R}R: Total user consumption W = RJ,N\\mathbf{R}^{J,N}R​J,N​​, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model. S = {0,1}J,N^{J,N}​J,N​​, to indicate I should turn on wind on this statistic data or not B ∈R\\in \\mathbf{R}∈R : The battery charging limitation. Optimization Model \\begin{equation}\\begin{split}&\\text{Maximize } & \\sum_{i\\in N}\\sum_{j\\in J}W_{ij}S_{ij}-\\sum_{i\\in N}\\sum_{j\\in J}C_{j}S_{ij}\\\\& \\text{Subject to}\\ & 0 \\le S_{ij} \\le 1 \\ \\forall i\\in N j\\in J\\\\& & \\sum_{i\\in N}\\sum_{j\\in J}W_{ij}S_{ij}-\\sum_{i\\in N}\\sum_{j\\in J}C_{j}S_{ij}-U\\le B\\end{split}\\end{equation} Use MIP to solve it Sample data Sample data should be in csv format, each column contains different information. Data defined in teh previous section is acceptable but not efficient. Only wind data is represented in the section below. If data input is in a range, then we are going to use median of each group. Like this: 1234eType,Range (mph), Total1, 1.3 - 4,3.31, 4 - 8,23.51, 8 - 13,46.4 Or the specific data and occurrence count in csv file: 1234eType,val (mph), Total1, 1.3,3.31, 4,23.51, 8,46.4 Total could be either the possibility this data occurs or the number of days. Range or val could be the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way, e.g. wind speed. Possible GAMS code Interpret to Js Analyze Pros Use expectation to simulate a better estimate of wind speed in different scenario Save calculation Cons Data has higher wind speed would usually has less possibility. Then the model won’t focus on them, so they might be ignored in the model. (Too big wind might harm the equipment, so this make sense sometime) User consumption is not perfect estimate Modified Version for Normal Count Battery limitation is a long term limitation, each one has some kind of relationship. Has battery limitation and want to find global optimal. Variables J : type of energy, J∈J\\inJ∈ {wind, water, ⋯\\cdots⋯ } N : number of days, $\\in $ {1,2,3, ⋯\\cdots⋯ ,n} c = RJ\\mathbf{R}^JR​J​​: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then CwindC_{wind}C​wind​​=10*2=20) U = RN\\mathbf{R}^NR​N​​: User consumption per unit time N S = {0,1}J,N^{J,N}​J,N​​, the status code to identify if we need to turn on the machine in this day/unit time. C = {0,1,2}J,N^{J,N}​J,N​​, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off. W = RJ,N\\mathbf{R}^{J,N}R​J,N​​, the energy produced per day/unit time for j equipment B ∈RN\\in \\mathbf{R}^N∈R​N​​ : The battery charging limitation. With B0=0B_0=0B​0​​=0 B ∈R\\in \\mathbf{R}∈R : Constant to represent the battery charging limitation. Optimization Model \\begin{equation} \\begin{split} &\\text{Maximize } & \\sum_{i\\in N}\\sum_{j\\in J}W_{ij}S_{ij}-\\sum_{j\\in J}c_j\\sum_{i\\in N}C_{ij}S_{ij}\\\\ &\\text{Subject to } & C_{ij}=S_{ij}-S_{i-1,j}+1 \\ \\forall i\\in \\{2,\\cdots,n\\}\\\\ & & 0 \\le C_{ij} \\le 2 \\ \\forall i\\in N j\\in J\\\\ & & 0 \\le S_{ij} \\le 1 \\ \\forall i\\in N j\\in J\\\\ & & B_i\\le B \\ \\forall i\\in \\{2,\\cdots, n\\}\\\\ & & B_i=B_{i-1}+\\sum_{j\\in J}W_{ij}S_{ij}-\\sum_{j\\in J}c_jC_{ij}S_{ij}-U_i \\end{split} \\end{equation} Use MIP to solve it Sample data Sample data should be in csv format, each column contains different information. Only wind data is represented in the section below u is the x component of wind/other type of energy, v is the y component of the wind. Final wind speed is calculated by using ws=u2+v2ws = \\sqrt{u^2+v^2}ws=√​u​2​​+v​2​​​​​ . 1234Time,eType,u,v0.2,1,12,150.3,1,16,120.5,1,12,16 If we need to make this simpler or we are not able to collect related data for each type of energy, we could also use data in the below format: 1234Time,eType,var0.2,1,120.3,1,160.5,1,12 eType is the type of energy, 1 means wind, 2 means sun … var is the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way. Let thresholds high To overcome the cons that some high energy production case will be ignored in the previous cases, use this model to find it. Instead of previous cases, we want to minimize the ∑i,jSij\\sum_{i,j}S_{ij}∑​i,j​​S​ij​​, to use as many as high production case as we could. So the thresholds could be as high as possible. Variables J : type of energy, J∈J\\inJ∈ {wind, water, ⋯\\cdots⋯ } N : number of days, $\\in $ {1,2,3, ⋯\\cdots⋯ ,n} c = RJ\\mathbf{R}^JR​J​​: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then CwindC_{wind}C​wind​​=10*2=20) U = RN\\mathbf{R}^NR​N​​: User consumption per unit time N S = {0,1}J,N^{J,N}​J,N​​, the status code to identify if we need to turn on the machine in this day/unit time. C = {0,1,2}J,N^{J,N}​J,N​​, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off. W = RJ,N\\mathbf{R}^{J,N}R​J,N​​, the energy produced per day/unit time for j equipment B ∈RN\\in \\mathbf{R}^N∈R​N​​ : The amount of energy battery has. With B0=B_0=B​0​​=user defined, could be 70% of the battery size B ∈R\\in \\mathbf{R}∈R : Constant to represent the battery charging limitation. Optimization Model \\begin{equation}\\begin{split}&\\text{Minimize } & \\sum_{i,j}C_{ij}S_{ij}\\\\&\\text{Subject to } & C_{ij}=S_{ij}-S_{i-1,j}+1 \\ \\forall i\\in \\{2,\\cdots,n\\}\\\\& & 0 \\le C_{ij} \\le 2 \\ \\forall i\\in N j\\in J\\\\& & 0 \\le S_{ij} \\le 1 \\ \\forall i\\in N j\\in J\\\\& & B_i\\ge B \\ \\forall i\\in \\{2,\\cdots, n\\}\\\\& & B_i=B_{i-1}+\\sum_{j\\in J}W_{ij}S_{ij}-\\sum_{j\\in J}c_jC_{ij}S_{ij}-U_i\\end{split}\\end{equation} Use MIP to solve it We could use default value if no applied answer found Sample data Data format is the same as format defined in Modified Version for Normal Count. Possible GAMS code Interpret to Js Analyze Pros We will use as much as high production scenario as we could Because thresholds is high, a lot of unexpected energy consumption in the turning on process could be eliminated. Cons Total energy is not maximized(This makes sense, as we only have a limited energy storage) Expected Count for Let thresholds high case Data source definition is the same as the previous situation Define variables J : type of energy, J∈J\\inJ∈ {wind, water, ⋯\\cdots⋯ } N : value index, 1, 2, ⋯\\cdots⋯. C = RJ\\mathbf{R}^JR​J​​: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then CwindC_{wind}C​wind​​=10*2=20) U = R\\mathbf{R}R: Total user consumption W = RJ,N\\mathbf{R}^{J,N}R​J,N​​, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model. S = {0,1}J,N^{J,N}​J,N​​, to indicate I should turn on wind on this statistic data or not B ∈R\\in \\mathbf{R}∈R : The battery charging limitation. D ∈RJ,N\\in \\mathbf{R}^{J,N}∈R​J,N​​, indicate the day count each value index, either pre-calculated or calculate in model. Optimization Model \\begin{equation}\\begin{split}&\\text{Minimize } & \\sum_{i\\in N}\\sum_{j\\in J}D_{ij}S_{ij}\\\\& \\text{Subject to}\\ & 0 \\le S_{ij} \\le 1 \\ \\forall i\\in N j\\in J\\\\& & \\sum_{i\\in N}\\sum_{j\\in J}W_{ij}S_{ij}-\\sum_{i\\in N}\\sum_{j\\in J}C_{j}S_{ij}-U\\ge B\\end{split}\\end{equation} Use MIP to solve it Sample data Data format is the same as format defined in Expected Count Model. Analyze Pros Use expectation to simulate a better estimate of wind speed in different scenario Save calculation Cons User consumption is not perfect estimate Energy stored in battery is not perfectly estimated Last thought: Both model doesn’t consider extreme case, as people will still have control on the entire system and most of people won’t use this in extreme case. To make all models become portable and not using too many calculation, I choose LP or MIP model, instead of building some better estimate model. Battery has some specific charging and discharging curve, like this: Need discussion Do we know normal user consumption of energy? If no history data provided, then use fixed threshold=energy consumed by equipment in normal life. Another thought: Use a single line and calculate how many value is below the line, estimate and find the least number of turning on/off (Not possible, as turning off is a point but wind might remain low for a duration of time)","categories":[{"name":"optimization","slug":"optimization","permalink":"https://shaokang.ga/categories/optimization/"}],"tags":[{"name":"GAMS","slug":"GAMS","permalink":"https://shaokang.ga/tags/GAMS/"},{"name":"MIP","slug":"MIP","permalink":"https://shaokang.ga/tags/MIP/"}]},{"title":"From swing,awt to javafx","slug":"projects/From-swing-awt-to-javafx","date":"2020-05-13T15:01:57.000Z","updated":"2020-05-13T15:01:57.527Z","comments":true,"path":"2020/projects/From-swing-awt-to-javafx/","link":"","permalink":"https://shaokang.ga/2020/projects/From-swing-awt-to-javafx/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"A JavaFx project","slug":"projects/A-JavaFx-project","date":"2020-05-03T02:33:03.000Z","updated":"2020-05-13T15:27:12.309Z","comments":true,"path":"2020/projects/A-JavaFx-project/","link":"","permalink":"https://shaokang.ga/2020/projects/A-JavaFx-project/","excerpt":"This is a Group project done by me. I will talk about my design and usage instruction in the following space. Detailed implementation could be view at This repository. Github Page: https://github.com/ShaokangJiang/A-JavaFX-project Compiled version: https://github.com/ShaokangJiang/A-JavaFX-project/releases Code version: https://github.com/ShaokangJiang/A-JavaFX-project/archive/0.9.zip Usage","text":"This is a Group project done by me. I will talk about my design and usage instruction in the following space. Detailed implementation could be view at This repository. Github Page: https://github.com/ShaokangJiang/A-JavaFX-project Compiled version: https://github.com/ShaokangJiang/A-JavaFX-project/releases Code version: https://github.com/ShaokangJiang/A-JavaFX-project/archive/0.9.zip Usage Command Line Guide It is possible to run from command line or use command line version to interrupt with basic feature, including import. It has two mode, command line mode and command line start. In Command line start, you can specify your argument and then program will enter GUI automatically. In command line mode, you can decide the time you want to enter GUI interface. Command line mode In this mode, you will see an interface like this in command mode: 12345678Welcome to command mode of this program. Because of the requirement of this assignment, majority effort should be done in GUI. This part is only for command line import function. Usage: -f \"path/to/file\" -- This file will be imported. Should be csv files. Seperate using ; if there are multiple files -d \"path/to/file\" -- This will import any csv file in the directory, if any of them contain incorrect formatted data, no data will be imported -h -- print help message -g -- start GUI &gt; To enter it: Path to JavaFx: The path to the library directory to JavaFx. Sample, /home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib 1java --module-path \"&lt;Path to Javafx&gt;\" --add-modules javafx.controls,javafx.fxml -jar executable.jar -c Command line start In this mode, it has two options, either import a directory of csv files or import a list of files separate with ‘;’; To import a directory of csv files: use -d option, e.g. -d \\home\\csv\\. To import a list of files separate with ‘;’, no option argument required, simple add absolute path of files and separate different files with ‘;’, e.g. \\home\\csv\\a.csv;\\home\\csv\\b.csv Program will start GUI automatically after importing. To enter GUI with importing a list of files separate with ‘;’: 1java --module-path \"&lt;Path to Javafx&gt;\" --add-modules javafx.controls,javafx.fxml -jar executable.jar &lt;Path to csv file&gt; Or, start with importing a directory: 1java --module-path \"&lt;Path to Javafx&gt;\" --add-modules javafx.controls,javafx.fxml -jar executable.jar -d &lt;Path to csv directory&gt; Running Download from release page or compile from source. Path to JavaFx: The path to the library directory to JavaFx. Sample, /home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib Download from release page on Github: Download JavaFX (their official website) and download executable.jar from release page java --module-path &quot;&lt;Path to Javafx&gt;&quot; --add-modules javafx.controls,javafx.fxml -jar executable.jar Download and compile from source page: NOT RECOMMEND as too many arguments, dependencies and it is easy to be wrong Source data: Source data should be in the format, it means this farm uses those amount of milk in this date: 12345date,id,weight2019-1-1,id 0,67602019-1-1,id 1,86442019-1-1,id 2,35472019-1-2,id 0,6824 Design An overall agreement of this design is that those function should not only work for this project but also for other project. Basic components: It contains the structure to use in this program. Manager&amp;Report: It could be the heart of this program’s non-GUI part, it contains method to handle with file, manage farmers. Report part is to generate different GUI report and then let it show up in the major window, Notification.java. GUI components: Components that are not shown in the graph are two, alert1.java, ChoiceWindow.java. One component is the alert class to show various alerting information. ChoiceWindow.java has all window required for choosing. Such as choosing for filter categories. This is a helper class to generate interface for user to select filter or other categories they want. Such as, choosing which function you want to use to manage data The other are major part either control or show interfaces to user. Main.java also has the responsibility to handle command line input. Detailed design A detailed class by class design document and agreement could be view at here: This is the initial thought of design by me before the actual implementation, so the data structure used to store farmers has changed to Hashmap and there are lot of minor changes. To see the latest version, go to This repository. And I have no idea about JavaFx when I design this structure, so it is possible that some places have structure error. Special notes: It requires oracle java 1.9(openjdk on linux) or above Credit: As you might see from the category tag, this is a project for a coursework. Any information for this section has been removed to meet the requirement and ambiguous copyright rules from the professor. Their requirement is to remove any description regard to the assignment. I believe this document has less than 0.1% similarity with the original description document, this should meet the requirement. Basically, part of the thought, like what this program should have, all of the design, all of the implementation is done by me. This page is created for fun and not intended to violate any copyright rule. So, let me know if this version is still inappropriate via email. Last Note: JavaFX should be good for multi-platform usage and it is easy to build a good, well-formed application. But it is a little bit different than the other, including swing, awt. So, we can not use the same thought to think about JavaFX.","categories":[{"name":"Programs","slug":"Programs","permalink":"https://shaokang.ga/categories/Programs/"},{"name":"Coursework","slug":"Programs/Coursework","permalink":"https://shaokang.ga/categories/Programs/Coursework/"}],"tags":[{"name":"JavaFX","slug":"JavaFX","permalink":"https://shaokang.ga/tags/JavaFX/"}]},{"title":"Modified traffic simulator","slug":"projects/Modified-simulator","date":"2020-02-15T01:57:29.000Z","updated":"2020-05-05T21:55:32.371Z","comments":true,"path":"2020/projects/Modified-simulator/","link":"","permalink":"https://shaokang.ga/2020/projects/Modified-simulator/","excerpt":"My modified version is at https://traffic-simulation.shaokang.ga/. I just add an export function to export data for each car and measuring point to csv file. I will talk them in details at here and discuss my thought.","text":"My modified version is at https://traffic-simulation.shaokang.ga/. I just add an export function to export data for each car and measuring point to csv file. I will talk them in details at here and discuss my thought. Modification I just add an export function to get the data for each car and measuring point. You could see them in real time or download them. View To see them in real time. Visit: https://traffic-simulation.shaokang.ga/, you will be able to see a text field in the right bottom place. That is the data area. I set a limitation of a maximize of 500 rows because browser will be slow when there are too many rows as we need to append data in real time to those box. This limitation won’t limit content in the csv file you could get by pressing download button. Example image as shown below: Download It is also easy to download. Simply click the button below each box is enough. File will be saved as csv. File has a size limitation based on your browser, generally, 800 MB. Sample downloaded data: Sample car data: 123456Time,rType,id,Speed,lane,u0,MainRoad,200,58,0,660.099080,MainRoad,201,58,1,625.524860,MainRoad,202,58,2,590.953060,MainRoad,203,58,0,556.381400,MainRoad,204,58,1,521.80634 Sample statistic data: 1234567Time,loc_x,loc_y,flow,Speed0.2,613.894,182.693,0,--0.2,175.208,429.275,0,--0.2,613.894,489.337,0,--10.2,613.894,182.693,3960,6410.2,175.208,429.275,1800,6410.2,613.894,489.337,1800,64 My Understanding Based on my understanding, this simulation use the following system to monitor a car: Direction/position of vehicles &lt;lane,u,rType&gt; (One road only have one direction) lane – which road this car is on u – distance from start point rType – type of road(main road or ramp or others) I also have a plan to make another simulator in Java if I have time in the future, which has the same functionality as this one. Here is the detailed plan. Problem: A specific type of road, at least 3 main road and one ramp, will be provided. Number of road is able to change at the beginning of the program. The program will be given with the car density, car acceleration, Truck existence percentage and any rule regard to the road set up by the user by drag specific sign to specific position. Then, program needs to simulate the real time running situation and represent the real time graph on the left hand. User is able to change each criteria and graph left side should represent the change dynamically. After user stops, the program will be able to export data contains information about those cars and statistic data. During simulation, cars are able to change route and we assume that driver will choose to change the route if that route is faster. Graphical User interface: This is only a simple case, there could be other types of roads An asking prompt to ask user for specific information A major running part, left side is the real time running graph. Right hand contains bars to change different criteria, such as car density, car acceleration, Truck existence percentage. When exit, prompt a save as prompts to ask user choose path to save. Or user could choose to ignore running data. In the runtime, the center window is represented as the real time simulation result, like this: Data: The program might provide function to read configuration from files but it is not necessary. Because those data are randomly chosen by user, there is no need to store them in a file before the program running. Initial configuration could be loaded from a configuration txt file. Content looks like this: 1234567car_density: 0.5car_acceleration: 1.2 trunk acceleration: 1.2Truck existence percentage: 0.5Maximize speed for trunk: 108Maximize speed for car: 120# of main road: 3 car density - double type ∈\\in∈ (0,1), sample: 0.5 – means half road will get a car as an inflow in a second car acceleration - double type ∈\\in∈ (0,6), sample 1.2, unit m/s2m/s^2m/s​2​​ trunk acceleration - double type ∈\\in∈ (0,4), sample 1.2, unit m/s2m/s^2m/s​2​​ Truck existence percentage - double type ∈\\in∈ (0,1), sample: 0.5 – means half of inflow cars will be trunk. Maximize speed for trunk - double type ∈\\in∈ (0,120), sample 108, unit km/hkm/hkm/h Maximize speed for car - double type ∈\\in∈ (0,120), sample 108, unit km/hkm/hkm/h # of main road - int type ∈\\in∈ [2,5], sample 3. Class (Type) Summary: It is easy to see the program requires two type of cars, car and trunk. Actually, some values are shared. So, we could have an interface basiccar and an abstract class of them as well. Or other ways are also fine. Then, car and trunk class could implement them. We do also need some road classes, and a plot class to plot information provided by road class. Class Name Descriptions basicCar.java Super class of car and trunk, contains basic info to describe a car. See below for more information. car.java Contain more info, such as maxmize speed for car, and personalized acceleration speed. trunk.java Contain more info, such as maxmize speed for trunk, and personalized acceleration speed. road.java Handle restrictions user put and add cars to roads. plot.java The most admin class that handle info between GUI and other class and plot on graph. Credit: Original simulator is at https://github.com/movsim/traffic-simulation-de. I forked from this repo and made those edition. Let me know if this is not appropriate.","categories":[{"name":"website","slug":"website","permalink":"https://shaokang.ga/categories/website/"},{"name":"JS","slug":"website/JS","permalink":"https://shaokang.ga/categories/website/JS/"}],"tags":[{"name":"JS","slug":"JS","permalink":"https://shaokang.ga/tags/JS/"},{"name":"HTML","slug":"HTML","permalink":"https://shaokang.ga/tags/HTML/"}]},{"title":"AutoCommenter","slug":"projects/AutoCommenter","date":"2019-12-25T17:57:31.000Z","updated":"2020-05-04T19:19:33.490Z","comments":true,"path":"2019/projects/AutoCommenter/","link":"","permalink":"https://shaokang.ga/2019/projects/AutoCommenter/","excerpt":"Automatically add comments to Java source code This program can not understand your code. What it is doing is to add some comments based on specific rule and make your program full of comments to meet the requirement of dummy comments required in some courses. And actually, this program can only add comments to some specific area. For some other areas, it could detect it and send a window to ask you for comments and provide some suggestion.","text":"Automatically add comments to Java source code This program can not understand your code. What it is doing is to add some comments based on specific rule and make your program full of comments to meet the requirement of dummy comments required in some courses. And actually, this program can only add comments to some specific area. For some other areas, it could detect it and send a window to ask you for comments and provide some suggestion. Github Page: https://github.com/ShaokangJiang/AutoCommenter Compiled version: https://github.com/ShaokangJiang/AutoCommenter/releases Code version: https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip Sample result: Before adding: After adding Usage Creating configuration file and put it to the running directory A model of configuration file as shown below: 123456789101112131415161718192021-----special:-----BAIDU_APP_ID: BAIDU_SECURITY_KEY: IFLY_APP_ID: lineLimit:90-----conditions:-----if\\s*\\(.*\\) Following code will be generated if ###.*### met.while\\s*\\(.*\\) Following code will be excuted for multiple time till ###.*### doesn&apos;t met.do\\s*\\&#123; A do...while... loop will be handled.[^&gt;&lt;!=]+=&#123;1&#125;.* Assign values.for\\s+\\(.*\\) Running iteration on required object.else\\s*\\&#123; Do the following if no condition above is met.return.*; Return ###.*### to the program call from.break; Break current loop.System\\.out\\.println\\(.*\\) Print information of ###.*### to the user screen.default\\s*\\: When default case get touched.case.*\\: Under the case of ###.*###\\.push\\( push element to the stack, to the top of it\\.pop\\( pop element from the stack, from the top of it\\.peek\\( peek element from the stack, never removes data\\.isEmpty\\( check if it is empty or not -----special:----- and -----conditions:----- are field tags, These field tags should matches exactly as what described above. Special field: BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at here. No need to register if you don’t plan to use translation function. IFLY_APP_ID: Need register with Ifly at here. No need to register if you don’t plan to use voice dedication function lineLimit: Words will be cut of at the exact limitation position if it is out of limits. Conditions: The conditions used to detect on each line of code and make comments at the end of each line. It uses the regular expression of java to detect words. The format of writing condition is [Expression] &lt;Words&gt;. They are separated using space. [Expression]: The java regular expression. If space is needed, use \\s instead of an empty place. &lt;Words&gt;: The words to comment at the end of sentences that contains this expression. Use ###.*### to place contents matches .* on the left hand side. Only the first one on the left hand side will be placed on the right side. And code only support ###.*### syntax right now. For example, If there is a line in java code: System.out.println(&quot;Hello World!&quot;);. This meet the requirement of System\\.out\\.println\\(.*\\) defined above. So, the comments to be added to the end of this line is Print information of &quot;Hello World!&quot; to the user screen. In most case, this will make sense. Other places: For the other place, including method header, method implementation method, return value description, pass in parameter and some other things, program will promote a window like this to let you input word you want. Default in graph below will be replaced with some guidance words. For some method, such as getter, setter, constructor, program will place some predefined words at here. You could edit it as you need. For the edit method, you could use start listen button to speech language you choose in the first step and use voice dedicator. Compile &amp; run Download from release page or compile from source. Download from release page: Choose correct library to download and download AutoCommenter from release page java -jar AutoCommenter.jar [-d] &lt; Directory or files path &gt; -d is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, java -jar AutoCommenter.jar E:\\test &lt;File path&gt; could be a list of files separated with space. Like, java -jar AutoCommenter.jar file1.java file2.java. Download from release page: git clone https://github.com/sjiang97/AutoCommenter.git cd AutoCommenter find -name &quot;*.java&quot; &gt; sources.txt : Find all java files to compile mkdir bin javac -d ./bin -cp ./\\* @sources.txt cd bin java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test [-d] &lt; Directory or files path &gt; -d is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, java -jar AutoCommenter.jar E:\\test &lt;File path&gt; could be a list of files separated with space. Like, java -jar AutoCommenter.jar file1.java file2.java. Special notes: It requires oracle java 1.8(openjdk on linux) or above It requires a well formated java code:, In eclipse, kick Ctrl+Shift+f to make code well formated. And define property of class, fields specifically, i.e. include public instead of omit it. It works perfectly on windows machine. It might have problem on mac/linux. Further This is not perfect. Lots of places need to improve Didn’t add class header automatically Program should able to do multiple replacement Program should allow user to define mapping relationship between name of method and javadoc sample.","categories":[{"name":"Programs","slug":"Programs","permalink":"https://shaokang.ga/categories/Programs/"},{"name":"tools","slug":"Programs/tools","permalink":"https://shaokang.ga/categories/Programs/tools/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://shaokang.ga/tags/Java/"}]},{"title":"VoiceInput","slug":"projects/VoiceInput","date":"2019-12-25T17:57:22.000Z","updated":"2020-05-04T19:19:05.945Z","comments":true,"path":"2019/projects/VoiceInput/","link":"","permalink":"https://shaokang.ga/2019/projects/VoiceInput/","excerpt":"A simple method to write words I like to use voice input to write words. But I didn’t find an easy to use voice dedication program with dynamic correction. So I made this one. A java voice input interface using iflytek voice dictation with dynamic correction.","text":"A simple method to write words I like to use voice input to write words. But I didn’t find an easy to use voice dedication program with dynamic correction. So I made this one. A java voice input interface using iflytek voice dictation with dynamic correction. Github Page: https://github.com/ShaokangJiang/VoiceInput Compiled version: https://github.com/ShaokangJiang/VoiceInput/releases Code version: https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip Sample run: You need to choose a language to dedicate in bash window at first. Then a window below will be pushed out: Each button clarify what you could do clearly. Usage Creating configuration file and put it to the running directory A model of configuration file as shown below: 1234-----special:-----BAIDU_APP_ID: BAIDU_SECURITY_KEY: IFLY_APP_ID: -----special:----- is field tag, It should matches exactly as what described above. Special field: BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at here. No need to register if you don’t plan to use translation function. IFLY_APP_ID: Need register with Ifly at here. No need to register if you don’t plan to use voice dedication function Compile &amp; run Download from release page or compile from source. Download from release page: Choose correct library to download and download VoiceInput from release page java -jar VoiceInput.jar Download and compile from source page: git clone https://github.com/sjiang97/VoiceInput.git cd VoiceInput find -name &quot;*.java&quot; &gt; sources.txt : Find all java files to compile mkdir bin javac -d ./bin -cp ./\\* @sources.txt cd bin java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test Special notes: It requires oracle java 1.8(openjdk on linux) or above","categories":[{"name":"Programs","slug":"Programs","permalink":"https://shaokang.ga/categories/Programs/"},{"name":"tools","slug":"Programs/tools","permalink":"https://shaokang.ga/categories/Programs/tools/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://shaokang.ga/tags/Java/"}]},{"title":"College library optimization problem","slug":"projects/College-library-optimization-problem","date":"2019-12-23T01:57:29.000Z","updated":"2020-05-03T02:33:46.906Z","comments":true,"path":"2019/projects/College-library-optimization-problem/","link":"","permalink":"https://shaokang.ga/2019/projects/College-library-optimization-problem/","excerpt":"This project is a group work designed and solve by Shaokang Jiang &amp; Katherine Fu for course CS524 project. Optimization is a powerful way to solve real problem in a short amount of time. It needs us to use more math when we design solutions instead of using computing resources when the problem runs. GAMS is a powerful optimization software. GAMS could do calculation and generate equations in seconds. By using CPLEX, we are able to reach solutions in seconds. In this project, we utilize GAMS feature (dynamic sets, mip, etc) and nearly solved a real problem. Problem College library optimization problem We consider a simplified example of arranging the number of students who use the college library for studying.","text":"This project is a group work designed and solve by Shaokang Jiang &amp; Katherine Fu for course CS524 project. Optimization is a powerful way to solve real problem in a short amount of time. It needs us to use more math when we design solutions instead of using computing resources when the problem runs. GAMS is a powerful optimization software. GAMS could do calculation and generate equations in seconds. By using CPLEX, we are able to reach solutions in seconds. In this project, we utilize GAMS feature (dynamic sets, mip, etc) and nearly solved a real problem. Problem College library optimization problem We consider a simplified example of arranging the number of students who use the college library for studying. In different period of time during school year, the number of students staying in the library is different. During the midterm and final weeks, the number is rapidly increasing. Thus, it is essential to maximize the efficiency of the number of hours of students who can use the library given their studying duration of using individual seats, the inflow and outflow of students, the equipment checking-out situations, and so on. To simplify our model, we assume that the library has two sections: a quiet area, a public area. The total number of seats in the college library is 1000. Quiet area Public area &le;5 hrs &gt;5 hrs For project For chatting &le;2 hrs &gt;2 hrs &le;4 hrs &gt;4 hrs 1 0.6 1.1 0.5 0.12 0.05 To understand the Efficiency, we gave an example at here. Assume a person could finish a page of work in an hour, this is defined as one unit of efficiency, also known as the efficiency per hour for a person work in quiet area for less than 5 hours. But if this person work more than 5 hours, then he/she can only finish 0.6 pages of work for each hour he/she spend. By using formula, it looks like this: (t stand for time of working, f(t) stand for total efficiency) Equation 1 stand for student total efficiency staying in quiet area. Equation 2 stand for student total efficiency staying in public area for project purpose. Equation 3 stand for student total efficiency staying in public area for chatting purpose. \\begin{equation} f(t)=\\left\\{ \\begin{aligned} & 1*t & \\forall t\\le 5 \\\\ & 5+0.6*t & \\forall t> 5 \\end{aligned} \\right. \\end{equation} \\begin{equation} f(t)=\\left\\{ \\begin{aligned} & 1.1*t & \\forall t\\le 2 \\\\ & 2.2+0.5*t & \\forall t> 2 \\end{aligned} \\right. \\end{equation} \\begin{equation} f(t)=\\left\\{ \\begin{aligned} & 0.12*t & \\forall t\\le 4 \\\\ & 0.48+0.05*t & \\forall t> 4 \\end{aligned} \\right. \\end{equation} It is permitted to switch a person from quiet place to public place. A person who requested the quiet apace and switched to public space due to limited seats will have an coefficient of efficiency of 0.8; A person who requested the public apace and switched to quiet space due to limited seats will have an coefficient of efficiency of 0.3; Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the caalculation result from the previous step, f(x) stand for result of new efficiency) \\begin{equation} f(x)=\\left\\{ \\begin{aligned} & 0.8*x & \\forall x| quiet\\rightarrow public \\\\ & 0.3*x & \\forall x| public \\rightarrow quiet \\end{aligned} \\right. \\end{equation} The college library also provides equipment including laptops, calculators, and computer chargers for students to use. If a student checks out one of these equipment, the efficiency of that student could be multiply by those coefficient. The coefficient for regular efficiency is shown below. Laptops calculators computer chargers 1.1 1.2 1.3 Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the calculation result from the previous step, f(x) stand for result of new efficiency) \\begin{equation} f(x)=\\left\\{ \\begin{aligned} & 1.2*x & \\forall x| calculator=1 &\\\\ & 1.1*x & \\forall x| laptops=1 &\\\\ & 1.3*x & \\forall x| charger=1 & \\end{aligned} \\right. \\end{equation} The number of laptops is 10, the total number of calculators is 30, and the number of chargers is also 10. Every person could use those equipment for the time duration that they are study in the library. Each person could borrow at most one equipment during time duration that he is in library. data.gdx contain the data of students’ thinking of purpose of using those equipment and seats in the library. We want to consider a situation in a day of experimenting period during opening hours of 8:00 am to 9:00 pm. This file recorded the time when a student enter the library; the time they want to study; the place they want to study; Max possible hours for quiet hours is 10. Max possible hours for public hours is 6; type of 0 stands for project, 1 stands for chatting; By using data above, you are going to give permission for certain group of students to enter this library and arrange seats in the library in order to maximize total efficiency. And also, to demonstrate that this library is open to all people, you get to allow at least 10 chatting people to enter this library. Objective1: How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library? Dataset could be downloaded from data.gdx. Objective2: More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library. Dataset could be downloaded from data-free.gdx, data-middle.gdx, data-busy.gdx. Objective3: Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason. Analyze: The approach used. We organized the requests from all the students based on their (enter_hour, public_hour) with the help of variables, respectively, n_pe_public and n_pe_quiet. These are represented as the maxmize number of people each regetangle block could contain in the graph below. Regarding the opening time of the library, there are two variables called quiet_arrange and public_arrange in a form of tuples (enter_hour, public_hour) as an entry. Based on the graph above, every quiet(open_hour, quiet_hour) variable contains # of people staying on seat at certain time interval and the duration of his or her studying hours is illustrated as the length of each block. Same case for public area. After we synthesized all the cases of students from his or her entering times to leaving times, we could form a complete diagram and the left graph above is a snippet. In general, we utilized a dynamic set determined by students’ entering time and the duration of studying in either quiet or public area during each time interval from 8 am to 9 pm to measure the seat arrangement. This dynamic dataset is called “visible_quiet”, a 3-dimensional set, with sets (o, enter_hour, quiet_hour). It means, for every time interval o(as 10:00 in above) starting from 8 am, the (open_hour, quiet_hour) should be counted once, which is shown as shaded blocks on the top right side. In each time interval, a decent amount of students will enter the library and the total number during that time will be calculated. For example, based on the graph above, quiet(“8”, “3”) records the number of students who enter the library at 8 am and stay for 3 hours. If another student comes at 10 am and has also studied for 3 hours, we should count both of them in the time interval from 10 am to 11 am (the shaded area). The sum of number of students that shaded blocks contains should be less or equal to a corresponding variable(called quiet_chairs in code). Similiar case would be applied to public case. We also took the seat-switching situations as considerations. The number of students in quiet area in certain interval should be the sum of the number of current students, those who just arrive, and those who switch from the public area to the quiet area(named as switch_p2q in code). Same thing applies to the arrangement of the public area(in a variable called switch_q2p). Our objective is to maximize the total efficiency. We realized the utilization of calculators, chargers and laptops will also exert significant effects on students’ efficiency. Considering that it was hard to calculate them with our original model, we splited the entire block into two stages demonstrated in two blocks in obj1. The first stage begin from the head of introduction and end at here. Because we had them in the problem description part, we solved the second stage and use this model to discover data in obj2. In the first stage, the model is calculated by multiplying the base total efficiency coefficients with the number of hours students spend in each area. The base total efficiency coefficients depend on area and hours, so they are pre-calculated and stored in eff_quiet and eff_public in the code. We also considered the situation whether students switch areas or utilize equipments. For different scenarios, we multiplied hours with different coefficients. More details will be discussed in the section below. For the second stage of the problem, we employed some variables similar to ca_need_public, ca_need_quiet to represent the machines borrowed at pair (enter_hour, quiet_hour). We organized the needs for devices at first and set up them as an upper bound. The other procedures are similar to methods using in stage one. One difference is that we utilized some variableS for spliting, similar to ca_need_public_1, ca_need_public_2. They are used later for the objective function. Because the objective function has two variables with different conditions(quiet_arrange and switch_p2q) in each type(pblic or quiet) taking different final coefficient, we need to split the variable to represent those conditions. Because we try to maximizing the problem, the program will always fill the quiet_arrange first as it has a higher coefficient in general. In terms of the number of equipments, we assumed that the requests for equipments should be greater than the number the library has. Given a simple example. If four students all require to use calculator but currently, the library only has 3 calculators available, we try to find a way to give the calculators to students in order to maximize the total efficiency. Optimization model We first counted the total number of people in either public or private areas based on the avalibility. Then, we calculated the efficiency of both regular studying hour, switching situations, and, equipment check-out situations and attempt to maxmize the total efficiency. We finally displayed students who have been chosen to study in certain seats in certain time interval. We simplified the representation so we only represented the quiet study room and calculator case. In the model, we had those variables: let o to be a set of open hour from 8 to 21. let q to be a set of people can stay in the quiet room, from 1 to 10. let ty be the type of public object, it could be chat or project. let qi be the set of original people record identity number, and cj be the category, like enter, hours, calculator Let QuietmlQuiet_{ml}Quiet​ml​​ for m∈qi,l∈cjm\\in qi, l\\in cjm∈qi,l∈cj represent the dataset. let sqijksq_{ijk}sq​ijk​​ for i,j∈o,k∈qi,j\\in o, k\\in qi,j∈o,k∈q be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible. For example, s9jks_{9jk}s​9jk​​ = {(8,2),(8,3),(8,4)…(8,10),(9,1),(9,2),(9,3)…(9,10)} let splijksp_{lijk}sp​lijk​​ for l∈ty,i,j∈o,k∈ql\\in ty, i,j\\in o, k\\in ql∈ty,i,j∈o,k∈q be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible. For example, s19jks_{19jk}s​19jk​​ = {(8,2),(8,3),(8,4)…(8,6),(9,1),(9,2),(9,3)…(9,6)} let EkE_{k}E​k​​ for k∈qk\\in qk∈q to be the Base total efficiency base vector on time k. let P2QljkP2Q_{ljk}P2Q​ljk​​ for l∈ty,j∈o,k∈ql\\in ty, j\\in o, k\\in ql∈ty,j∈o,k∈q to be people switch from public area to quiet area enter at hour j and stay for hours k. Same mechanism for Q2PQ2PQ2P let variable QCQCQC be the chairs should be in quiet room. let variable QjkQ_{jk}Q​jk​​ for j∈o,k∈qj\\in o, k\\in qj∈o,k∈q be the number of people accepted to the library to maximize total efficiency let variable CQ1jkCQ1_{jk}CQ1​jk​​ for j∈o,k∈qj\\in o, k\\in qj∈o,k∈q be the number of calculator split for quiet area accepted to the library to maximize total efficiency let variable CQ2jkCQ2_{jk}CQ2​jk​​ for j∈o,k∈qj\\in o, k\\in qj∈o,k∈q be the number of calculator accepted to the library to maximize total efficiency let CFCFCF be the increment factor of efficiency of using calculator, let SWPQSWPQSWPQ be the factor of efficiency of switch from public to quiet Let NPQjkNPQ_{jk}NPQ​jk​​ for j∈o,k∈qj\\in o, k\\in qj∈o,k∈q be the number of people requested to stay in the library. Let NCQjkNCQ_{jk}NCQ​jk​​ for j∈o,k∈qj\\in o, k\\in qj∈o,k∈q be the number of calculator requested to stay in the library. Let SQmSQ_{m}SQ​m​​ for m∈qim\\in qim∈qi be a binary variable record which people is selected Let SQCmSQC_{m}SQC​m​​ for m∈qim\\in qim∈qi be a binary variable record which people has calculator Max∑k∈qEkT(∑j∈o(Qjk+CQ1jk∗CF+(∑l∈tyP2Qljk+CQ2jk∗CF)∗SWPQ))Max \\sum_{k\\in q}E_{k}^T(\\sum_{j\\in o}(Q_{jk}+CQ1_{jk}*CF+(\\sum_{l\\in ty}P2Q_{ljk}+CQ2_{jk}*CF)*SWPQ)) Max​k∈q​∑​​E​k​T​​(​j∈o​∑​​(Q​jk​​+CQ1​jk​​∗CF+(​l∈ty​∑​​P2Q​ljk​​+CQ2​jk​​∗CF)∗SWPQ)) \\begin{align} \\begin{split} s.t.\\quad & CQ1_{jk} + CQ2_{jk} \\le NCQ_{jk} && \\forall j\\in o,k\\in q \\\\ & Q_{jk} \\le NPQ_{jk}&&\\forall j\\in o,k\\in q\\\\ & 1000\\ge QC&\\\\ & \\sum_{j,k}Q_{jk}+\\sum_{l,j,k}P2Q_{ljk}\\le QC &&\\forall i\\in o, \\forall Q_{jk}\\in sq_{ijk}, \\forall P2Q_{ljk}\\in sp_{ijk} \\\\ & \\sum_{m\\in qi} SQ_{m} = Q_{jk}&& \\forall j\\in o, k\\in q,\\forall m\\in \\{m | Quiet_{m\"enter\"}=j\\\\ &&& \\&Quiet_{m\"hours\"}=k\\}\\\\ & \\sum_{m\\in qi} SQC_{m} \\ge CQ1_{jk} + CQ2_{jk} && \\forall j\\in o, k\\in q,\\forall m\\in \\{m | Quiet_{m\"enter\"}=j\\\\ &&& \\&Quiet_{m\"hours\"}=k\\& Quiet_{m\"Calculator\"}=1\\}\\\\ & \\sum_{j,k}(CQ1_{jk} + CQ2_{jk})\\le 20 &&\\forall i\\in o, \\forall CQ1_{jk}, CQ2_{jk}\\in sq_{ijk} \\\\ & CQ1_{jk} \\le Q_{jk}+Q2P_{jk}&&\\forall i\\in o, k\\in q \\end{split} \\end{align} Most of other formulas for the entire project is similiar to the methods using above, so we choose to not write them. For the solutions, see here for solution of obj1, here for solution of obj2, here for solution of obj3 Processing of the solution processing for the first objective processing for the second objective processing for the third objective Some brief conclusion As shown in area below Conclusion for the first objective Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen. For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it. Conclusion for the second objective As we mentioned in the problem, we provided the permission in each case. But it is not useful. By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period. Conclusion for the third objective As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study. Conclusion for the entire objective As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study. Further thoughts: Furthermore, there are lots of improvements that could be done. Since our model separates the public and quiet areas in our parameter, it is hard for us to simplify our model. In the future model, we could try to combine these two into one parameter to make it simplier. The constraints, dealing ways might need to be improved. And there might be some small errors as there are too many equations. We checked them for multiple times, but it is hard to guarantee that every place is perfectly correct. And the model could only make sense if they have the real data input. Right now, we only have fake data. Solution is not unique(for selection of people). Maybe we don’t have to find which person should be given the permission. We could find the number of people we should accept in each case. we always want to keep minimum change to what we setup in the previous submission, A lot of places could be improved actually. Like obj2, execute_load command would be better. like what we discussed in obj3, some more discoveries could be done, including if the library needs to buy more calculators or not. And, not all people are on time in real case. In this problem, we assume data are collected from survey or somethimg. So, there is no person would have a time duration of 2:15. But in real case, this would happen. So, it would be helpful to invite error vectors to describe this and form the problem. Solution: Important startup of jupyter notebook interface: 123456from IPython.core.display import display, HTMLdisplay(HTML(\"&lt;style&gt;.container &#123; width:95% !important; &#125;&lt;/style&gt;\"))# Load the gams extension%load_ext gams_magic%matplotlib inlinefrom matplotlib import pyplot as plt Objective1: How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library? 1234567891011121314151617181920212223242526272829%%gams * initialize data$title College library optimization problem Katherine Fu &amp; Shaokang Jiangset public_i, public_j, quiet_i, quiet_j, hours /1*10/, public_hour(hours) /1*6/, quiet_hour(hours) /1*10/, enter_hour /8*20/, types \"1:project 2:chatting\" /1*2/;alias(enter_hour, o);parameter Public(public_i,public_j), Quiet(quiet_i,quiet_j) n_pe_public(types, enter_hour, public_hour) n_pe_quiet(enter_hour, quiet_hour) eff_public(types, public_hour) eff_quiet(quiet_hour);option optcr = 0;$gdxin data.gdx$load public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public$load quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet$gdxinscalar total_limit /1000/, chat_low /10/, q2p \"switch efficiency factor\" /0.8/, p2q \"switch efficiency factor\" /0.3/;* dynamic set of visibilityset visible_public(o, enter_hour, public_hour) \"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it\" visible_quiet(o, enter_hour, quiet_hour) \"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it\";visible_public(o, enter_hour, public_hour) = yes$(ord(o)&lt;ord(enter_hour)+ord(public_hour) and ord(o)&gt;=ord(enter_hour));visible_quiet(o, enter_hour, quiet_hour) = yes$(ord(o)&lt;ord(enter_hour)+ord(quiet_hour) and ord(o)&gt;=ord(enter_hour));* calculate the base total efficiency for each (enter_hour, quiet_hour)eff_public(\"1\", public_hour) = (1.1*ord(public_hour))$(ord(public_hour)&lt;=2) + (1.2+0.5*ord(public_hour))$(ord(public_hour)&gt;2);eff_public(\"2\", public_hour) = (0.12*ord(public_hour))$(ord(public_hour)&lt;=4) + (0.28+0.05*ord(public_hour))$(ord(public_hour)&gt;4);eff_quiet(quiet_hour) = (ord(quiet_hour))$(ord(quiet_hour)&lt;=5) + (2+0.6*ord(quiet_hour))$(ord(quiet_hour)&gt;5); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657%%gams* declare variables for first model to useinteger variables public_chair \"# of chairs for public area\", quiet_chair \"# of chairs for quiet area\", public_arrange(types, enter_hour, public_hour) \"# of chairs for types for public area at hour enter_hour and stay at here for public_hour\", quiet_arrange(enter_hour, quiet_hour) \"# of chairs for quiet area at hour enter_hour and stay at here for quiet hour\" switch_q2p(enter_hour, quiet_hour) \"# of chairs switched from quiet area to public area\" switch_p2q(types, enter_hour, public_hour) \"# of chairs switched from public area to quiet area\";public_chair.up = total_limit;quiet_chair.up = total_limit;public_arrange.up(types, enter_hour, public_hour) = total_limit;quiet_arrange.up(enter_hour, quiet_hour) = total_limit;switch_q2p.up(enter_hour, quiet_hour) = total_limit;switch_p2q.up(types, enter_hour, public_hour) = total_limit;free variable total_efficiency;binary variable select_public(public_i), select_quiet(quiet_i);* calculate total number of peoplen_pe_public(types, enter_hour, public_hour) = sum(public_i, 1$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));n_pe_quiet(enter_hour, quiet_hour) = sum(quiet_i, 1$((Quiet(quiet_i,\"enter\") = 7+ord(enter_hour)) and (Quiet(quiet_i,\"hours\") = ord(quiet_hour))));equations conn1 \"connection between public_chair and public_arrange and switch_q2p at every time\" conn2 \"connection between quiet_chair and quiet_arrange and switch_p2q\" objective \"Calculate the total efficiency\" limit \"limitation of total chairs\" people_public \"restriction of # of people in public area\" people_quiet \"restriction of # of people in quiet area\" selection_public \"people selected at public area\" selection_quiet \"people selected at quiet area\" chatting_lower \"Hold constraints for the lower limitation for chatting people\";conn1(o).. sum((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)$visible_public(o, enter_hour, public_hour)) + sum((enter_hour, quiet_hour), switch_q2p(enter_hour, quiet_hour)$visible_quiet(o, enter_hour, quiet_hour)) =l= public_chair;conn2(o).. sum((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)$visible_quiet(o, enter_hour, quiet_hour)) + sum((types, enter_hour, public_hour), switch_p2q(types, enter_hour, public_hour)$visible_public(o, enter_hour, public_hour)) =l= quiet_chair;limit.. total_limit =g= public_chair + quiet_chair;objective.. total_efficiency =e= sum((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)*eff_public(types, public_hour) + switch_p2q(types, enter_hour, public_hour)*eff_public(types, public_hour)*p2q) + sum((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)*eff_quiet(quiet_hour) + switch_q2p(enter_hour, quiet_hour)*eff_quiet(quiet_hour)*q2p);people_public(types, enter_hour, public_hour).. public_arrange(types, enter_hour, public_hour) + switch_p2q(types, enter_hour, public_hour) =l= n_pe_public(types, enter_hour, public_hour);people_quiet(enter_hour, quiet_hour).. quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour) =l= n_pe_quiet(enter_hour, quiet_hour);selection_quiet(enter_hour, quiet_hour).. sum((quiet_i)$(Quiet(quiet_i,\"enter\")=7+ord(enter_hour) and Quiet(quiet_i,\"hours\")=ord(quiet_hour)), select_quiet(quiet_i)) =e= quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour);selection_public(types, enter_hour, public_hour).. sum((public_i)$(Public(public_i,\"type\")=ord(types)-1 and Public(public_i,\"enter\")=7+ord(enter_hour) and Public(public_i,\"hours\")=ord(public_hour)), select_public(public_i)) =e= switch_p2q(types, enter_hour, public_hour) + public_arrange(types, enter_hour, public_hour);chatting_lower.. sum((enter_hour, public_hour), public_arrange(\"2\", enter_hour, public_hour)) =g= chat_low;model simple_obj1 /conn1, conn2, limit, objective, people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;solve simple_obj1 using mip maxmizing total_efficiency;set run /1*2/, room /public, quiet/;parameter selection_quiet_(run, quiet_i), selection_public_(run, public_i), chairs(run, room);selection_public_(\"1\", public_i) = select_public.l(public_i);selection_quiet_(\"1\", quiet_i) = select_quiet.l(quiet_i);chairs(\"1\", \"public\") = public_chair.l; chairs(\"1\", \"quiet\") = quiet_chair.l; Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 9699.148 601 4403 MIP CPLEX 0.038 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788%%gams* increment of scalar for each factorscalar calculator_factor /0.2/, laptop_factor /0.1/, charger_factor /0.3/, calculators /30/, laptops /10/, chargers /10/;* represent the needs of each device at specific time.integer variables ca_need_public(types, enter_hour, public_hour) ca_need_quiet(enter_hour, quiet_hour) ch_need_public(types, enter_hour, public_hour) ch_need_quiet(enter_hour, quiet_hour) lap_need_public(types, enter_hour, public_hour) lap_need_quiet(enter_hour, quiet_hour);ca_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"Calculator\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ca_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"Calculator\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));ch_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"charger\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ch_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"charger\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));lap_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"laptop\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));lap_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"laptop\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));* declaration for split variablesinteger variables ca_need_public_1(types, enter_hour, public_hour) ca_need_quiet_1(enter_hour, quiet_hour) ch_need_public_1(types, enter_hour, public_hour) ch_need_quiet_1(enter_hour, quiet_hour) lap_need_public_1(types, enter_hour, public_hour) lap_need_quiet_1(enter_hour, quiet_hour) ca_need_public_2(types, enter_hour, public_hour) ca_need_quiet_2(enter_hour, quiet_hour) ch_need_public_2(types, enter_hour, public_hour) ch_need_quiet_2(enter_hour, quiet_hour) lap_need_public_2(types, enter_hour, public_hour) lap_need_quiet_2(enter_hour, quiet_hour);* ca_limit : limitation from total avaliable devices or limit concurrently exist object, ca_limit_quiet: limitation from calculator needs baseequation objective_refine, ca_limit_public, ca_limit_quiet, ch_limit_public, ch_limit_quiet, lap_limit_public, lap_limit_quiet, selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet, ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet;* because we are maxmizing efficiency, so we only put calculate people to switch list if quiet_arrange is fullobjective_refine.. total_efficiency =e= sum((types, enter_hour, public_hour), (public_arrange(types, enter_hour, public_hour)+ ca_need_public_1(types, enter_hour, public_hour)*calculator_factor + ch_need_public_1(types, enter_hour, public_hour)*charger_factor + lap_need_public_1(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour) + (switch_p2q(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour)*calculator_factor + ch_need_public_2(types, enter_hour, public_hour)*charger_factor + lap_need_public_2(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)*p2q) + sum((enter_hour, quiet_hour), (quiet_arrange(enter_hour, quiet_hour) + ca_need_quiet_1(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_1(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_1(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour) + (switch_q2p(enter_hour, quiet_hour)+ ca_need_quiet_2(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_2(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_2(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)*q2p);* this series of equations should be =g= because it is permitted that 4 people are permitted to come to the library but the library only have 3 calculators.selection_ca_pub(types, enter_hour, public_hour).. sum((public_i)$(Public(public_i,\"type\")=ord(types)-1 and Public(public_i,\"enter\")=7+ord(enter_hour) and Public(public_i,\"hours\")=ord(public_hour) and Public(public_i,\"Calculator\") = 1), select_public(public_i)) =g= ca_need_public(types, enter_hour, public_hour);selection_ca_quiet(enter_hour, quiet_hour).. sum((quiet_i)$(Quiet(quiet_i,\"enter\")=7+ord(enter_hour) and Quiet(quiet_i,\"hours\")=ord(quiet_hour) and Quiet(quiet_i,\"Calculator\") = 1), select_quiet(quiet_i)) =g= ca_need_quiet(enter_hour, quiet_hour);selection_ch_pub(types, enter_hour, public_hour).. sum((public_i)$(Public(public_i,\"type\")=ord(types)-1 and Public(public_i,\"enter\")=7+ord(enter_hour) and Public(public_i,\"hours\")=ord(public_hour) and Public(public_i,\"charger\") = 1), select_public(public_i)) =g= ch_need_public(types, enter_hour, public_hour);selection_ch_quiet(enter_hour, quiet_hour).. sum((quiet_i)$(Quiet(quiet_i,\"enter\")=7+ord(enter_hour) and Quiet(quiet_i,\"hours\")=ord(quiet_hour) and Quiet(quiet_i,\"charger\") = 1), select_quiet(quiet_i)) =g= ch_need_quiet(enter_hour, quiet_hour);selection_la_pub(types, enter_hour, public_hour).. sum((public_i)$(Public(public_i,\"type\")=ord(types)-1 and Public(public_i,\"enter\")=7+ord(enter_hour) and Public(public_i,\"hours\")=ord(public_hour) and Public(public_i,\"laptop\") = 1), select_public(public_i)) =g= lap_need_public(types, enter_hour, public_hour);selection_la_quiet(enter_hour, quiet_hour).. sum((quiet_i)$(Quiet(quiet_i,\"enter\")=7+ord(enter_hour) and Quiet(quiet_i,\"hours\")=ord(quiet_hour) and Quiet(quiet_i,\"laptop\") = 1), select_quiet(quiet_i)) =g= lap_need_quiet(enter_hour, quiet_hour); ca_limit(o).. sum((types, enter_hour, public_hour), ca_need_public(types, enter_hour, public_hour)$visible_public(o, enter_hour, public_hour)) + sum((enter_hour, quiet_hour), ca_need_quiet(enter_hour, quiet_hour)$visible_quiet(o, enter_hour, quiet_hour)) =l= calculators;ch_limit(o).. sum((types, enter_hour, public_hour), ch_need_public(types, enter_hour, public_hour)$visible_public(o, enter_hour, public_hour)) + sum((enter_hour, quiet_hour), ch_need_quiet(enter_hour, quiet_hour)$visible_quiet(o, enter_hour, quiet_hour)) =l= chargers; la_limit(o).. sum((types, enter_hour, public_hour), lap_need_public(types, enter_hour, public_hour)$visible_public(o, enter_hour, public_hour)) + sum((enter_hour, quiet_hour), lap_need_quiet(enter_hour, quiet_hour)$visible_quiet(o, enter_hour, quiet_hour)) =l= laptops;split_ca_pub(types, enter_hour, public_hour).. ca_need_public(types, enter_hour, public_hour) =e= ca_need_public_1(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour);split_ca_quiet(enter_hour, quiet_hour).. ca_need_quiet(enter_hour, quiet_hour) =e= ca_need_quiet_1(enter_hour, quiet_hour) + ca_need_quiet_2(enter_hour, quiet_hour);split_ch_pub(types, enter_hour, public_hour).. ch_need_public(types, enter_hour, public_hour) =e= ch_need_public_1(types, enter_hour, public_hour) + ch_need_public_2(types, enter_hour, public_hour);split_ch_quiet(enter_hour, quiet_hour).. ch_need_quiet(enter_hour, quiet_hour) =e= ch_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_2(enter_hour, quiet_hour);split_la_pub(types, enter_hour, public_hour).. lap_need_public(types, enter_hour, public_hour) =e= lap_need_public_1(types, enter_hour, public_hour) + lap_need_public_2(types, enter_hour, public_hour);split_la_quiet(enter_hour, quiet_hour).. lap_need_quiet(enter_hour, quiet_hour) =e= lap_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_2(enter_hour, quiet_hour);split_limit_pub(types, enter_hour, public_hour).. ca_need_public_1(types, enter_hour, public_hour) + ch_need_public_1(types, enter_hour, public_hour) + lap_need_public_1(types, enter_hour, public_hour) =l= public_arrange(types, enter_hour, public_hour);split_limit_quiet(enter_hour, quiet_hour).. ca_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_1(enter_hour, quiet_hour) =l= quiet_arrange(enter_hour, quiet_hour);model simple_obj2 /conn1, conn2, limit, objective_refine, selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet, ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet, people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;solve simple_obj2 using mip maxmizing total_efficiency;* save result in parameterselection_public_(\"2\", public_i) = select_public.l(public_i);selection_quiet_(\"2\", quiet_i) = select_quiet.l(quiet_i);chairs(\"2\", \"public\") = public_chair.l; chairs(\"2\", \"quiet\") = quiet_chair.l; Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 9830.486 2642 6977 MIP CPLEX 0.067 Plot result at area below: 12345678910111213141516%gams_pull -d chairs selection_public_ selection_quiet_display(chairs)chairs.set_index(['run'],inplace=True)fig,(ax0,ax1) = plt.subplots(ncols=2,figsize=(14,5))val=chairs.value.unique()print(val)labels=['public', 'quiet']chairs.loc[\"1\"].pivot_table(index=['room'],values=['value']).plot.pie(labels=labels,ax=ax1,y='value',legend=False)ax0.pie(val,autopct='%1.2f',labels=labels)ax0.set_ylabel('')ax0.set_title('The number of students without calculation of equipments');chairs.loc[\"2\"].pivot_table(index=['room'],values=['value']).plot.pie(labels=labels,ax=ax1,y='value',legend=False)ax1.pie(val,autopct='%1.2f')ax1.set_ylabel('')ax1.set_title('The number of students with calculation of equipments');display(selection_public_, selection_quiet_) run room value 0 1 public 321.0 1 1 quiet 679.0 2 2 public 321.0 3 2 quiet 679.0 run public_i value 0 1 1 1.0 1 1 2 1.0 2 1 3 1.0 3 1 4 1.0 4 1 5 1.0 ... ... ... ... 2787 2 1922 1.0 2788 2 1923 1.0 2789 2 1924 1.0 2790 2 1925 1.0 2791 2 1926 1.0 2792 rows × 3 columns run quiet_i value 0 1 1 1.0 1 1 2 1.0 2 1 3 1.0 3 1 4 1.0 4 1 5 1.0 ... ... ... ... 3597 2 1898 1.0 3598 2 1899 1.0 3599 2 1900 1.0 3600 2 1901 1.0 3601 2 1902 1.0 3602 rows × 3 columns 123456789101112%%gamstotal_limit = 50;solve simple_obj1 using mip maxmizing total_efficiency;selection_public_(\"1\", public_i) = select_public.l(public_i);selection_quiet_(\"1\", quiet_i) = select_quiet.l(quiet_i);chairs(\"1\", \"public\") = public_chair.l; chairs(\"1\", \"quiet\") = quiet_chair.l;solve simple_obj2 using mip maxmizing total_efficiency;selection_public_(\"2\", public_i) = select_public.l(public_i);selection_quiet_(\"2\", quiet_i) = select_quiet.l(quiet_i);chairs(\"2\", \"public\") = public_chair.l; chairs(\"2\", \"quiet\") = quiet_chair.l; Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 704.900 601 4403 MIP CPLEX 0.019 1 Normal (1) Optimal Global (1) 791.634 2642 6977 MIP CPLEX 0.086 12345678910111213141516%gams_pull -d chairs#chairs.set_index(['run'],inplace=True)display(chairs)fig,(ax0,ax1) = plt.subplots(ncols=2,figsize=(14,5))val=chairs.loc[chairs.run == \"2\"].valuevals=chairs.loc[chairs.run == \"1\"].valuelabels=['public', 'quiet']ax0.set_title('The number of students without calculation of equipments');ax0.pie(vals,autopct='%1.2f')chairs.loc[chairs.run == \"2\"].pivot_table(index=['room'],values=['value']).plot.pie(labels=labels,ax=ax1,y='value',legend=False)chairs.loc[chairs.run == \"1\"].pivot_table(index=['room'],values=['value']).plot.pie(labels=labels,ax=ax1,y='value',legend=False)ax1.pie(val,autopct='%1.2f')ax1.set_ylabel('')ax1.set_title('The number of students with calculation of equipments'); run room value 0 1 public 50.0 1 2 public 25.0 2 2 quiet 25.0 Conclusion for this part: Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen. For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it. Objective2: More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library. 123456789101112131415161718192021222324%%gamstotal_limit = 1000;set obj2 \"1:free 2:middle 3:busy\" /1*3/;parameter problem2(obj2, room), selection_problem2_quiet(obj2,quiet_i), selection_problem2_public(obj2,public_i);$onMultiR$gdxin data-free.gdx$load public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public$load quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;$gdxinn_pe_public(types, enter_hour, public_hour) = sum(public_i, 1$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));n_pe_quiet(enter_hour, quiet_hour) = sum(quiet_i, 1$((Quiet(quiet_i,\"enter\") = 7+ord(enter_hour)) and (Quiet(quiet_i,\"hours\") = ord(quiet_hour))));ca_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"Calculator\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ca_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"Calculator\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));ch_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"charger\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ch_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"charger\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));lap_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"laptop\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));lap_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"laptop\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));solve simple_obj2 using mip maxmizing total_efficiency;problem2(\"1\", \"public\") = public_chair.l; problem2(\"1\", \"quiet\") = quiet_chair.l;selection_problem2_quiet(\"1\", quiet_i) = select_quiet.l(quiet_i);selection_problem2_public(\"1\", public_i) = select_public.l(public_i); Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 6809.384 2642 5873 MIP CPLEX 0.05 123456789101112131415161718192021%%gamstotal_limit = 1000;$onMultiR$gdxin data-middle.gdx$load public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public$load quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;$gdxinn_pe_public(types, enter_hour, public_hour) = sum(public_i, 1$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));n_pe_quiet(enter_hour, quiet_hour) = sum(quiet_i, 1$((Quiet(quiet_i,\"enter\") = 7+ord(enter_hour)) and (Quiet(quiet_i,\"hours\") = ord(quiet_hour))));ca_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"Calculator\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ca_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"Calculator\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));ch_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"charger\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ch_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"charger\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));lap_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"laptop\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));lap_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"laptop\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));solve simple_obj2 using mip maxmizing total_efficiency;problem2(\"2\", \"public\") = public_chair.l; problem2(\"2\", \"quiet\") = quiet_chair.l;selection_problem2_quiet(\"2\", quiet_i) = select_quiet.l(quiet_i);selection_problem2_public(\"2\", public_i) = select_public.l(public_i); Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 8038.18 2642 6342 MIP CPLEX 0.056 123456789101112131415161718192021%%gamstotal_limit = 1000;$onMultiR$gdxin data-busy.gdx$load public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public$load quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;$gdxinn_pe_public(types, enter_hour, public_hour) = sum(public_i, 1$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));n_pe_quiet(enter_hour, quiet_hour) = sum(quiet_i, 1$((Quiet(quiet_i,\"enter\") = 7+ord(enter_hour)) and (Quiet(quiet_i,\"hours\") = ord(quiet_hour))));ca_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"Calculator\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ca_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"Calculator\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));ch_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"charger\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));ch_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"charger\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));lap_need_public.up(types, enter_hour, public_hour) = sum(public_i, Public(public_i,\"laptop\")$(Public(public_i,\"enter\") = 7+ord(enter_hour) and Public(public_i,\"hours\") = ord(public_hour) and Public(public_i,\"type\") = ord(types)-1));lap_need_quiet.up(enter_hour, quiet_hour) = sum(quiet_i, Quiet(quiet_i,\"laptop\")$(Quiet(quiet_i,\"enter\") = 7+ord(enter_hour) and Quiet(quiet_i,\"hours\") = ord(quiet_hour)));solve simple_obj2 using mip maxmizing total_efficiency;problem2(\"3\", \"public\") = public_chair.l; problem2(\"3\", \"quiet\") = quiet_chair.l;selection_problem2_quiet(\"3\", quiet_i) = select_quiet.l(quiet_i);selection_problem2_public(\"3\", public_i) = select_public.l(public_i); Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 9830.486 2642 6977 MIP CPLEX 0.066 Plot result at area below: 123456789101112131415161718%gams_pull -d problem2 selection_problem2_quiet selection_problem2_publicimport numpy as npdisplay(selection_problem2_quiet, selection_problem2_public);display(problem2)data = np.array(problem2.loc[problem2.room==\"public\"]).tolist()public = list()for i in data: public.append(i[2]);data = np.array(problem2.loc[problem2.room==\"quiet\"]).tolist()quiet = list()for i in data: quiet.append(i[2]);x = [\"free\", \"middle\", \"bussy\"]plt.plot(x, public, marker='o', mec='r', mfc='w',label=\"public\")plt.plot(x, quiet, marker='*', ms=10,label=\"quiet\")plt.legend() plt.title(\"Seat arrangement for different time\") plt.show() obj2 quiet_i value 0 1 1 1.0 1 1 2 1.0 2 1 3 1.0 3 1 4 1.0 4 1 5 1.0 ... ... ... ... 4620 3 1898 1.0 4621 3 1899 1.0 4622 3 1900 1.0 4623 3 1901 1.0 4624 3 1902 1.0 4625 rows × 3 columns obj2 public_i value 0 1 1 1.0 1 1 2 1.0 2 1 3 1.0 3 1 4 1.0 4 1 5 1.0 ... ... ... ... 4603 3 1922 1.0 4604 3 1923 1.0 4605 3 1924 1.0 4606 3 1925 1.0 4607 3 1926 1.0 4608 rows × 3 columns obj2 room value 0 1 public 556.0 1 1 quiet 444.0 2 2 public 453.0 3 2 quiet 547.0 4 3 public 321.0 5 3 quiet 679.0 Conclusion for this part: As we mentioned in the problem, we provided the permission in each case. But it is not useful. By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period. Objective3: Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason. 12345678%%gamsset limits /1*200/;parameter n_result(limits);loop(limits, total_limit = ord(limits)*10; solve simple_obj2 using mip maxmizing total_efficiency; n_result(limits) = total_efficiency.l;); Solver Status Model Status Objective #equ #var Model Type Solver Solver Time 0 Normal (1) Optimal Global (1) 165.596 2642 6977 MIP CPLEX 0.11 1 Normal (1) Optimal Global (1) 331.180 2642 6977 MIP CPLEX 0.089 2 Normal (1) Optimal Global (1) 488.794 2642 6977 MIP CPLEX 0.084 3 Normal (1) Optimal Global (1) 642.634 2642 6977 MIP CPLEX 0.085 4 Normal (1) Optimal Global (1) 791.634 2642 6977 MIP CPLEX 0.085 ... ... ... ... ... ... ... ... ... 195 Normal (1) Optimal Global (1) 10790.158 2642 6977 MIP CPLEX 0.055 196 Normal (1) Optimal Global (1) 10790.158 2642 6977 MIP CPLEX 0.054 197 Normal (1) Optimal Global (1) 10790.158 2642 6977 MIP CPLEX 0.055 198 Normal (1) Optimal Global (1) 10790.158 2642 6977 MIP CPLEX 0.054 199 Normal (1) Optimal Global (1) 10790.158 2642 6977 MIP CPLEX 0.051 200 rows × 8 columns Plot result area: 12345678%gams_pull -d n_resultimport pandas as pdax = plt.gca()n_result.set_index(['value'],inplace=True)for i in n_result[\"limits\"]: n_result.replace(to_replace = i, value = int(i)*10, inplace=True) n_result.reset_index(inplace=True)n_result.plot(kind='line',x='limits',y='value',ax=ax) Conclusion for this part As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study. Conclusion for this project: In this project, we learned how to use gams and solve a near real case problem. We observe an optimized seat arrangement for library to use. We also see the difference between different time in one semester and the result could be used to guide seat arrangements. At last, we see that 1000 seats might be too small for this library and they need to buy more. We spent a lot of time on this project and we learned a lot from it. We also observe that gams system is pretty simple and efficient compared to other language. In the future, we would like to use it for more times on optimization problem.","categories":[{"name":"optimization","slug":"optimization","permalink":"https://shaokang.ga/categories/optimization/"}],"tags":[{"name":"GAMS","slug":"GAMS","permalink":"https://shaokang.ga/tags/GAMS/"},{"name":"MIP","slug":"MIP","permalink":"https://shaokang.ga/tags/MIP/"},{"name":"CPLEX","slug":"CPLEX","permalink":"https://shaokang.ga/tags/CPLEX/"}]},{"title":"Common error while running EOSIO","slug":"common-run-eosio","date":"2019-06-16T01:53:10.000Z","updated":"2019-11-26T00:33:42.403Z","comments":true,"path":"2019/common-run-eosio/","link":"","permalink":"https://shaokang.ga/2019/common-run-eosio/","excerpt":"Common error and solution during running and building connections between EOSIO components: Error 3050000: Action validate exception Error Details: inline action’s authorizing actor eosio.ram does not exist Solution: Make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts. Otherwise this error will show up when creating block producer or voter.","text":"Common error and solution during running and building connections between EOSIO components: Error 3050000: Action validate exception Error Details: inline action’s authorizing actor eosio.ram does not exist Solution: Make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts. Otherwise this error will show up when creating block producer or voter. For more details, see here or here. Error 3080001: Account using more than allotted RAM usage Error Details: account eosio.ram has insufficient ram; needs 2996 bytes has 0 bytes Solution: Basically, this error happens when some account has insufficient ram. It depends on the account type you are creating. If the account is eosio.***, then it is a system account. If this happens, then make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts. If the account is an arbitrary name, then it is a user account(producer/worker). If this is the case, the common error is using wrong command to create new account. For account other than system account, it seems it is required to use cleos system newaccount [OPTIONS] creator name OwnerKey [ActiveKey]. Error 3120003: Locked wallet Ensure that your wallet is unlocked before using it! Error Details: You don’t have any unlocked wallet! Solution: The wallet need to be unlocked before experiment. Error 3050001: Account name already exists Error Details: Cannot create account named bp1111111111, as that name is already taken Solution: Use another name. Error 3050003: eosio_assert_message assertion failure Error Details: assertion failure with message: cannot use transfer flag if delegating to self Solution: It seems --transfer tag for self transfer is for some old version of EOSIO. Remove it if error happens. Though the error happens, the command still get executed sometime. assertion failure with message: system contract must first be initialized Solution: Make sure eosio.msig is a privileged account and Initialize system account. To do those: 123cleos push action eosio setpriv '[\"eosio.msig\", 1]' -p eosio@activecleos push action eosio init '[\"0\", \"4,SYS\"]' -p eosio@active Not producing block because I don’t have the private key for EOS5ks6trFhN8xz5mxaDAwQy7qJdjHhNwQbLca6wkYuRKwvGDUAPG Solution: This message happens when running the very first node in the network, who will produce the genesis block. Make sure the EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh is the same as the EOS_PUB_DEV_KEY in genesis.json. And EOS_PRIV_DEV_KEY is the private key of this public key. For those two files. genesis_start.sh is a file contain the information for the genesis block. genesis_start.sh is a file to start the very first node in the network. For more details, see here.","categories":[{"name":"Cryptocurrency Application","slug":"Cryptocurrency-Application","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/"},{"name":"EOSIO","slug":"Cryptocurrency-Application/EOSIO","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/EOSIO/"}],"tags":[{"name":"eos","slug":"eos","permalink":"https://shaokang.ga/tags/eos/"},{"name":"eosio.contracts","slug":"eosio-contracts","permalink":"https://shaokang.ga/tags/eosio-contracts/"},{"name":"eos.cdt","slug":"eos-cdt","permalink":"https://shaokang.ga/tags/eos-cdt/"}]},{"title":"Hexo Notes","slug":"Hexo-Notes","date":"2019-06-16T01:37:40.000Z","updated":"2020-05-04T19:24:16.700Z","comments":true,"path":"2019/Hexo-Notes/","link":"","permalink":"https://shaokang.ga/2019/Hexo-Notes/","excerpt":"","text":"Some notes for Hexo HEXO is always case sensitive whiling redirecting pages and setting up file properties(yaml). Hexo is not good for converting table to html format. The solution is to use html format table directly. Yaml format space in the fron is two spaces instead of a tab or 4 spaces, they won’t work: e.g. 123categories: - website - Hexo","categories":[{"name":"website","slug":"website","permalink":"https://shaokang.ga/categories/website/"},{"name":"Hexo","slug":"website/Hexo","permalink":"https://shaokang.ga/categories/website/Hexo/"}],"tags":[{"name":"Notes","slug":"Notes","permalink":"https://shaokang.ga/tags/Notes/"}]},{"title":"Common error while building EOSIO","slug":"common-build-eosio","date":"2019-06-16T01:32:44.000Z","updated":"2019-06-19T06:52:25.887Z","comments":true,"path":"2019/common-build-eosio/","link":"","permalink":"https://shaokang.ga/2019/common-build-eosio/","excerpt":"Common error and solution during compiling EOSIO components: Doesn’t have boost or boost library is lower than required. Solution: It seems the latest version of boost is not in the ubuntu package management right now. I compiled and installed it from source to solve this issue. I installed version 1.67. But the minimum version it requires is 1.57 (I remember). 123wget -O boost_1_67_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.67.0/boost_1_67_0.tar.gz/downloadtar xzvf boost_1_67_0.tar.gzcd boost_1_67_0/","text":"Common error and solution during compiling EOSIO components: Doesn’t have boost or boost library is lower than required. Solution: It seems the latest version of boost is not in the ubuntu package management right now. I compiled and installed it from source to solve this issue. I installed version 1.67. But the minimum version it requires is 1.57 (I remember). 123wget -O boost_1_67_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.67.0/boost_1_67_0.tar.gz/downloadtar xzvf boost_1_67_0.tar.gzcd boost_1_67_0/ Then, get the required libraries and setup. The one required at here is icu for boost::regex. But I installed all of them in case they will be needed in some other places. 12sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev libboost-all-dev./bootstrap.sh --prefix=/usr/ Then, build it and install it: 12./b2 # Build itsudo ./b2 install # install it Add the installation prefix of “eosio” to CMAKE_PREFIX_PATH or set “eosio_DIR” to a directory containing one of the above files. If “eosio” provides a separate development package or SDK, be sure it has been installed. Solution: Error happens while compiling EOSIO.contracts. Be sure EOS is compiled and installed from source instead of ubuntu package. If the EOS is compiled and installed from source. You could find the place for this Cmake file easily. 123cd EOS_BUILD_PATH # EOS_BUILD_PATH is the directory EOS was cloned to.find . -name \"eosio-config.cmake\"export eosio_DIR=\"PATH_FOUND\" # PATH_FOUND is the path found up by the previous command The path is usually at EOS_BUILD_PATH/build/lib/cmake/eosio/. And it is good to use absolute directory. And then, do ./build.sh again. Doesn’t have llvm or doesn’t have required version of llvm while building eosio.cdt. Solution: llvm package is from another repository. So, add --recursive while git clone. Did install EOS by using the default installing shell but can not start the program by simply run nodeos from terminal. Solution: I find this happens on ubuntu 18.04. Use the absolute path to start server instead. Usually, the nodeos program is at EOSIO_BUILD_PATH/build/bin/nodeos.","categories":[{"name":"Cryptocurrency Application","slug":"Cryptocurrency-Application","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/"},{"name":"EOSIO","slug":"Cryptocurrency-Application/EOSIO","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/EOSIO/"}],"tags":[{"name":"eos","slug":"eos","permalink":"https://shaokang.ga/tags/eos/"},{"name":"eosio.contracts","slug":"eosio-contracts","permalink":"https://shaokang.ga/tags/eosio-contracts/"},{"name":"eos.cdt","slug":"eos-cdt","permalink":"https://shaokang.ga/tags/eos-cdt/"}]},{"title":"Build Bitcoin local network","slug":"Bitcoin_local_network","date":"2019-06-14T01:44:59.000Z","updated":"2019-06-19T06:50:21.918Z","comments":true,"path":"2019/Bitcoin_local_network/","link":"","permalink":"https://shaokang.ga/2019/Bitcoin_local_network/","excerpt":"Some experience on building Bitcoin local network Basic info Bitcoin is an client based on proof of work(POW). Bitcoin core is a client of official bitcoin network. After some tests, I find the local network for bitcoin is good for testing wallet application but hard for testing mining function. In this page, I am going to discuss some experience of mine on building the local test environment for bitcoin core. Compile &amp; Installation","text":"Some experience on building Bitcoin local network Basic info Bitcoin is an client based on proof of work(POW). Bitcoin core is a client of official bitcoin network. After some tests, I find the local network for bitcoin is good for testing wallet application but hard for testing mining function. In this page, I am going to discuss some experience of mine on building the local test environment for bitcoin core. Compile &amp; Installation For ubuntu, just do: 1234567sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev libqrencode-dev git clone https://github.com/bitcoin/bitcoin.gitcd bitcoin./autogen.sh./configuremakemake install # optional For other system, official has a page at here described how to build and install. Bitcoin core contains three different networks, mainnet, regtest and testnet. The difference of those three networks are as follows: Mainnet The original and main network for Bitcoin transactions, where satoshis have real economic value. As we could see above, mainnet is the main network of bitcoin core. It has the real economic value, which means it has lots of restriction. And it make me hard to implement it locally. On the main net, I tried lots of different ways, including connect it with a virtual network, do not connect with network and change some source code. But none of them successfully build a local network. To start a node under main net, just do: (The default port is 8444/8443) 1bitcoind To use rpc to communicate, do the following: (datadir should exist at first) 1bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=$HOME/A/ -pid=$HOME/A/.pid -debug -daemon #-daemon for running in background -debug to get detailed output In some old version, password and username can not be the same. To connect to a specific node, use -connect tag. 1bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -connect=127.0.0.1:17592 -datadir=$HOME/A/ -pid=$HOME/A/.pid -debug -daemon -reindex-chainstate(Rebuild chain state from the currently indexed blocks ) and -reindex(Rebuild chain state and block index from the blk*.dat files on disk ) might be helpful some time. If need them, just add them to the end of the startup code Use the following code to start 5 nodes and connect them together under main net: 123456#!/bin/bashbitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=$HOME/test/A/ -connect=127.0.0.1:17592 -pid=$HOME/test/A/.pid -debugbitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=$HOME/test/B/ -connect=127.0.0.1:17591 -pid=$HOME/test/B/.pid -debugbitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=$HOME/test/C/ -connect=127.0.0.1:17591 -pid=$HOME/test/C/.pid -debugbitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=$HOME/test/D/ -connect=127.0.0.1:17591 -pid=$HOME/test/D/.pid -debugbitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=$HOME/test/E/ -connect=127.0.0.1:17591 -pid=$HOME/test/E/.pid -debug Those data dir should exist. To check them: 123456789#!/bin/bashDATADIR=\"~/test/\"for i in A B C D Edoif [ ! -d $DATADIR$i ]; then mkdir -p $DATADIR$i;fidone If you want to restart a new test or changed the version of bitcoind running on the machine(from high version to low version). You have to delete the datadir: 123456789#!/bin/bashDATADIR=\"~/test/\"for i in A B C D Edoif [ -d $DATADIR$i ]; then rm -rf $DATADIR$i;fidone To get info from any node by using rpc command: 1bitcoin-cli -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on Bitcoin Core 0.17.0 RPC bitcoin-cli is just a communication tool. So, you could use the same command to communicate with different nodes in different model(mainnet, testnet, regtest). Moreover, you could also use it to communicate with other project’s node forked from bitcoind, like litecoind. Regtest A local testing environment in which developers can almost instantly generate blocks on demand for testing events, and can create private satoshis with no real-world value. generate blocks on demand means it is not real case. It is fake mining. An easy example is it produce block quick and producer doesn’t get award they should have. Another example is the normal case should have nonce 0-0xfffff. But it only have nonce 0-4 for every block. So, it is a good tool to test transaction and wallet application locally. To start a node under regtest, just do: (The default port is 18444/18443) 1bitcoind -regtest The other commands like whatever at the first part of main net. Just add the -regtest tag to the program. Use the following code to start 5 nodes and connect them together under regtest: 123456#!/bin/bashbitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=$HOME/test/A/ -regtest -connect=127.0.0.1:17592 -pid=$HOME/test/A/.pid -debugbitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=$HOME/test/B/ -regtest -connect=127.0.0.1:17591 -pid=$HOME/test/B/.pid -debugbitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=$HOME/test/C/ -regtest -connect=127.0.0.1:17591 -pid=$HOME/test/C/.pid -debugbitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=$HOME/test/D/ -regtest -connect=127.0.0.1:17591 -pid=$HOME/test/D/.pid -debugbitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=$HOME/test/E/ -regtest -connect=127.0.0.1:17591 -pid=$HOME/test/E/.pid -debug Those data dir should exist. See the former part for the way to do those procedure Though it is possible to use command represented before, the official recommend to use this one: 1bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on Bitcoin Core 0.17.0 RPC Testnet A global testing environment in which developers can obtain and spend satoshis that have no real-world value on a network that is very similar to the Bitcoin mainnet. very similar means it is likely to be the same as the main net. no real-world value means you could get some points free online. By comparing with mainnet, it seems there is restriction on the height on the testnet, which means difficulty has restriction. Right now, it is at the version 3. Its version could be changed by developer, but it is hardcoded. Difficulty does change when the height being higher and higher. And most things are similar to mainnet. It also has the same restrictions as the main net. So, testnet is best for testing transaction application and wallet application. To start a node under testnet, just do: (The default port is 18444/18443) 1bitcoind -testnet The other commands like whatever at the first part of main net. Just add the -testnet tag to the program. Use the following code to start 5 nodes and connect them together under testnet: 123456#!/bin/bashbitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=$HOME/test/A/ -testnet -connect=127.0.0.1:17592 -pid=$HOME/test/A/.pid -debugbitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=$HOME/test/B/ -testnet -connect=127.0.0.1:17591 -pid=$HOME/test/B/.pid -debugbitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=$HOME/test/C/ -testnet -connect=127.0.0.1:17591 -pid=$HOME/test/C/.pid -debugbitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=$HOME/test/D/ -testnet -connect=127.0.0.1:17591 -pid=$HOME/test/D/.pid -debugbitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=$HOME/test/E/ -testnet -connect=127.0.0.1:17591 -pid=$HOME/test/E/.pid -debug Those data dir should exist. See the former part for the way to do those procedure Though it is possible to use command represented before, the official recommend to use this one: 1bitcoin-cli -testnet -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on Bitcoin Core 0.17.0 RPC Version difference The bubble is the separator of different version. Litecoind is forked out from bitcoind since 0.16.3. The methods talked above, getblocktemplate, is only for mainnet or testnet. For the regtest net, there is only one method, generate or generatetoaddress. 0.17.9 remove wallet functions like listaccounts. It also remove generate function. To confirm a block on regtest, use generatetoaddress instead. To connect nodes This graph is the basic way to connect nodes. The miner is always separate with the main net. Loop connection is permitted but not required. In order to start using mining feature(getblocktemplate). Be sure to have at least two nodes connected. Actually, there are more restriction than this. To confirm a block Bitcoin core full node is the client start by bitcoind by using command in the previous section. Above is the basic structure for mining(confirm a block). If no other things happen, one block will be completely confirmed 100 blocks later. The confirm interval is 100 blocks. Getblocktemplate is a method which will return the following structure as a return result as a json for the miner to use, which contains information miner need. The structure looks like this: 12345678910111213141516171819&#123; \"result\":&#123; \"capabilities\":[\"proposal\"], ... \"previousblockhash\":\"756c7b16ef069c782fe6faf9e393483821261206fe110d409c11fbc4a0b927b0\", \"transactions\":[], 'Transactions information could be used for next block' \"coinbaseaux\":&#123;\"flags\":\"\"&#125;, 'miner will use this and the nest value to build coinbase' \"coinbasevalue\":5000000000, 'bonus people have' \"longpollid\":\"756c7b16ef069c782fe6faf9e393...06fe110d409c11fbc4a0b927b02\", 'bitcoind technique' \"target\":\"7fffff0000000000000000000000000000000000000000000000000000000000\", \"mintime\":1550614864, \"noncerange\":\"00000000ffffffff\", ... \"bits\":\"207fffff\", \"height\":4, ... &#125;, ...&#125; After version 0.17.9. You have to attach the argument segwit in order to get a return. Their official said this is safer. In order to attach argument, it is recommend to use curl: 1curl --user 123 --data-binary '&#123;\"id\": 1, \"method\": \"getblocktemplate\", \"params\": [&#123;\"rules\": [\"segwit\"], \"capabilities\": [\"coinbasetxn\", \"workid\", \"coinbase/append\"]&#125;]&#125;' -H 'content-type: text/plain;' http://127.0.0.1:16592/ Miners are softwares used for mining If you are using Miner software, then you don’t have to understand what getblocktemplate get. Miner software will handle them. But you have to make sure the Getblocktemplate method is working and coinbasevalue exist and it is not 0. To make the coinbasevalue exist and it is not 0, it might be helpful to make sure libblkmakercompile successfully. Because there is some library dependence required. And Getblocktemplate never tell you what is the dependence and the main bitcoin core could compile without it. Maybe there are some better ways. But I fix every dependences by compile libblkmaker. I think it is because they use the same dependence at somewhere. But some people also say bitcoin’s getblocktemplate relay on libblkmaker. There are two official recommend and commonly used miner. BFGMiner and Cgminer. To start solo mining by using BFGMiner: 1./bfgminer -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to \"PUBLIC_ADDRESS\" --coinbase-sig \"rig1: This is Joe's block!\" --net-delay –coinbase-sig is for comments, it is not required –net-delay is to make it don’t communicate with server too frequently. You could use -S to specify hardware you want to use: 1bfgminer -S opencl:auto -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to \"PUBLIC_ADDRESS\" To start solo mining by using Cgminer: 1cgminer -o http://localhost:8332 -u username -p password --btc-address PUBLIC_ADDRESS This is from the official website, I did’t test it. It requires to use FPGA and ASIC miner. If you want to build a miner from scratch, official do provide some instructions at their website Actually, if you just want to build a miner application, most of people choose to make their application based on the libblkmaker official provided. Special note In order to simulate a real network case that lots of transaction happens every second, you could use the following code: 123456#!/bin/bashfor i in $(seq 1 1000)do bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 sendtoaddress \"PUBLIC_ADDRESS\" 0.0001 sleep 2done Build Path should be correct. If you change the path of compiled file, you have to reconfigure and recompile before install or do other implementation. Bitcoind is not friendly for mining locally For mainnet and testnet, they set up some restriction. So getblocktemplate never works. The coding for getblocktemplate is in mining.cpp Maybe I need to look through source in order to check where is the real restriction. But I guess they setup multiple restrictions. One I found is at chainparams.cpp. It is also a direction to try to delete as many information as it could to see if it works. In bitcoind, Genesis block and its information, including time interval, is hard coded, even for genesis block. Bitcoid is easy to compile. But it will occupy 3GB space on disk after compilation. And it takes around an hour to compile. To compile it, their official website described it clearly.","categories":[{"name":"Cryptocurrency Application","slug":"Cryptocurrency-Application","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/"},{"name":"Bitcoin","slug":"Cryptocurrency-Application/Bitcoin","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/Bitcoin/"}],"tags":[{"name":"Bitcoin","slug":"Bitcoin","permalink":"https://shaokang.ga/tags/Bitcoin/"}]},{"title":"Build EOSIO local network","slug":"EOSIO_local_network","date":"2019-06-14T01:44:59.000Z","updated":"2019-11-26T00:34:58.062Z","comments":true,"path":"2019/EOSIO_local_network/","link":"","permalink":"https://shaokang.ga/2019/EOSIO_local_network/","excerpt":"Some experience on building EOSIO local network Basic info EOSIO is an application based on proof of stake. I am going to discuss my experience on setting up the local test environment for EOSIO. The test version for EOS is 1.7 and test environment is Ubuntu 18.04. The whole system is made up of three components in order to build local environment: EOS - Main net. Basic communication EOS.CDT - Developer package. API for application EOS.CONTRACT - super user account setup. It store information about different user and send call to system, like create an voter account. Following is the basic network structure of EOSIO","text":"Some experience on building EOSIO local network Basic info EOSIO is an application based on proof of stake. I am going to discuss my experience on setting up the local test environment for EOSIO. The test version for EOS is 1.7 and test environment is Ubuntu 18.04. The whole system is made up of three components in order to build local environment: EOS - Main net. Basic communication EOS.CDT - Developer package. API for application EOS.CONTRACT - super user account setup. It store information about different user and send call to system, like create an voter account. Following is the basic network structure of EOSIO Only one super account. It produces blocks based on gensis.json. It can also interact with system to create accounts, register producers. Multiple(21) block generators. They will produce(confirm) block once get enough vote Voter. It could vote producer. gensis.json is a json file contains the information for the system to produce gensis block. Its structure is as follows: 1234567891011121314151617&#123; \"initial_timestamp\": \"2018-12-05T08:55:11.000\", \"initial_key\": \"EOS_PUB_DEV_KEY\", 'Only the super account who has the private key relate to this key can produce block' \"initial_configuration\": &#123; ... \"target_block_cpu_usage_pct\": 500, 'It doesn't like bitcoind, you could set up everything of the genesis block by yourself.' \"max_transaction_cpu_usage\": 50000, \"min_transaction_cpu_usage\": 100, \"max_transaction_lifetime\": 3600, \"deferred_trx_expiration_window\": 600, \"max_transaction_delay\": 3888000, \"max_inline_action_size\": 4096, \"max_inline_action_depth\": 4, \"max_authority_depth\": 6 &#125;, \"initial_chain_id\": \"0000000000000000000000000000000000000000000000000000000000000000\"&#125; For most things in the file is easy to understand. The server is clever, for the string in the json, the server will choose characters he thought it is correct. Confound server thought will be ignored. Build &amp; install In order to setup a local test environment, EOS.CDT and EOS.CONTRACT have to be compiled on the local machine. Official said EOS is not required to compile locally. But during my test and some hint from EOS.CONTRACT. It seems it is required. Original official words as follows: First, ensure that your eosio is compiled to the core symbol for the EOSIO blockchain that intend to deploy to. Second, make sure that you have sudo make installed eosio. Then just run the build.sh in the top directory to build all the contracts and the unit tests for these contracts. Before compile and run those stuff, make sure the computer has at least 40GB in your home directory and 8GB of memory. To compile EOS locally, do the following: 123git clone https://github.com/EOSIO/eos --recursivecd eos/./scripts/eosio_build.sh It is also required to install this one into root. The build script is at scripts directory right now. And it may take up to 3 hours to build. It could be faster if you are using a multi-core computer. It is also recommended to install it. So that it will be easier to use in the future. Just do ./scripts/eosio_install.sh. During my test on ubuntu 18.04. The script installed successfully. But I can not run it in the shell. Then build eosio.cdt. 1234git clone --recursive https://github.com/eosio/eosio.cdtcd eosio.cdt./build.shsudo ./install.sh There should exist at least 10GB to compile this one. Then build eosio.contracts. 123git clone https://github.com/EOSIO/eosio.contracts.gitcd eosio.contracts/./build.sh The building process of eosio.cdt and eosio.contracts is nothing special but time consuming. It might take up to 2 hours to build. And it is impossible to build using multiple cores. Some common error and solutions could be found at here. Initialize You need to have an wallet in order to get start. You will have one by doing the following: 1cleos wallet create --to-console There is no way to recover password, do remember it. When you have the password, you could play with cleos. You could use the following command to see full list of subcommand. 1cleos wallet help Some useful subcommands are open, unlock, create_key, private_keys. Whenever you want to visit sensitive data, you need to provide the password. To prevent prompted by system, you could use --password to pass in your password. Typically, you need to open wallet at first and then unlock to interact with wallet. After all interactions, it is good to lock them. Batch initialize The following are scripts might be helpful to initialize for the appropriate data folder and public key-private key pair for multiple(21) nodes. To use it, you have to pass in the password as the first attribute 12345678910111213141516171819202122232425262728cleos wallet openif [ $1 ]; thenDATADIR=\"./blockchain\"if [ ! -d $DATADIR ]; then mkdir $DATADIR;fifor i in `seq 1 21 `doDATADIR=\"./blockchain\"$iif [ ! -d $DATADIR ]; then mkdir $DATADIR;fidonecleos wallet unlock --password $1for i in $(seq 1 21)docleos wallet create_keydonecleos wallet private_keys --password $1|grep \"\\\"\"&gt;listpython3 a.py #a.py will be discussed belowcleos wallet lockfi a.py is a python script which will export public-key and private key information into file in case it need to be used in the future. It is always required to have both information of public key and private key when starting a node. 1234567891011file = open(\"list\", \"r\") file1 = open(\"li_\", \"w\")count = 0li = []for line in file: li.append(line.replace('\\\"', '').replace(',','').replace(' ','')) count+=1for i in range(count-1,-1,-1): file1.write(li[i])file.close()file1.close() The key start with EOS and longer is public key, like EOS5CZwEpiweHHZpEdHYsU9Q1MEk5zTtqfrcg3TefBzTYG9xdw2gC The key which is shorter is private key, like this: 5Jarc4qfsXqHcivfGc8qWYTGdQJ5CPy8NeyRjfceXopn9dy3hgR Batch clean Those are some script that will remove everything. It will make the workspace(including wallet, work folder) be initialized. 1234567891011121314151617#!/bin/bashDATADIR=\"./blockchain\"rm -rf $DATADIR*;cleos wallet openif [ $1 ]; then cleos wallet unlock --password $1 while read a; do read a; cleos wallet remove_key $a --password $1 done &lt; li_ rm li_ rm listficleos wallet lock It is good to clean every time after experiment, otherwise blocks generated will occupy too many space. It is 0.5s/blocks. Procedure This is the basic procedure. The voter account and block generator account are produced by one super account. Generally speaking, the basic idea is voter will vote the producer they like, block producer are connected together. During the runtime, the procedure is: Firstly, start producer nodes. Next vote When the block producer has enough votes, block producer will go to confirm blocks. After doing appropriate settings it should start to confirm blocks. I did’t test this part yet. If you want or in some situation, you could link super account together like this, but only the one with appropriate public and private key could generate the block. More specifically, only the one has the private key of the public key in the gensis.json can produce block. Other super accounts nodes could only sync. The whole structure like this: You could use the following command to start multiple super account nodes from gensis status and form the structure shown above: 12345678910111213141516171819202122232425262728293031323334353637383940414243import sysimport osimport jsonimport timepassword = \"\"try: password = sys.argv[1]except IndexError: print(\"Please include password\") sys.exit(1)'''Generate gensis.json'''file1 = open(\"li_\", \"r\")temp = file1.readline()initial_key = file1.readline()os.system('rm -f genesis.json')with open(\"genesis.json\", \"w\") as outfile: json.dump(&#123;'initial_timestamp':\"2018-12-05T08:55:11.000\", 'initial_key': initial_key[:-1], 'initial_configuration':&#123;\"max_block_net_usage\": 1048576, \"target_block_net_usage_pct\": 1000, \"max_transaction_net_usage\": 524288, \"base_per_transaction_net_usage\": 12, \"net_usage_leeway\": 500, \"context_free_discount_net_usage_num\": 20, \"context_free_discount_net_usage_den\": 100, \"max_block_cpu_usage\": 100000, \"target_block_cpu_usage_pct\": 500, \"max_transaction_cpu_usage\": 50000, \"min_transaction_cpu_usage\": 100, \"max_transaction_lifetime\": 3600, \"deferred_trx_expiration_window\": 600, \"max_transaction_delay\": 3888000, \"max_inline_action_size\": 4096, \"max_inline_action_depth\": 4, \"max_authority_depth\": 6 &#125;, \"initial_chain_id\": \"0000000000000000000000000000000000000000000000000000000000000000\"&#125;, outfile, indent=4)'''Start gensis'''ini_port=9000currentport=ini_portsentstring='./genesis_start.sh '+'./blockchain'+' '+initial_key[:-1]+' '+temp[:-1]+' '+str(currentport)+' '+str(currentport+100)+' '+str(currentport+101)os.system('echo Start gensis')os.system(sentstring)currentport+=1time.sleep(30)'''start nodes'''for i in range(1,22): private_key = file1.readline() public_key = file1.readline() tosend = './genesis_start.sh '+'./blockchain'+str(i)+' '+public_key[:-1]+' '+private_key[:-1]+' '+str(currentport)+' '+str(currentport+100)+' '+str(currentport+99) os.system('echo start node '+ str(i)) os.system(tosend) currentport+=1 For this python code, it first generates the gensis.json. And then it starts nodes in some order(First gensis node, then other super accounts). All public key and private key used is based on the file generated previously. To use it, you have to put the password of the wallet as the first attribute pass in when you run the program. The script did so, in case it needs to deal with sensitive information. The follow script is in a file called genesis_start.sh, which is called by the previous python program to start each node: 123456789101112131415161718192021222324252627#!/bin/bash#$1--datadir $2--Public_key $3--Private_key $4--httpserver $5--p2plisten $6--peer_addressif [ $1 ] &amp;&amp; [ $2 ] &amp;&amp; [ $3 ] &amp;&amp; [ $4 ] &amp;&amp; [ $5 ] &amp;&amp; [ $6 ]; thenDATADIR=$1nodeos \\--genesis-json $DATADIR\"/../genesis.json\" \\--signature-provider $2=KEY:$3 \\--plugin eosio::producer_plugin \\--plugin eosio::chain_api_plugin \\--plugin eosio::http_plugin \\--plugin eosio::history_api_plugin \\--data-dir $DATADIR\"/data\" \\--blocks-dir $DATADIR\"/blocks\" \\--config-dir $DATADIR\"/config\" \\--producer-name eosio \\--http-server-address 127.0.0.1:$4 \\--p2p-listen-endpoint 127.0.0.1:$5 \\--access-control-allow-origin=* \\--contracts-console \\--http-validate-host=false \\--verbose-http-errors \\--enable-stale-production \\--p2p-peer-address localhost:$6 \\&gt;&gt; $DATADIR\"/nodeos.log\" 2&gt;&amp;1 &amp; \\echo $! &gt; $DATADIR\"/eosd.pid\"fi This script will start a new node by using information given by user and save the running result to file at the datadir given… To use it manually, just use ./genesis_start.sh [datadir] [Public_key] [Private_key] [httpserver] [p2plisten] [peer_address] If you get an information of “This is not an executable file”. Just do chmod 777 genesis_start.sh I think those scripts are still useful for the following reason: The producer has option about the super account node it reports. It could make the main node not too stressful when lots of submission happens(I guess). By modifying them a little bit, they could also be used to generate multiple block producer and voters. And I find out only the linked structure will be accepted. It means multiple connections to one super account node is not permitted. More detailed, as the graph show below: To make the system recognize an account is block producer, it is required to use regproducer like the following. Otherwise it is just a voter. Build local test network Need to use the EOS (cleos and nodes) compiled from the previous steps. Maybe this is not required. But it seems that eosio.contract is related on eosio main program. The network can not be built when using the software from ubuntu package management on my machine. Basically, I follow up the guidance from Guide to EOS voting simulation and the official guidance BIOS Boot Sequence. Some places has been changed to fit the latest version of EOSIO. Before start, you need to initialize wallet by taking the previous steps. And then create some new public and private key pairs. Just do cleos wallet create_key. If you want to see all key pairs, do cleos wallet private_keys. Then, create genesis.json and the script used to start producing genesis block. Create genesis.json at a property directory. 123456789101112131415161718192021222324&#123; \"initial_timestamp\": \"2018-12-05T08:55:11.000\", \"initial_key\": \"EOS_PUB_DEV_KEY\", \"initial_configuration\": &#123; \"max_block_net_usage\": 1048576, \"target_block_net_usage_pct\": 1000, \"max_transaction_net_usage\": 524288, \"base_per_transaction_net_usage\": 12, \"net_usage_leeway\": 500, \"context_free_discount_net_usage_num\": 20, \"context_free_discount_net_usage_den\": 100, \"max_block_cpu_usage\": 100000, \"target_block_cpu_usage_pct\": 500, \"max_transaction_cpu_usage\": 50000, \"min_transaction_cpu_usage\": 100, \"max_transaction_lifetime\": 3600, \"deferred_trx_expiration_window\": 600, \"max_transaction_delay\": 3888000, \"max_inline_action_size\": 4096, \"max_inline_action_depth\": 4, \"max_authority_depth\": 6 &#125;, \"initial_chain_id\": \"0000000000000000000000000000000000000000000000000000000000000000\"&#125; Then, create the script used to start the first node and save it as genesis_start.sh. 12345678910111213141516171819202122232425262728293031#!/bin/bashDATADIR=\"./blockchain\"if [ ! -d $DATADIR ]; then mkdir -p $DATADIR;finodeos \\--genesis-json $DATADIR\"/../genesis.json\" \\--signature-provider EOS_PUB_DEV_KEY=KEY:EOS_PRIV_DEV_KEY \\--plugin eosio::producer_plugin \\--plugin eosio::chain_api_plugin \\--plugin eosio::http_plugin \\--plugin eosio::history_api_plugin \\--plugin eosio::history_plugin \\--data-dir $DATADIR\"/data\" \\--blocks-dir $DATADIR\"/blocks\" \\--config-dir $DATADIR\"/config\" \\--producer-name eosio \\--http-server-address 127.0.0.1:8888 \\--p2p-listen-endpoint 127.0.0.1:9010 \\--access-control-allow-origin=* \\--contracts-console \\--http-validate-host=false \\--verbose-http-errors \\--enable-stale-production \\--p2p-peer-address localhost:9011 \\--p2p-peer-address localhost:9012 \\--p2p-peer-address localhost:9013 \\&gt;&gt; $DATADIR\"/nodeos.log\" 2&gt;&amp;1 &amp; \\echo $! &gt; $DATADIR\"/eosd.pid\" Note: The EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh should be the same as the EOS_PUB_DEV_KEY in genesis.json. EOS_PRIV_DEV_KEY is the private key of this public key. Otherwise, you will get the error Not producing block because I don’t have the private key for EOS_PUB_DEV_KEY Start the first node This tutorial is based on v4.2.0, with one node for bios and two nodes as block producers. First start the bios node: 1./gensis_start.sh Deploy eosio.bios contract to eosio account. 1cleos set contract eosio build/contracts/eosio.bios 3. **Create necessary accounts.** The list of accounts required is provided by official: 1234567891011&gt; eosio.bpay&gt; eosio.msig&gt; eosio.names&gt; eosio.ram&gt; eosio.ramfee&gt; eosio.saving&gt; eosio.stake&gt; eosio.token&gt; eosio.vpay&gt; eosio.rex&gt; Use create account command to create each of them: 1cleos create account eosio eosio.*** EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo Set the eosio.token contract 1cleos set contract eosio.token eos/build/contracts/eosio.token The eosio.token used should be at the build directory which contains file eosio.token.wasm, otherwise wrong message will be invoked. set the eosio.msig contract 12cleos create account eosio eosio.msig EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBocleos set contract eosio.msig eos/build/contracts/eosio.msig The eosio.msig used should be at the build directory which contains file eosio.msig.wasm, otherwise wrong message will be invoked. Create and allocate token We create and issue 1,000,000,000.0000 tokens and name it ‘SYS’. Then issue to eosio account. 12cleos push action eosio.token create '&#123;\"issuer\":\"eosio\", \"maximum_supply\": \"1000000000.0000 SYS\", \"can_freeze\": 0, \"can_recall\": 0, \"can_whitelist\": 0&#125;' -p eosio.tokencleos push action eosio.token issue '&#123;\"to\":\"eosio\",\"quantity\":\"1000000000.0000 SYS\",\"memo\":\"issue\"&#125;' -p eosio To check the balance and stats 12cleos get currency balance eosio.token eosiocleos get currency stats eosio.token 'SYS' Set eosio.system contract to eosio After setting eosio.system contract we will be able to stake our accounts. 1cleos set contract eosio eos/build/contracts/eosio.system Then stake tokens and expand the network. cleos stakes 8 KB of RAM on account creation, paid by the account creator. Make eosio.msig a privileged account and Initialize system account 123cleos push action eosio setpriv '[\"eosio.msig\", 1]' -p eosio@activecleos push action eosio init '[\"0\", \"4,SYS\"]' -p eosio@active The command initializes the system account with code zero (needed at initialization time) and SYS token with precision 4; precision can range from [0 … 18]. Create accounts for BPs: bp1111111111 and bp2222222222 1cleos system newaccount eosio bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS '1000000.0000 SYS' --stake-net '1000000.0000 SYS' --stake-cpu '1000000.0000 SYS' Register BPs 1cleos system regproducer bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo Similarly register bp2222222222. To check producers: 1cleos system listproducers To start the two producer nodes: 1nodeos -e --genesis-json path/to/genesis.json --producer-name bp1111111111 --private-key '[ \"EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo\",\"5K7EY...Hi8Uy61wU1o\" ]' --http-server-address 127.0.0.1:8889 --p2plisten-endpoint 127.0.0.1:9877 --p2p-peer-address bios_node_ip:port --plugin eosio::producer_plugin --plugin eosio::chain_api_plugin --plugin eosio::net_api_plugin Create voters accounts: voter1111111, voter2222222, voter3333333 1cleos system newaccount eosio voter1111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS '50.0000 SYS' --stake-net '50.0000 SYS' --stake-cpu '50.0000 SYS' Issue tokens to voters Transfer 100,000,000 SYS to each voter. 1cleos push action eosio.token transfer '[\"eosio\", \"voter1111111\",\"100000000.0000 SYS\",\"vote\"]' -p eosio Check the balance 1cleos get currency balance eosio.token voter1111111 Delegate bandwidth 1cleos system delegatebw voter1111111 voter1111111 \"50000000.0000 SYS\" \"50000000.0000 SYS\" Sometime, the program will tell you failed. But the command successes actually. You could redo cleos get currency balance eosio.token voter1111111 to check if this command take effect or not. Vote Voting for producers can begin as accounts are staked and producers are registered. 1cleos system voteproducer prods voter1111111 bp1111111111 bp2222222222 After 15% of the available votes have been voted, block producers will begin producing. In this case we need 150,000,000 votes. Check votes: 12cleos system listproducers cleos get table eosio eosio voters Some error and solutions I found is at here. Special notice EOS.CONTRACT is based on locally compiled EOS. To compile EOS locally, it has to use git clone to clone it from github. You can not download from source and compile. The compilation requires lots of space. It is good to remain 40GB of disk and 8GB of memory. It also takes around 3 hours to compile. They can only be compiled at the current user’s home directory.","categories":[{"name":"Cryptocurrency Application","slug":"Cryptocurrency-Application","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/"},{"name":"EOSIO","slug":"Cryptocurrency-Application/EOSIO","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/EOSIO/"}],"tags":[{"name":"eos","slug":"eos","permalink":"https://shaokang.ga/tags/eos/"},{"name":"eosio.contracts","slug":"eosio-contracts","permalink":"https://shaokang.ga/tags/eosio-contracts/"},{"name":"eos.cdt","slug":"eos-cdt","permalink":"https://shaokang.ga/tags/eos-cdt/"}]},{"title":"Website for CS425 project","slug":"projects/Website for CS425 project","date":"2019-05-05T20:27:32.000Z","updated":"2019-06-17T15:27:59.785Z","comments":true,"path":"2019/projects/Website for CS425 project/","link":"","permalink":"https://shaokang.ga/2019/projects/Website for CS425 project/","excerpt":"Reservation system website application deployed The website made by me for my CS425 project has been deployed and works normally at This Website. In webpage browser is at bottom. Source code is at My Github Page This is a website made by using SQL as database and Material Theme as layout. Test account information:","text":"Reservation system website application deployed The website made by me for my CS425 project has been deployed and works normally at This Website. In webpage browser is at bottom. Source code is at My Github Page This is a website made by using SQL as database and Material Theme as layout. Test account information: id priority password Name 1 admin 123456 28 patient 456789 Rebecca Torres 29 scheduler 789456 30 medical staff 123789 Basic functions: Login The application must provide a login portal for user to login. The application will validate the user credentials and privileges. For this project you are only required to provide the implementation of managers. Privileges 1- Users with admin privileges can do the following: ​ a. Schedule an appointment ​ b. Create new patient ​ c. Create a new user account ​ d. Access the business reporting 2- Users with Doctor/Staff privileges can do the following: ​ a. View and update patient record ​ b. Create an Order ​ c. View calendar and schedule appointment with medical staff 3- Users with Patient privileges can do the following: ​ a. View the orders ​ b. View bills 4- Users with Scheduler privileges can do the following: ​ a. View the orders ​ b. View bills ​ c. View calendar and schedule appointment with medical staff Order transaction Doctors can order diagnostics for a patient, once the diagnostics are completed and results are available. The system gets updated by medical staff. Reporting and analytics The admin will have the capability of running business analytics reports that will help them monitor business operations. • Total revenue from all diagnostic • Total revenue from each doctor visit • Allow patient to view their bills, appointment and medical record In webpage demo:","categories":[{"name":"website","slug":"website","permalink":"https://shaokang.ga/categories/website/"},{"name":"HTML","slug":"website/HTML","permalink":"https://shaokang.ga/categories/website/HTML/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"https://shaokang.ga/tags/SQL/"},{"name":"Website","slug":"Website","permalink":"https://shaokang.ga/tags/Website/"}]},{"title":"Website for CS100 project","slug":"projects/Website for CS100 project","date":"2017-12-05T21:27:32.000Z","updated":"2019-06-18T04:59:33.517Z","comments":true,"path":"2017/projects/Website for CS100 project/","link":"","permalink":"https://shaokang.ga/2017/projects/Website for CS100 project/","excerpt":"Hatefate website application deployed The website made by me for my CS100 project has been deployed and works normally at This Website. In webpage browser is at bottom. Source code is at This Github Page This is a website made by using SQL as database and Material Theme as layout. Function included: login via email, login via account name, register, reset password via email, set your favorites, and find people who has the same favorites as you. Due to the reason that the domain(huangsk100.me) was expired. This website is for demo only right now. For testing, test account information is as follows:","text":"Hatefate website application deployed The website made by me for my CS100 project has been deployed and works normally at This Website. In webpage browser is at bottom. Source code is at This Github Page This is a website made by using SQL as database and Material Theme as layout. Function included: login via email, login via account name, register, reset password via email, set your favorites, and find people who has the same favorites as you. Due to the reason that the domain(huangsk100.me) was expired. This website is for demo only right now. For testing, test account information is as follows: Username Password Email test 123456 123456@example.com test01 123456 test01@example.com test02 123456 test02@example.com Here is the map for this website:Some functions didn’t implement. The in-browser demo:","categories":[{"name":"website","slug":"website","permalink":"https://shaokang.ga/categories/website/"},{"name":"HTML","slug":"website/HTML","permalink":"https://shaokang.ga/categories/website/HTML/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"https://shaokang.ga/tags/SQL/"},{"name":"Website","slug":"Website","permalink":"https://shaokang.ga/tags/Website/"}]}],"categories":[{"name":"optimization","slug":"optimization","permalink":"https://shaokang.ga/categories/optimization/"},{"name":"Programs","slug":"Programs","permalink":"https://shaokang.ga/categories/Programs/"},{"name":"Coursework","slug":"Programs/Coursework","permalink":"https://shaokang.ga/categories/Programs/Coursework/"},{"name":"website","slug":"website","permalink":"https://shaokang.ga/categories/website/"},{"name":"JS","slug":"website/JS","permalink":"https://shaokang.ga/categories/website/JS/"},{"name":"tools","slug":"Programs/tools","permalink":"https://shaokang.ga/categories/Programs/tools/"},{"name":"Cryptocurrency Application","slug":"Cryptocurrency-Application","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/"},{"name":"EOSIO","slug":"Cryptocurrency-Application/EOSIO","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/EOSIO/"},{"name":"Hexo","slug":"website/Hexo","permalink":"https://shaokang.ga/categories/website/Hexo/"},{"name":"Bitcoin","slug":"Cryptocurrency-Application/Bitcoin","permalink":"https://shaokang.ga/categories/Cryptocurrency-Application/Bitcoin/"},{"name":"HTML","slug":"website/HTML","permalink":"https://shaokang.ga/categories/website/HTML/"}],"tags":[{"name":"GAMS","slug":"GAMS","permalink":"https://shaokang.ga/tags/GAMS/"},{"name":"MIP","slug":"MIP","permalink":"https://shaokang.ga/tags/MIP/"},{"name":"JavaFX","slug":"JavaFX","permalink":"https://shaokang.ga/tags/JavaFX/"},{"name":"JS","slug":"JS","permalink":"https://shaokang.ga/tags/JS/"},{"name":"HTML","slug":"HTML","permalink":"https://shaokang.ga/tags/HTML/"},{"name":"Java","slug":"Java","permalink":"https://shaokang.ga/tags/Java/"},{"name":"CPLEX","slug":"CPLEX","permalink":"https://shaokang.ga/tags/CPLEX/"},{"name":"eos","slug":"eos","permalink":"https://shaokang.ga/tags/eos/"},{"name":"eosio.contracts","slug":"eosio-contracts","permalink":"https://shaokang.ga/tags/eosio-contracts/"},{"name":"eos.cdt","slug":"eos-cdt","permalink":"https://shaokang.ga/tags/eos-cdt/"},{"name":"Notes","slug":"Notes","permalink":"https://shaokang.ga/tags/Notes/"},{"name":"Bitcoin","slug":"Bitcoin","permalink":"https://shaokang.ga/tags/Bitcoin/"},{"name":"SQL","slug":"SQL","permalink":"https://shaokang.ga/tags/SQL/"},{"name":"Website","slug":"Website","permalink":"https://shaokang.ga/tags/Website/"}]}