<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Milk Weight Project</title>
      <link href="/2020/projects/Milk-Weight-Project/"/>
      <url>/2020/projects/Milk-Weight-Project/</url>
      
        <content type="html"><![CDATA[<p>This is a Group project for my CS400 class, named as Milk Weight Project. I will talk about my design and usage instruction in the following space. Detailed implementation could be view at <a href="https://github.com/ShaokangJiang/Milk-Weight-Project" target="_blank" rel="noopener">This repository</a>.</p><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/Milk-Weight-Project" target="_blank" rel="noopener">https://github.com/ShaokangJiang/Milk-Weight-Project</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/Milk-Weight-Project/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/Milk-Weight-Project/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/Milk-Weight-Project/archive/0.9.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/Milk-Weight-Project/archive/0.9.zip</a></p><h2 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h2><a id="more"></a><h4 id="command-line-guide"><a class="markdownIt-Anchor" href="#command-line-guide"></a> Command Line Guide</h4><p>It is possible to run from command line or use command line version to interrupt with basic feature, including import. It has two mode, command line mode and  command line start. In Command line start, you can specify your argument and then program will enter GUI automatically. In command line mode, you can decide the time you want to enter GUI interface.</p><h5 id="command-line-mode"><a class="markdownIt-Anchor" href="#command-line-mode"></a> Command line mode</h5><p>To enter it:</p><h5 id="command-line-start"><a class="markdownIt-Anchor" href="#command-line-start"></a> Command line start</h5><p>To enter it:</p><h4 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h4><h5 id="download-from-release-page-or-compile-from-source"><a class="markdownIt-Anchor" href="#download-from-release-page-or-compile-from-source"></a> Download from release page or compile from source.</h5><blockquote><p><strong>Path to JavaFx:</strong> The path to the library directory to JavaFx. Sample, <code>/home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib</code></p></blockquote><h6 id="download-from-release-page-on-github"><a class="markdownIt-Anchor" href="#download-from-release-page-on-github"></a> Download from release page on Github:</h6><ol><li>Download <a href="https://openjfx.io/" target="_blank" rel="noopener">JavaFX</a> (their official website) and download <code>executable.jar</code> from release page</li><li><code>java --module-path &quot;&lt;Path to Javafx&gt;&quot; --add-modules javafx.controls,javafx.fxml -jar executable.jar</code></li></ol><h6 id="download-from-release-page"><a class="markdownIt-Anchor" href="#download-from-release-page"></a> Download from release page:</h6><h4 id="source-data"><a class="markdownIt-Anchor" href="#source-data"></a> Source data:</h4><p>Source data should be in the format, it means this farm export those amount of milk in this date:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">date,farm_id,weight</span><br><span class="line">2019-1-1,Farm 0,6760</span><br><span class="line">2019-1-1,Farm 1,8644</span><br><span class="line">2019-1-1,Farm 2,3547</span><br><span class="line">2019-1-2,Farm 0,6824</span><br></pre></td></tr></table></figure><p>We are provided with the sample data from professor <a href="http://pages.cs.wisc.edu/~deppeler/" target="_blank" rel="noopener">Deppeler</a>. Sample data format is designed and required for this project by professor <a href="http://pages.cs.wisc.edu/~deppeler/" target="_blank" rel="noopener">Deppeler</a>. More sample data could be downloaded from <a href="https://pages.cs.wisc.edu/~deppeler/cs400/assignments/ateam/files/" target="_blank" rel="noopener">Deb’s website</a>.</p><h2 id="design"><a class="markdownIt-Anchor" href="#design"></a> Design</h2><p>An overall agreement of this design is that those function should not only work for this project but also for other project.</p><h4 id="basic-components"><a class="markdownIt-Anchor" href="#basic-components"></a> Basic components:</h4><img src="/2020/projects/Milk-Weight-Project/2.png"><p>It contains the structure to use in this program.</p><h4 id="managerreport"><a class="markdownIt-Anchor" href="#managerreport"></a> Manager&amp;Report:</h4><img src="/2020/projects/Milk-Weight-Project/3.png"><p>It could be the heart of this program’s non-GUI part, it contains method to handle with file, manage farmers.</p><p>Report part is to generate different GUI report and then let it show up in the major window, <code>Notification.java</code>.</p><h4 id="gui-components"><a class="markdownIt-Anchor" href="#gui-components"></a> GUI components:</h4><img src="/2020/projects/Milk-Weight-Project/1.png"><p>Components that are not shown in the graph are two, <code>alert1.java</code>, <code>ChoiceWindow.java</code>. One component is the alert class to show various alerting information.  <code>ChoiceWindow.java</code> has all window required for choosing. Such as choosing for filter categories. This is a helper class to generate interface for user to select filter or other categories they want. Such as, choosing which function you want to use to manage data</p><p>The other are major part either control or show interfaces to user.  <code>Main.java</code> also has the responsibility to handle command line input.</p><h4 id="detailed-design"><a class="markdownIt-Anchor" href="#detailed-design"></a> Detailed design</h4><p>A detailed class by class design document and agreement could be view at here:</p><blockquote><p>This is the initial thought of design by me <strong>before</strong> the actual implementation, so the data structure used to store farmers has changed to <code>Hashmap</code> and there are  lot of minor changes. To see the latest version, go to <a href="https://github.com/ShaokangJiang/Milk-Weight-Project" target="_blank" rel="noopener">This repository</a>.</p><p>And I have no idea about JavaFx when I design this structure, so it is possible that some places have structure error.</p></blockquote><div class="row">    <embed src="./1.pdf" width="100%" height="550" type="application/pdf"></div><h4 id="special-notes"><a class="markdownIt-Anchor" href="#special-notes"></a> Special notes:</h4><p><strong>It requires oracle java 1.9(openjdk on linux) or above</strong></p><h2 id="creditcopyright-info"><a class="markdownIt-Anchor" href="#creditcopyright-info"></a> Credit/Copyright info</h2><p>In case needed, this is an assignment for my CS400 course. Data source and project requirement is done by professor <a href="http://pages.cs.wisc.edu/~deppeler/" target="_blank" rel="noopener">Deb Deppeler</a>. They have copyright for multiple stuff in this project, including but not limit to the requirement of this assignment, data source. and components required for this project, including farm report, annual report, etc.</p><p>The design and implementation is mostly done by me. Contribution of each person in this project could be viewed from the commits page of the <a href="https://github.com/ShaokangJiang/Milk-Weight-Project" target="_blank" rel="noopener">git repo</a>.</p><h2 id="last-note"><a class="markdownIt-Anchor" href="#last-note"></a> Last Note:</h2><p><code>JavaFX</code> should be good for multi-platform usage and it is easy to build a good, well-formed application. But it is a little bit different than the other, including <code>swing</code>, <code>awt</code>. So, we can not use the same thought to think about <code>JavaFX</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> Coursework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Modified traffic simulator</title>
      <link href="/2020/projects/Modified-simulator/"/>
      <url>/2020/projects/Modified-simulator/</url>
      
        <content type="html"><![CDATA[<p>Under construction now…</p><!--Will discuss what I did in this modification-->]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoCommenter</title>
      <link href="/2019/projects/AutoCommenter/"/>
      <url>/2019/projects/AutoCommenter/</url>
      
        <content type="html"><![CDATA[<h3 id="automatically-add-comments-to-java-source-code"><a class="markdownIt-Anchor" href="#automatically-add-comments-to-java-source-code"></a> Automatically add comments to Java source code</h3><p>This program can not understand your code. What it is doing is to add some comments based on specific rule and make your program full of comments to meet the requirement of dummy comments required in some courses.</p><p>And actually, this program can only add comments to some specific area. For some other areas, it could detect it and send a window to ask you for comments and provide some suggestion.</p><a id="more"></a><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip</a></p><h4 id="sample-result"><a class="markdownIt-Anchor" href="#sample-result"></a> Sample result:</h4><p><strong>Before adding:</strong></p><img src="/2019/projects/AutoCommenter/1.png" title="test"><p><strong>After adding</strong></p><img src="/2019/projects/AutoCommenter/2.png" title="test"><h4 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h4><h5 id="creating-configuration-file-and-put-it-to-the-running-directory"><a class="markdownIt-Anchor" href="#creating-configuration-file-and-put-it-to-the-running-directory"></a> Creating configuration file and put it to the running directory</h5><p>A model of configuration file as shown below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-----special:-----</span><br><span class="line">BAIDU_APP_ID: </span><br><span class="line">BAIDU_SECURITY_KEY: </span><br><span class="line">IFLY_APP_ID: </span><br><span class="line">lineLimit:90</span><br><span class="line">-----conditions:-----</span><br><span class="line">if\s*\(.*\) Following code will be generated if ###.*### met.</span><br><span class="line">while\s*\(.*\) Following code will be excuted for multiple time till ###.*### doesn&apos;t met.</span><br><span class="line">do\s*\&#123; A do...while... loop will be handled.</span><br><span class="line">[^&gt;&lt;!=]+=&#123;1&#125;.* Assign values.</span><br><span class="line">for\s+\(.*\) Running iteration on required object.</span><br><span class="line">else\s*\&#123; Do the following if no condition above is met.</span><br><span class="line">return.*; Return ###.*### to the program call from.</span><br><span class="line">break; Break current loop.</span><br><span class="line">System\.out\.println\(.*\) Print information of ###.*### to the user screen.</span><br><span class="line">default\s*\: When default case get touched.</span><br><span class="line">case.*\: Under the case of ###.*###</span><br><span class="line">\.push\( push element to the stack, to the top of it</span><br><span class="line">\.pop\( pop element from the stack, from the top of it</span><br><span class="line">\.peek\( peek element from the stack, never removes data</span><br><span class="line">\.isEmpty\( check if it is empty or not</span><br></pre></td></tr></table></figure><p><code>-----special:-----</code> and <code>-----conditions:-----</code> are field tags, These field tags should matches exactly as what described above.</p><h6 id="special-field"><a class="markdownIt-Anchor" href="#special-field"></a> Special field:</h6><ul><li>BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use translation function.</li><li>IFLY_APP_ID: Need register with Ifly at <a href="https://www.xfyun.cn/" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use voice dedication function</li><li>lineLimit: Words will be cut of at the exact limitation position if it is out of limits.</li></ul><h6 id="conditions"><a class="markdownIt-Anchor" href="#conditions"></a> Conditions:</h6><p>The conditions used to detect on each line of code and make comments at the end of each line. It uses the regular expression of java to detect words. The format of writing condition is <code>[Expression] &lt;Words&gt;</code>. They are separated using space.</p><p><code>[Expression]</code>: The java regular expression. If space is needed, use \s instead of an empty place.</p><p><code>&lt;Words&gt;</code>: The words to comment at the end of sentences that contains this expression. Use <code>###.*###</code> to place contents matches <code>.*</code> on the left hand side.  Only the first one on the left hand side will be placed on the right side.  And code only support  <code>###.*###</code> syntax right now.</p><p>For example, If there is a line in java code: <code>System.out.println(&quot;Hello World!&quot;);</code>. This meet the requirement of <code>System\.out\.println\(.*\)</code> defined above. So, the comments to be added to the end of this line is <code>Print information of &quot;Hello World!&quot; to the user screen.</code> In most case, this will make sense.</p><h6 id="other-places"><a class="markdownIt-Anchor" href="#other-places"></a> Other places:</h6><p>For the other place, including method header, method implementation method, return value description, pass in parameter and some other things, program will promote a window like this to let you input word you want. Default in graph below will be replaced with some guidance words.</p><img src="/2019/projects/AutoCommenter/3.png" title="test"><p>For some method, such as getter, setter, constructor, program will place some predefined words at here. You could edit it as you need. For the edit method, you could use start listen button to speech language you choose in the first step and use voice dedicator.</p><h4 id="compile-run"><a class="markdownIt-Anchor" href="#compile-run"></a> Compile &amp; run</h4><h5 id="download-from-release-page-or-compile-from-source"><a class="markdownIt-Anchor" href="#download-from-release-page-or-compile-from-source"></a> Download from release page or compile from source.</h5><h6 id="download-from-release-page"><a class="markdownIt-Anchor" href="#download-from-release-page"></a> Download from release page:</h6><ol><li>Choose correct library to download and download AutoCommenter from release page</li><li><code>java -jar AutoCommenter.jar [-d] &lt; Directory or files path &gt;</code></li><li><code>-d</code> is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, <code>java -jar AutoCommenter.jar E:\test</code></li><li><code>&lt;File path&gt;</code> could be a list of files separated with space. Like, <code>java -jar AutoCommenter.jar file1.java file2.java</code>.</li></ol><h6 id="download-from-release-page-2"><a class="markdownIt-Anchor" href="#download-from-release-page-2"></a> Download from release page:</h6><ol><li><code>git clone https://github.com/sjiang97/AutoCommenter.git</code></li><li><code>cd AutoCommenter</code></li><li><code>find -name &quot;*.java&quot; &gt; sources.txt</code> : Find all java files to compile</li><li><code>mkdir bin</code></li><li><code>javac -d ./bin -cp ./\* @sources.txt</code></li><li><code>cd bin</code></li><li><code>java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test [-d] &lt; Directory or files path &gt;</code></li><li><code>-d</code> is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, <code>java -jar AutoCommenter.jar E:\test</code></li><li><code>&lt;File path&gt;</code> could be a list of files separated with space. Like, <code>java -jar AutoCommenter.jar file1.java file2.java</code>.</li></ol><h4 id="special-notes"><a class="markdownIt-Anchor" href="#special-notes"></a> Special notes:</h4><p><strong>It requires oracle java 1.8(openjdk on linux) or above</strong></p><p><strong>It requires a well formated java code:</strong>, In eclipse, kick <code>Ctrl+Shift+f</code> to make code well formated. And define property of class, fields specifically, i.e. include <code>public</code> instead of omit it.</p><p>It works perfectly on windows machine. It might have problem on mac/linux.</p><h4 id="further"><a class="markdownIt-Anchor" href="#further"></a> Further</h4><ul><li>This is not perfect. Lots of places need to improve</li><li>Didn’t add class header automatically</li><li>Program should able to do multiple replacement</li><li>Program should allow user to define mapping relationship between name of method and javadoc sample.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoiceInput</title>
      <link href="/2019/projects/VoiceInput/"/>
      <url>/2019/projects/VoiceInput/</url>
      
        <content type="html"><![CDATA[<h3 id="a-simple-method-to-write-words"><a class="markdownIt-Anchor" href="#a-simple-method-to-write-words"></a> A simple method to write words</h3><p>I like to use voice input to write words. But I didn’t find an easy to use voice dedication program with dynamic correction. So I made this one. A java voice input interface using iflytek voice dictation with dynamic correction.</p><a id="more"></a><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip</a></p><h4 id="sample-run"><a class="markdownIt-Anchor" href="#sample-run"></a> Sample run:</h4><p>You need to choose a language to dedicate in bash window at first. Then a window below will be pushed out:</p><p>Each button clarify what you could do clearly.</p><img src="/2019/projects/VoiceInput/3.png" title="test"><h4 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h4><h5 id="creating-configuration-file-and-put-it-to-the-running-directory"><a class="markdownIt-Anchor" href="#creating-configuration-file-and-put-it-to-the-running-directory"></a> Creating configuration file and put it to the running directory</h5><p>A model of configuration file as shown below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-----special:-----</span><br><span class="line">BAIDU_APP_ID: </span><br><span class="line">BAIDU_SECURITY_KEY: </span><br><span class="line">IFLY_APP_ID:</span><br></pre></td></tr></table></figure><p><code>-----special:-----</code> is field tag, It should matches exactly as what described above.</p><h6 id="special-field"><a class="markdownIt-Anchor" href="#special-field"></a> Special field:</h6><ul><li>BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use translation function.</li><li>IFLY_APP_ID: Need register with Ifly at <a href="https://www.xfyun.cn/" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use voice dedication function</li></ul><h4 id="compile-run"><a class="markdownIt-Anchor" href="#compile-run"></a> Compile &amp; run</h4><h5 id="download-from-release-page-or-compile-from-source"><a class="markdownIt-Anchor" href="#download-from-release-page-or-compile-from-source"></a> Download from release page or compile from source.</h5><h6 id="download-from-release-page"><a class="markdownIt-Anchor" href="#download-from-release-page"></a> Download from release page:</h6><ol><li>Choose correct library to download and download VoiceInput from release page</li><li><code>java -jar VoiceInput.jar</code></li></ol><h6 id="download-and-compile-from-source-page"><a class="markdownIt-Anchor" href="#download-and-compile-from-source-page"></a> Download and compile from source page:</h6><ol><li><code>git clone https://github.com/sjiang97/VoiceInput.git</code></li><li><code>cd VoiceInput</code></li><li><code>find -name &quot;*.java&quot; &gt; sources.txt</code> : Find all java files to compile</li><li><code>mkdir bin</code></li><li><code>javac -d ./bin -cp ./\* @sources.txt</code></li><li><code>cd bin</code></li><li><code>java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test</code></li></ol><h4 id="special-notes"><a class="markdownIt-Anchor" href="#special-notes"></a> Special notes:</h4><p><strong>It requires oracle java 1.8(openjdk on linux) or above</strong></p>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>College library optimization problem</title>
      <link href="/2019/projects/College-library-optimization-problem/"/>
      <url>/2019/projects/College-library-optimization-problem/</url>
      
        <content type="html"><![CDATA[<p>This project is a group work designed and solve by Shaokang Jiang &amp; Katherine Fu for course CS524 project.</p><p>Optimization is a powerful way to solve real problem in a short amount of time. It needs us to use more math when we design solutions instead of using computing resources when the problem runs. GAMS is a powerful optimization software. GAMS could do calculation and generate equations in seconds. By using CPLEX, we are able to reach solutions in seconds. In this project, we utilize GAMS feature (dynamic sets, mip, etc) and nearly solved a real problem.</p><p><a id="Problem"></a></p><h2 id="problem"><a class="markdownIt-Anchor" href="#problem"></a> Problem</h2><h3 id="college-library-optimization-problem"><a class="markdownIt-Anchor" href="#college-library-optimization-problem"></a> College library optimization problem</h3><p>We consider a simplified example of arranging the number of students who use the college library for studying. <a id="more"></a>In different period of time during school year, the number of students staying in the library is different. During the midterm and final weeks, the number is rapidly increasing. Thus, it is essential to maximize the efficiency of the number of hours of students who can use the library <!-- more -->given their studying duration of using individual seats, the inflow and outflow of students, the equipment checking-out situations, and so on.</p><p>To simplify our model, we assume that the library has two sections: a quiet area, a public area. The total number of seats in the college library is 1000.</p><table>    <tr>        <th colspan="2"><center>Quiet area</center></th>        <th colspan="4"><center>Public area</center></th>    </tr>    <tr>        <td>&le;5 hrs</td>        <td>&gt;5 hrs</td>        <th colspan="2">For project</th>        <th colspan="2">For chatting</th>    </tr>    <tr>        <td></td>        <td></td>        <td>&le;2 hrs</td>        <td>&gt;2 hrs</td>        <td>&le;4 hrs</td>        <td>&gt;4 hrs</td>    </tr>    <tr>        <td>1</td>        <td>0.6</td>        <td>1.1</td>        <td>0.5</td>        <td>0.12</td>        <td>0.05</td>    </tr></table><p>To understand the Efficiency, we gave an example at here. Assume a person could finish a page of work in an hour, this is defined as one unit of efficiency, also known as the efficiency per hour for a person work in quiet area for less than 5 hours. But if this person work more than 5 hours, then he/she can only finish 0.6 pages of work for each hour he/she spend. By using formula, it looks like this: (t stand for time of working, f(t) stand for total efficiency)  Equation 1 stand for student total efficiency staying in quiet area. Equation 2 stand for student total efficiency staying in public area for project purpose. Equation 3 stand for student total efficiency staying in public area for chatting purpose.</p>\begin{equation}  f(t)=\left\{  \begin{aligned}  & 1*t & \forall t\le 5 \\  & 5+0.6*t & \forall t> 5  \end{aligned}  \right.\end{equation}\begin{equation}  f(t)=\left\{  \begin{aligned}  & 1.1*t & \forall t\le 2 \\  & 2.2+0.5*t & \forall t> 2  \end{aligned}  \right.\end{equation}\begin{equation}  f(t)=\left\{  \begin{aligned}  & 0.12*t & \forall t\le 4 \\  & 0.48+0.05*t & \forall t> 4  \end{aligned}  \right.\end{equation}<p>It is permitted to switch a person from quiet place to public place. A person who requested the quiet apace and switched to public space due to limited seats will have an coefficient of efficiency of 0.8; A person who requested the public apace and switched to quiet space due to limited seats will have an coefficient of efficiency of 0.3;</p><p>Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the caalculation result from the previous step, f(x) stand for result of new efficiency)</p>\begin{equation}  f(x)=\left\{  \begin{aligned}  & 0.8*x & \forall x| quiet\rightarrow public \\   & 0.3*x & \forall x| public \rightarrow quiet  \end{aligned}  \right.\end{equation}<p><a id="end_o1"></a></p><p>The college library also provides equipment including laptops,<br>calculators, and computer chargers for students to use. If a student<br>checks out one of these equipment, the efficiency of that student could be multiply by those coefficient. The coefficient for regular efficiency is shown below.</p><table><thead><tr><th>Laptops</th><th>calculators</th><th>computer chargers</th></tr></thead><tbody><tr><td>1.1</td><td>1.2</td><td>1.3</td></tr></tbody></table><p>Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the calculation result from the previous step, f(x) stand for result of new efficiency)</p>\begin{equation}  f(x)=\left\{  \begin{aligned}  & 1.2*x & \forall x| calculator=1 &\\   & 1.1*x & \forall x| laptops=1 &\\  & 1.3*x & \forall x| charger=1 &  \end{aligned}  \right.\end{equation}<p>The number of laptops is 10, the total number of calculators is 30, and<br>the number of chargers is also 10. Every person could use those equipment for the time duration that they are study in the library. Each person could borrow at most one equipment during time duration that he is in library.</p><p>data.gdx contain the data of students’ thinking of purpose of using those equipment and seats in the library. We want to consider a situation in a day of experimenting period during opening hours of 8:00 am to 9:00 pm. This file recorded the time when a student enter the library; the time they want to study; the place they want to study; Max possible hours for quiet hours is 10. Max possible hours for public hours is 6; type of 0 stands for project, 1 stands for chatting;</p><p>By using data above, you are going to give permission for certain group of students to enter this library and arrange seats in the library in order to maximize total efficiency. And also, to demonstrate that this library is open to all people, you get to allow at least 10 chatting people to enter this library.</p><h4 id="objective1"><a class="markdownIt-Anchor" href="#objective1"></a> Objective1:</h4><p>How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library?</p><p>Dataset could be downloaded from <a href="https://shaokang.ga/data.gdx">data.gdx</a>.</p><h4 id="objective2"><a class="markdownIt-Anchor" href="#objective2"></a> Objective2:</h4><p>More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library.</p><p>Dataset could be downloaded from <a href="https://shaokang.ga/data-free.gdx">data-free.gdx</a>, <a href="https://shaokang.ga/data-middle.gdx">data-middle.gdx</a>, <a href="https://shaokang.ga/data-busy.gdx">data-busy.gdx</a>.</p><h4 id="objective3"><a class="markdownIt-Anchor" href="#objective3"></a> Objective3:</h4><p>Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason.</p><h2 id="analyze"><a class="markdownIt-Anchor" href="#analyze"></a> Analyze:</h2><h4 id="the-approach-used"><a class="markdownIt-Anchor" href="#the-approach-used"></a> The approach used.</h4><p>We organized the requests from all the students based on their (enter_hour, public_hour) with the help of variables, respectively, n_pe_public and n_pe_quiet. These are represented as the maxmize number of people each regetangle block could contain in the graph below.</p><p><img src="https://wp1sqw.bn.files.1drv.com/y4mGlSqlxLGHhN5pyoGcH3iKswCkHuysM7gqvGAQngOErEEKi-Hv-f6xWD0fqTSnkNK68jTEcS-3uJ0IFAxRwJJRHD1ayVKXlGz63b4vLtN5XX8SYWNFLgGtBo9478yzbQE9DeF-trxhwcXutuXnuRUJyE4JeqavCYhFg3FhAwh3TobvqdG_epxR54zVTk4NVQxrn490NA8feKjUHj6n9_LTw?width=4638&amp;height=1625&amp;cropmode=none" alt="Diagram"></p><p>Regarding the opening time of the library, there are two variables called quiet_arrange and public_arrange in a form of tuples (enter_hour, public_hour) as an entry. Based on the graph above, every quiet(open_hour, quiet_hour) variable contains # of people staying on seat at certain time interval and the duration of his or her studying hours is illustrated as the length of each block. Same case for public area. After we synthesized all the cases of students from his or her entering times to leaving times, we could form a complete diagram and the left graph above is a snippet.</p><p>In general, we utilized a dynamic set determined by students’ entering time and the duration of studying in either quiet or public area during each time interval from 8 am to 9 pm to measure the seat arrangement. This dynamic dataset is called “visible_quiet”, a 3-dimensional set, with sets (o, enter_hour, quiet_hour). It means, for every time interval o(as 10:00 in above) starting from 8 am, the (open_hour, quiet_hour) should be counted once, which is shown as shaded blocks on the top right side. In each time interval, a decent amount of students will enter the library and the total number during that time will be calculated. For example, based on the graph above, quiet(“8”, “3”) records the number of students who enter the library at 8 am and stay for 3 hours. If another student comes at 10 am and has also studied for 3 hours, we should count both of them in the time interval from 10 am to 11 am (the shaded area). The sum of number of students that shaded blocks contains should be less or equal to a corresponding variable(called quiet_chairs in code). Similiar case would be applied to public case.</p><p>We also took the seat-switching situations as considerations. The number of students in quiet area in certain interval should be the sum of the number of current students, those who just arrive, and those who switch from the public area to the quiet area(named as switch_p2q in code). Same thing applies to the arrangement of the public area(in a variable called switch_q2p).</p><p>Our objective is to maximize the total efficiency. We realized the utilization of calculators, chargers and laptops will also exert significant effects on students’ efficiency. Considering that it was hard to calculate them with our original model, we splited the entire block into two stages demonstrated in two blocks in <a href="#o11">obj1</a>. The <a href="#o1s1">first stage</a> begin from the head of introduction and end at <a href="#end_o1">here</a>. Because we had them in the problem description part, we solved the <a href="#o1s2">second stage</a> and use this model to discover data in obj2. In the <a href="#o1s1">first stage</a>, the model is calculated by multiplying the base total efficiency coefficients with the number of hours students spend in each area. The base total efficiency coefficients depend on area and hours, so they are pre-calculated and stored in eff_quiet and eff_public in the code. We also considered the situation whether students switch areas or utilize equipments. For different scenarios, we multiplied hours with different coefficients. More details will be discussed in the section below.</p><p>For the <a href="#o1s2">second stage</a> of the problem, we employed some variables similar to ca_need_public, ca_need_quiet to represent the machines borrowed at pair (enter_hour, quiet_hour). We organized the needs for devices at first and set up them as an upper bound. The other procedures are similar to methods using in stage one. One difference is that we utilized some variableS for spliting, similar to ca_need_public_1, ca_need_public_2. They are used later for the objective function. Because the objective function has two variables with different conditions(quiet_arrange and switch_p2q) in each type(pblic or quiet) taking different final coefficient, we need to split the variable to represent those conditions. Because we try to maximizing the problem, the program will always fill the quiet_arrange first as it has a higher coefficient in general.</p><p>In terms of the number of equipments, we assumed that the requests for equipments should be greater than the number the library has. Given a simple example. If four students all require to use calculator but currently, the library only has 3 calculators available, we try to find a way to give the calculators to students in order to maximize the total efficiency.</p><h4 id="optimization-model"><a class="markdownIt-Anchor" href="#optimization-model"></a> Optimization model</h4><p>We first counted the total number of people in either public or private areas based on the avalibility. Then, we calculated the efficiency of both regular studying hour, switching situations, and, equipment check-out situations and attempt to maxmize the total efficiency. We finally displayed students who have been chosen to study in certain seats in certain time interval.</p><p>We simplified the representation so we only represented the quiet study room and calculator case.<br>In the model, we had those variables:</p><ul><li>let o to be a set of open hour from 8 to 21.</li><li>let q to be a set of people can stay in the quiet room, from 1 to 10.</li><li>let ty be the type of public object, it could be chat or project.</li><li>let qi be the set of original people record identity number, and cj be the category, like enter, hours, calculator</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mi>u</mi><mi>i</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Quiet_{ml}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mord mathit">u</span><span class="mord mathit">i</span><span class="mord mathit">e</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span><span class="mord mathit" style="margin-right:0.01968em;">l</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi>q</mi><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo>∈</mo><mi>c</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">m\in qi, l\in cj</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mrel">∈</span><span class="mord mathit">c</span><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span> represent the dataset.</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>q</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">sq_{ijk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">i,j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible.  For example, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mn>9</mn><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{9jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">9</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> = {(8,2),(8,3),(8,4)…(8,10),(9,1),(9,2),(9,3)…(9,10)}</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>p</mi><mrow><mi>l</mi><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">sp_{lijk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∈</mo><mi>t</mi><mi>y</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">l\in ty, i,j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mrel">∈</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible.  For example, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mn>1</mn><mn>9</mn><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{19jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">9</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> = {(8,2),(8,3),(8,4)…(8,6),(9,1),(9,2),(9,3)…(9,6)}</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.05764em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> to be the Base total efficiency base vector on time k.</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mn>2</mn><msub><mi>Q</mi><mrow><mi>l</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P2Q_{ljk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∈</mo><mi>t</mi><mi>y</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">l\in ty, j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mrel">∈</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> to be people switch from public area to quiet area enter at hour j and stay for hours k. Same mechanism for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mn>2</mn><mi>P</mi></mrow><annotation encoding="application/x-tex">Q2P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.13889em;">P</span></span></span></span></li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">QC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mord mathit" style="margin-right:0.07153em;">C</span></span></span></span> be the chairs should be in quiet room.</li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the number of people accepted to the library to maximize total efficiency</li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>Q</mi><msub><mn>1</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CQ1_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">1</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the number of calculator split for quiet area  accepted to the library to maximize total efficiency</li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>Q</mi><msub><mn>2</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CQ2_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the number of calculator accepted to the library to maximize total efficiency</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">CF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit" style="margin-right:0.13889em;">F</span></span></span></span> be the increment factor of efficiency of using calculator, let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>W</mi><mi>P</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">SWPQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathit">Q</span></span></span></span> be the factor of efficiency of switch from public to quiet</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>P</mi><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">NPQ_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the number of people requested to stay in the library.</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>C</mi><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">NCQ_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span> be the number of calculator requested to stay in the library.</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><msub><mi>Q</mi><mrow><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">SQ_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi>q</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">m\in qi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.65952em;"></span><span class="strut bottom" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mord mathit">i</span></span></span></span> be a binary variable record which people is selected</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>Q</mi><msub><mi>C</mi><mrow><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">SQC_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi>q</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">m\in qi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.65952em;"></span><span class="strut bottom" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mord mathit">i</span></span></span></span> be a binary variable record which people has calculator</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>x</mi><msub><mo>∑</mo><mrow><mi>k</mi><mo>∈</mo><mi>q</mi></mrow></msub><msubsup><mi>E</mi><mrow><mi>k</mi></mrow><mi>T</mi></msubsup><mo>(</mo><msub><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><mi>o</mi></mrow></msub><mo>(</mo><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>+</mo><mi>C</mi><mi>Q</mi><msub><mn>1</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>∗</mo><mi>C</mi><mi>F</mi><mo>+</mo><mo>(</mo><msub><mo>∑</mo><mrow><mi>l</mi><mo>∈</mo><mi>t</mi><mi>y</mi></mrow></msub><mi>P</mi><mn>2</mn><msub><mi>Q</mi><mrow><mi>l</mi><mi>j</mi><mi>k</mi></mrow></msub><mo>+</mo><mi>C</mi><mi>Q</mi><msub><mn>2</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>∗</mo><mi>C</mi><mi>F</mi><mo>)</mo><mo>∗</mo><mi>S</mi><mi>W</mi><mi>P</mi><mi>Q</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">Max \sum_{k\in q}E_{k}^T(\sum_{j\in o}(Q_{jk}+CQ1_{jk}*CF+(\sum_{l\in ty}P2Q_{ljk}+CQ2_{jk}*CF)*SWPQ))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.050005em;"></span><span class="strut bottom" style="height:2.488226em;vertical-align:-1.438221em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="mop op-limits"><span class="vlist"><span style="top:1.202113em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-0.000005000000000032756em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="vlist"><span style="top:0.247em;margin-left:-0.05764em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.4129999999999999em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">T</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist"><span style="top:1.177669em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">∈</span><span class="mord mathit">o</span></span></span></span><span style="top:-0.000005000000000032756em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">1</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mbin">+</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist"><span style="top:1.202113em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mrel">∈</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.000005000000000032756em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathit">Q</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>\begin{align}\begin{split}s.t.\quad & CQ1_{jk} + CQ2_{jk} \le NCQ_{jk} && \forall j\in o,k\in q \\& Q_{jk} \le NPQ_{jk}&&\forall j\in o,k\in q\\& 1000\ge QC&\\& \sum_{j,k}Q_{jk}+\sum_{l,j,k}P2Q_{ljk}\le QC &&\forall i\in o, \forall Q_{jk}\in sq_{ijk}, \forall P2Q_{ljk}\in sp_{ijk} \\& \sum_{m\in qi} SQ_{m} = Q_{jk}&& \forall j\in o, k\in q,\forall m\in \{m | Quiet_{m"enter"}=j\\&&& \&Quiet_{m"hours"}=k\}\\& \sum_{m\in qi} SQC_{m} \ge CQ1_{jk} + CQ2_{jk} && \forall j\in o, k\in q,\forall m\in \{m | Quiet_{m"enter"}=j\\&&& \&Quiet_{m"hours"}=k\& Quiet_{m"Calculator"}=1\}\\& \sum_{j,k}(CQ1_{jk} + CQ2_{jk})\le 20 &&\forall i\in o, \forall CQ1_{jk}, CQ2_{jk}\in sq_{ijk} \\& CQ1_{jk} \le Q_{jk}+Q2P_{jk}&&\forall i\in o, k\in q\end{split}\end{align}<p>Most of other formulas for the entire project is similiar to the methods using above, so we choose to not write them.</p><p>For the solutions, see <a href="#p1">here</a> for solution of obj1, <a href="#p2">here</a> for solution of obj2, <a href="#p33">here</a> for solution of obj3</p><h4 id="processing-of-the-solution"><a class="markdownIt-Anchor" href="#processing-of-the-solution"></a> Processing of the solution</h4><p><br> <a href="#p1">processing for the first objective</a></p><img src="/2019/projects/College-library-optimization-problem/output_9_4.png" title="test"><p><br> <a href="#p2">processing for the second objective</a></p><img src="/2019/projects/College-library-optimization-problem/output_18_3.png" title="test"><p><br> <a href="#p33">processing for the third objective</a></p><img src="/2019/projects/College-library-optimization-problem/output_23_1.png" title="test"><h4 id="some-brief-conclusion"><a class="markdownIt-Anchor" href="#some-brief-conclusion"></a> Some brief conclusion</h4><p><br>As shown in area below<br><br> <a href="#c1">Conclusion for the first objective</a><br>Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen.</p><p>For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it.</p><p><br> <a href="#c2">Conclusion for the second objective</a><br>As we mentioned in the problem, we provided the permission in each case. But it is not useful.</p><p>By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period.</p><p><br> <a href="#c31">Conclusion for the third objective</a><br>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><p><br> <a href="#c3">Conclusion for the entire objective</a><br>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><h4 id="further-thoughts"><a class="markdownIt-Anchor" href="#further-thoughts"></a> Further thoughts:</h4><p><br>Furthermore, there are lots of improvements that could be done.</p><ul><li><p>Since our model separates the public and quiet areas in our parameter, it is hard for us to simplify our model. In the future model, we could try to combine these two into one parameter to make it simplier.</p></li><li><p>The constraints, dealing ways might need to be improved. And there might be some small errors as there are too many equations. We checked them for multiple times, but it is hard to guarantee that every place is perfectly correct.</p></li><li><p>And the model could only make sense if they have the real data input. Right now, we only have fake data.</p></li><li><p>Solution is not unique(for selection of people). Maybe we don’t have to find which person should be given the permission. We could find the number of people we should accept in each case.</p></li><li><p>we always want to keep minimum change to what we setup in the previous submission, A lot of places could be improved actually. Like obj2, execute_load command would be better.</p></li><li><p>like what we discussed in <a href="#p3">obj3</a>, some more discoveries could be done, including if the library needs to buy more calculators or not.</p></li><li><p>And, not all people are on time in real case. In this problem, we assume data are collected from survey or somethimg. So, there is no person would have a time duration of 2:15. But in real case, this would happen. So, it would be helpful to invite error vectors to describe this and form the problem.</p></li></ul><h2 id="solution"><a class="markdownIt-Anchor" href="#solution"></a> Solution:</h2><p>Important startup of jupyter notebook interface:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.display <span class="keyword">import</span> display, HTML</span><br><span class="line">display(HTML(<span class="string">"&lt;style&gt;.container &#123; width:95% !important; &#125;&lt;/style&gt;"</span>))</span><br><span class="line"><span class="comment"># Load the gams extension</span></span><br><span class="line">%load_ext gams_magic</span><br><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><p><a id="o11"></a></p><h4 id="objective1-2"><a class="markdownIt-Anchor" href="#objective1-2"></a> Objective1:</h4><p>How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library?</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">%%gams </span><br><span class="line"><span class="comment">* initialize data</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$title</span> College library optimization problem     Katherine Fu &amp; Shaokang Jiang</span></span><br><span class="line"><span class="keyword">set</span> public_i, public_j, quiet_i, quiet_j, hours /<span class="number">1</span>*<span class="number">10</span>/<span class="comment">, public_hour(hours)</span> /<span class="number">1</span>*<span class="number">6</span>/<span class="comment">, quiet_hour(hours)</span> /<span class="number">1</span>*<span class="number">10</span>/<span class="comment">, enter_hour</span> /<span class="number">8</span>*<span class="number">20</span>/<span class="comment">, types</span> <span class="comment">"1:project 2:chatting"</span> /<span class="number">1</span>*<span class="number">2</span>/;</span><br><span class="line"><span class="keyword">alias</span>(enter_hour, o);</span><br><span class="line"><span class="keyword">parameter</span></span><br><span class="line">    Public(public_i,public_j),</span><br><span class="line">    Quiet(quiet_i,quiet_j)</span><br><span class="line">    n_pe_public(types, enter_hour, public_hour)</span><br><span class="line">    n_pe_quiet(enter_hour, quiet_hour)</span><br><span class="line">    eff_public(types, public_hour)</span><br><span class="line">    eff_quiet(quiet_hour);</span><br><span class="line"><span class="keyword">option</span> optcr = <span class="number">0</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line"><span class="keyword">scalar</span> total_limit /<span class="number">1000</span>/<span class="comment">, chat_low</span> /<span class="number">10</span>/<span class="comment">, q2p</span> <span class="comment">"switch efficiency factor"</span> /<span class="number">0.8</span>/<span class="comment">, p2q</span> <span class="comment">"switch efficiency factor"</span> /<span class="number">0.3</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">* dynamic set of visibility</span></span><br><span class="line"><span class="keyword">set</span> visible_public(o, enter_hour, public_hour) <span class="comment">"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it"</span></span><br><span class="line">    visible_quiet(o, enter_hour, quiet_hour) <span class="comment">"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it"</span>;</span><br><span class="line">visible_public(o, enter_hour, public_hour) = <span class="keyword">yes</span><span class="symbol">$</span>(<span class="keyword">ord</span>(o)&lt;<span class="keyword">ord</span>(enter_hour)+<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> <span class="keyword">ord</span>(o)&gt;=<span class="keyword">ord</span>(enter_hour));</span><br><span class="line">visible_quiet(o, enter_hour, quiet_hour) = <span class="keyword">yes</span><span class="symbol">$</span>(<span class="keyword">ord</span>(o)&lt;<span class="keyword">ord</span>(enter_hour)+<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> <span class="keyword">ord</span>(o)&gt;=<span class="keyword">ord</span>(enter_hour));</span><br><span class="line"></span><br><span class="line"><span class="comment">* calculate the base total efficiency for each (enter_hour, quiet_hour)</span></span><br><span class="line">eff_public(<span class="string">"1"</span>, public_hour) = (<span class="number">1.1</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&lt;=<span class="number">2</span>) + (<span class="number">1.2</span>+<span class="number">0.5</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&gt;<span class="number">2</span>);</span><br><span class="line">eff_public(<span class="string">"2"</span>, public_hour) = (<span class="number">0.12</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&lt;=<span class="number">4</span>) + (<span class="number">0.28</span>+<span class="number">0.05</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&gt;<span class="number">4</span>);</span><br><span class="line">eff_quiet(quiet_hour) = (<span class="keyword">ord</span>(quiet_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(quiet_hour)&lt;=<span class="number">5</span>) + (<span class="number">2</span>+<span class="number">0.6</span>*<span class="keyword">ord</span>(quiet_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(quiet_hour)&gt;<span class="number">5</span>);</span><br></pre></td></tr></table></figure><p><a id="o1s1"></a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="comment">* declare variables for first model to use</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span> public_chair <span class="comment">"# of chairs for public area"</span><span class="comment">, quiet_chair</span> <span class="comment">"# of chairs for quiet area"</span><span class="comment">,</span></span><br><span class="line">            public_arrange(types, enter_hour, public_hour) <span class="comment">"# of chairs for types for public area at hour enter_hour and stay at here for public_hour"</span><span class="comment">,</span></span><br><span class="line">            quiet_arrange(enter_hour, quiet_hour) <span class="comment">"# of chairs for quiet area at hour enter_hour and stay at here for quiet hour"</span></span><br><span class="line">            switch_q2p(enter_hour, quiet_hour) <span class="comment">"# of chairs switched from quiet area to public area"</span></span><br><span class="line">            switch_p2q(types, enter_hour, public_hour) <span class="comment">"# of chairs switched from public area to quiet area"</span>;</span><br><span class="line">public_chair.up = total_limit;</span><br><span class="line">quiet_chair.up = total_limit;</span><br><span class="line">public_arrange.up(types, enter_hour, public_hour) = total_limit;</span><br><span class="line">quiet_arrange.up(enter_hour, quiet_hour) = total_limit;</span><br><span class="line">switch_q2p.up(enter_hour, quiet_hour) = total_limit;</span><br><span class="line">switch_p2q.up(types, enter_hour, public_hour) = total_limit;</span><br><span class="line"><span class="keyword">free</span> <span class="keyword">variable</span> total_efficiency;</span><br><span class="line"><span class="keyword">binary</span> <span class="keyword">variable</span> select_public(public_i), select_quiet(quiet_i);</span><br><span class="line"></span><br><span class="line"><span class="comment">* calculate total number of people</span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line"></span><br><span class="line"><span class="keyword">equations</span> conn1 <span class="comment">"connection between public_chair and public_arrange and switch_q2p at every time"</span></span><br><span class="line">          conn2 <span class="comment">"connection between quiet_chair and quiet_arrange and switch_p2q"</span></span><br><span class="line">          objective <span class="comment">"Calculate the total efficiency"</span></span><br><span class="line">          limit <span class="comment">"limitation of total chairs"</span></span><br><span class="line">          people_public <span class="comment">"restriction of # of people in public area"</span></span><br><span class="line">          people_quiet <span class="comment">"restriction of # of people in quiet area"</span></span><br><span class="line">          selection_public <span class="comment">"people selected at public area"</span></span><br><span class="line">          selection_quiet <span class="comment">"people selected at quiet area"</span></span><br><span class="line">          chatting_lower <span class="comment">"Hold constraints for the lower limitation for chatting people"</span>;</span><br><span class="line"><span class="function"><span class="title">conn1</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), switch_q2p(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> public_chair;</span><br><span class="line"><span class="function"><span class="title">conn2</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) + <span class="keyword">sum</span>((types, enter_hour, public_hour), switch_p2q(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) <span class="symbol">=l=</span> quiet_chair;</span><br><span class="line"><span class="function"><span class="title">limit</span></span>..</span><br><span class="line">    total_limit <span class="symbol">=g=</span> public_chair + quiet_chair;</span><br><span class="line"><span class="function"><span class="title">objective</span></span>..</span><br><span class="line">    total_efficiency <span class="symbol">=e=</span> <span class="keyword">sum</span>((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)*eff_public(types, public_hour) + switch_p2q(types, enter_hour, public_hour)*eff_public(types, public_hour)*p2q) +</span><br><span class="line">                         <span class="keyword">sum</span>((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)*eff_quiet(quiet_hour) + switch_q2p(enter_hour, quiet_hour)*eff_quiet(quiet_hour)*q2p);</span><br><span class="line"><span class="function"><span class="title">people_public</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    public_arrange(types, enter_hour, public_hour) + switch_p2q(types, enter_hour, public_hour) <span class="symbol">=l=</span> n_pe_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">people_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour) <span class="symbol">=l=</span> n_pe_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour)), select_quiet(quiet_i)) <span class="symbol">=e=</span> quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_public</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour)), select_public(public_i)) <span class="symbol">=e=</span> switch_p2q(types, enter_hour, public_hour) + public_arrange(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">chatting_lower</span></span>..</span><br><span class="line">    <span class="keyword">sum</span>((enter_hour, public_hour), public_arrange(<span class="string">"2"</span>, enter_hour, public_hour)) <span class="symbol">=g=</span> chat_low;</span><br><span class="line"><span class="keyword">model</span> simple_obj1 /conn1, conn2, limit, objective, people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;</span><br><span class="line"><span class="keyword">solve</span> simple_obj1 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> run /<span class="number">1</span>*<span class="number">2</span>/<span class="comment">, room</span> /public, quiet/;</span><br><span class="line"><span class="keyword">parameter</span> selection_quiet_(run, quiet_i), selection_public_(run, public_i), chairs(run, room);</span><br><span class="line">selection_public_(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>9699.148</td>      <td>601</td>      <td>4403</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.038</td>    </tr>  </tbody></table><p><a id="o1s2"></a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="comment">* increment of scalar for each factor</span></span><br><span class="line"><span class="keyword">scalar</span> calculator_factor /<span class="number">0.2</span>/<span class="comment">, laptop_factor</span> /<span class="number">0.1</span>/<span class="comment">, charger_factor</span> /<span class="number">0.3</span>/<span class="comment">, calculators</span> /<span class="number">30</span>/<span class="comment">, laptops</span> /<span class="number">10</span>/<span class="comment">, chargers</span> /<span class="number">10</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">* represent the needs of each device at specific time.</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span> ca_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet(enter_hour, quiet_hour);</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"></span><br><span class="line"><span class="comment">* declaration for split variables</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span>                   </span><br><span class="line">                  ca_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  ca_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet_2(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet_2(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="comment">* ca_limit : limitation from total avaliable devices or limit concurrently exist object, ca_limit_quiet: limitation from calculator needs base</span></span><br><span class="line"><span class="keyword">equation</span> objective_refine, ca_limit_public, ca_limit_quiet, ch_limit_public, ch_limit_quiet, lap_limit_public, lap_limit_quiet,</span><br><span class="line">        selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet,</span><br><span class="line">        ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet;</span><br><span class="line"></span><br><span class="line"><span class="comment">* because we are maxmizing efficiency, so we only put calculate people to switch list if quiet_arrange is full</span></span><br><span class="line"><span class="function"><span class="title">objective_refine</span></span>..</span><br><span class="line">    total_efficiency <span class="symbol">=e=</span> <span class="keyword">sum</span>((types, enter_hour, public_hour), (public_arrange(types, enter_hour, public_hour)+ ca_need_public_1(types, enter_hour, public_hour)*calculator_factor + ch_need_public_1(types, enter_hour, public_hour)*charger_factor + lap_need_public_1(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)</span><br><span class="line">                                + (switch_p2q(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour)*calculator_factor + ch_need_public_2(types, enter_hour, public_hour)*charger_factor + lap_need_public_2(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)*p2q) +</span><br><span class="line">                         <span class="keyword">sum</span>((enter_hour, quiet_hour), (quiet_arrange(enter_hour, quiet_hour) + ca_need_quiet_1(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_1(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_1(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)</span><br><span class="line">                                + (switch_q2p(enter_hour, quiet_hour)+ ca_need_quiet_2(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_2(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_2(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)*q2p);</span><br><span class="line"><span class="comment">* this series of equations should be =g= because it is permitted that 4 people are permitted to come to the library but the library only have 3 calculators.</span></span><br><span class="line"><span class="function"><span class="title">selection_ca_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"Calculator"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> ca_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ca_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"Calculator"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> ca_need_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ch_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"charger"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> ch_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ch_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"charger"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> ch_need_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_la_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"laptop"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> lap_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_la_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"laptop"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> lap_need_quiet(enter_hour, quiet_hour);   </span><br><span class="line"><span class="function"><span class="title">ca_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), ca_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), ca_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> calculators;</span><br><span class="line"><span class="function"><span class="title">ch_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), ch_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), ch_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> chargers;    </span><br><span class="line"><span class="function"><span class="title">la_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), lap_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), lap_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> laptops;</span><br><span class="line"><span class="function"><span class="title">split_ca_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ca_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> ca_need_public_1(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_ca_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ca_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> ca_need_quiet_1(enter_hour, quiet_hour) + ca_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_ch_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ch_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> ch_need_public_1(types, enter_hour, public_hour) + ch_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_ch_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ch_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> ch_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_la_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    lap_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> lap_need_public_1(types, enter_hour, public_hour) + lap_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_la_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    lap_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> lap_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_limit_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ca_need_public_1(types, enter_hour, public_hour) + ch_need_public_1(types, enter_hour, public_hour) + lap_need_public_1(types, enter_hour, public_hour) <span class="symbol">=l=</span> public_arrange(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_limit_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ca_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_1(enter_hour, quiet_hour) <span class="symbol">=l=</span> quiet_arrange(enter_hour, quiet_hour);</span><br><span class="line"><span class="keyword">model</span> simple_obj2 /conn1, conn2, limit, objective_refine, selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet,</span><br><span class="line">        ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet,</span><br><span class="line">        people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line"></span><br><span class="line"><span class="comment">* save result in parameter</span></span><br><span class="line">selection_public_(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>9830.486</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.067</td>    </tr>  </tbody></table><p><a id="p1"></a></p><h5 id="plot-result-at-area-below"><a class="markdownIt-Anchor" href="#plot-result-at-area-below"></a> Plot result at area below:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d chairs selection_public_ selection_quiet_</span><br><span class="line">display(chairs)</span><br><span class="line">chairs.set_index([<span class="string">'run'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line">fig,(ax0,ax1) = plt.subplots(ncols=<span class="number">2</span>,figsize=(<span class="number">14</span>,<span class="number">5</span>))</span><br><span class="line">val=chairs.value.unique()</span><br><span class="line">print(val)</span><br><span class="line">labels=[<span class="string">'public'</span>, <span class="string">'quiet'</span>]</span><br><span class="line">chairs.loc[<span class="string">"1"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax0.pie(val,autopct=<span class="string">'%1.2f'</span>,labels=labels)</span><br><span class="line">ax0.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax0.set_title(<span class="string">'The number of students without calculation of equipments'</span>);</span><br><span class="line">chairs.loc[<span class="string">"2"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax1.pie(val,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax1.set_title(<span class="string">'The number of students with calculation of equipments'</span>);</span><br><span class="line">display(selection_public_, selection_quiet_)</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>room</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>public</td>      <td>321.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>quiet</td>      <td>679.0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>public</td>      <td>321.0</td>    </tr>    <tr>      <td>3</td>      <td>2</td>      <td>quiet</td>      <td>679.0</td>    </tr>  </tbody></table><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>public_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2787</td>      <td>2</td>      <td>1922</td>      <td>1.0</td>    </tr>    <tr>      <td>2788</td>      <td>2</td>      <td>1923</td>      <td>1.0</td>    </tr>    <tr>      <td>2789</td>      <td>2</td>      <td>1924</td>      <td>1.0</td>    </tr>    <tr>      <td>2790</td>      <td>2</td>      <td>1925</td>      <td>1.0</td>    </tr>    <tr>      <td>2791</td>      <td>2</td>      <td>1926</td>      <td>1.0</td>    </tr>  </tbody></table><p>2792 rows × 3 columns</p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>quiet_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3597</td>      <td>2</td>      <td>1898</td>      <td>1.0</td>    </tr>    <tr>      <td>3598</td>      <td>2</td>      <td>1899</td>      <td>1.0</td>    </tr>    <tr>      <td>3599</td>      <td>2</td>      <td>1900</td>      <td>1.0</td>    </tr>    <tr>      <td>3600</td>      <td>2</td>      <td>1901</td>      <td>1.0</td>    </tr>    <tr>      <td>3601</td>      <td>2</td>      <td>1902</td>      <td>1.0</td>    </tr>  </tbody></table><p>3602 rows × 3 columns</p><img src="/2019/projects/College-library-optimization-problem/output_9_4.png" title="test"><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">solve</span> simple_obj1 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">selection_public_(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">selection_public_(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>704.900</td>      <td>601</td>      <td>4403</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.019</td>    </tr>    <tr>      <td>1</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>791.634</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.086</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d chairs</span><br><span class="line"></span><br><span class="line"><span class="comment">#chairs.set_index(['run'],inplace=True)</span></span><br><span class="line">display(chairs)</span><br><span class="line">fig,(ax0,ax1) = plt.subplots(ncols=<span class="number">2</span>,figsize=(<span class="number">14</span>,<span class="number">5</span>))</span><br><span class="line">val=chairs.loc[chairs.run == <span class="string">"2"</span>].value</span><br><span class="line">vals=chairs.loc[chairs.run == <span class="string">"1"</span>].value</span><br><span class="line"></span><br><span class="line">labels=[<span class="string">'public'</span>, <span class="string">'quiet'</span>]</span><br><span class="line">ax0.set_title(<span class="string">'The number of students  without calculation of equipments'</span>);</span><br><span class="line">ax0.pie(vals,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">chairs.loc[chairs.run == <span class="string">"2"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">chairs.loc[chairs.run == <span class="string">"1"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax1.pie(val,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax1.set_title(<span class="string">'The number of students with calculation of equipments'</span>);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>room</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>public</td>      <td>50.0</td>    </tr>    <tr>      <td>1</td>      <td>2</td>      <td>public</td>      <td>25.0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>quiet</td>      <td>25.0</td>    </tr>  </tbody></table><img src="/2019/projects/College-library-optimization-problem/output_11_1.png" title="test"><p><a id="c1"></a></p><h5 id="conclusion-for-this-part"><a class="markdownIt-Anchor" href="#conclusion-for-this-part"></a> Conclusion for this part:</h5><p>Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen.</p><p>For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it.</p><h4 id="objective2-2"><a class="markdownIt-Anchor" href="#objective2-2"></a> Objective2:</h4><p>More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">set</span> obj2 <span class="comment">"1:free 2:middle 3:busy"</span> /<span class="number">1</span>*<span class="number">3</span>/;</span><br><span class="line"><span class="keyword">parameter</span> problem2(obj2, room), selection_problem2_quiet(obj2,quiet_i),  selection_problem2_public(obj2,public_i);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-free.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>6809.384</td>      <td>2642</td>      <td>5873</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.05</td>    </tr>  </tbody></table><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-middle.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>8038.18</td>      <td>2642</td>      <td>6342</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.056</td>    </tr>  </tbody></table><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-busy.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"3"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"3"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"3"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"3"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>9830.486</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.066</td>    </tr>  </tbody></table><p><a id="p2"></a></p><h5 id="plot-result-at-area-below-2"><a class="markdownIt-Anchor" href="#plot-result-at-area-below-2"></a> Plot result at area below:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d problem2 selection_problem2_quiet selection_problem2_public</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">display(selection_problem2_quiet, selection_problem2_public);</span><br><span class="line">display(problem2)</span><br><span class="line">data = np.array(problem2.loc[problem2.room==<span class="string">"public"</span>]).tolist()</span><br><span class="line">public = list()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    public.append(i[<span class="number">2</span>]);</span><br><span class="line">data = np.array(problem2.loc[problem2.room==<span class="string">"quiet"</span>]).tolist()</span><br><span class="line">quiet = list()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    quiet.append(i[<span class="number">2</span>]);</span><br><span class="line">x = [<span class="string">"free"</span>, <span class="string">"middle"</span>, <span class="string">"bussy"</span>]</span><br><span class="line">plt.plot(x, public, marker=<span class="string">'o'</span>, mec=<span class="string">'r'</span>, mfc=<span class="string">'w'</span>,label=<span class="string">"public"</span>)</span><br><span class="line">plt.plot(x, quiet, marker=<span class="string">'*'</span>, ms=<span class="number">10</span>,label=<span class="string">"quiet"</span>)</span><br><span class="line">plt.legend() </span><br><span class="line">plt.title(<span class="string">"Seat arrangement for different time"</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>obj2</th>      <th>quiet_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4620</td>      <td>3</td>      <td>1898</td>      <td>1.0</td>    </tr>    <tr>      <td>4621</td>      <td>3</td>      <td>1899</td>      <td>1.0</td>    </tr>    <tr>      <td>4622</td>      <td>3</td>      <td>1900</td>      <td>1.0</td>    </tr>    <tr>      <td>4623</td>      <td>3</td>      <td>1901</td>      <td>1.0</td>    </tr>    <tr>      <td>4624</td>      <td>3</td>      <td>1902</td>      <td>1.0</td>    </tr>  </tbody></table><p>4625 rows × 3 columns</p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>obj2</th>      <th>public_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4603</td>      <td>3</td>      <td>1922</td>      <td>1.0</td>    </tr>    <tr>      <td>4604</td>      <td>3</td>      <td>1923</td>      <td>1.0</td>    </tr>    <tr>      <td>4605</td>      <td>3</td>      <td>1924</td>      <td>1.0</td>    </tr>    <tr>      <td>4606</td>      <td>3</td>      <td>1925</td>      <td>1.0</td>    </tr>    <tr>      <td>4607</td>      <td>3</td>      <td>1926</td>      <td>1.0</td>    </tr>  </tbody></table><p>4608 rows × 3 columns</p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>obj2</th>      <th>room</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>public</td>      <td>556.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>quiet</td>      <td>444.0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>public</td>      <td>453.0</td>    </tr>    <tr>      <td>3</td>      <td>2</td>      <td>quiet</td>      <td>547.0</td>    </tr>    <tr>      <td>4</td>      <td>3</td>      <td>public</td>      <td>321.0</td>    </tr>    <tr>      <td>5</td>      <td>3</td>      <td>quiet</td>      <td>679.0</td>    </tr>  </tbody></table><img src="/2019/projects/College-library-optimization-problem/output_18_3.png" title="test"><p><a id="c2"></a></p><h5 id="conclusion-for-this-part-2"><a class="markdownIt-Anchor" href="#conclusion-for-this-part-2"></a> Conclusion for this part:</h5><p>As we mentioned in the problem, we provided the permission in each case. But it is not useful.</p><p>By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period.</p><p><a id="p3"></a></p><h4 id="objective3-2"><a class="markdownIt-Anchor" href="#objective3-2"></a> Objective3:</h4><p>Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="keyword">set</span> limits /<span class="number">1</span>*<span class="number">200</span>/;</span><br><span class="line"><span class="keyword">parameter</span> n_result(limits);</span><br><span class="line"><span class="keyword">loop</span>(limits,</span><br><span class="line">     total_limit = <span class="keyword">ord</span>(limits)*<span class="number">10</span>;</span><br><span class="line">     <span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">     n_result(limits) = total_efficiency.l;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>165.596</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.11</td>    </tr>    <tr>      <td>1</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>331.180</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.089</td>    </tr>    <tr>      <td>2</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>488.794</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.084</td>    </tr>    <tr>      <td>3</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>642.634</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.085</td>    </tr>    <tr>      <td>4</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>791.634</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.085</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>195</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.055</td>    </tr>    <tr>      <td>196</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.054</td>    </tr>    <tr>      <td>197</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.055</td>    </tr>    <tr>      <td>198</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.054</td>    </tr>    <tr>      <td>199</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.051</td>    </tr>  </tbody></table><p>200 rows × 8 columns</p><a id="p33"></a><h5 id="plot-result-area"><a class="markdownIt-Anchor" href="#plot-result-area"></a> Plot result area:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d n_result</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">ax = plt.gca()</span><br><span class="line">n_result.set_index([<span class="string">'value'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n_result[<span class="string">"limits"</span>]:</span><br><span class="line">    n_result.replace(to_replace = i, value = int(i)*<span class="number">10</span>, inplace=<span class="literal">True</span>) </span><br><span class="line">n_result.reset_index(inplace=<span class="literal">True</span>)</span><br><span class="line">n_result.plot(kind=<span class="string">'line'</span>,x=<span class="string">'limits'</span>,y=<span class="string">'value'</span>,ax=ax)</span><br></pre></td></tr></table></figure><img src="/2019/projects/College-library-optimization-problem/output_23_1.png" title="test"><p><a id="c31"></a></p><h5 id="conclusion-for-this-part-3"><a class="markdownIt-Anchor" href="#conclusion-for-this-part-3"></a> Conclusion for this part</h5><p>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><p><a id="c3"></a></p><h5 id="conclusion-for-this-project"><a class="markdownIt-Anchor" href="#conclusion-for-this-project"></a> Conclusion for this project:</h5><p>In this project, we learned how to use gams and solve a near real case problem. We observe an optimized seat arrangement for library to use. We also see the difference between different time in one semester and the result could be used to guide seat arrangements. At last, we see that 1000 seats might be too small for this library and they need to buy more.</p><p>We spent a lot of time on this project and we learned a lot from it. We also observe that gams system is pretty simple and efficient compared to other language. In the future, we would like to use it for more times on optimization problem.</p>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAMS </tag>
            
            <tag> CPLEX </tag>
            
            <tag> MIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common error while running EOSIO</title>
      <link href="/2019/common-run-eosio/"/>
      <url>/2019/common-run-eosio/</url>
      
        <content type="html"><![CDATA[<h3 id="common-error-and-solution-during-running-and-building-connections-between-eosio-components"><a class="markdownIt-Anchor" href="#common-error-and-solution-during-running-and-building-connections-between-eosio-components"></a> Common error and solution during running and building connections between EOSIO components:</h3><blockquote><p>Error 3050000: Action validate exception<br>Error Details:<br>inline action’s authorizing actor eosio.ram does not exist</p></blockquote><p>Solution: Make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts. Otherwise this error will show up when creating block producer or voter. <a id="more"></a> For more details, see <a href="../EOSIO_local_network/#3">here</a> or <a href="https://developers.eos.io/eosio-nodeos/docs/bios-boot-sequence#section--1-7-create-important-system-accounts-" target="_blank" rel="noopener">here</a>.</p><blockquote><p>Error 3080001: Account using more than allotted RAM usage<br>Error Details:<br>account eosio.ram has insufficient ram; needs 2996 bytes has 0 bytes</p></blockquote><p>Solution: Basically, this error happens when some account has insufficient ram. It depends on the account type you are creating.</p><ul><li>If the account is eosio.***, then it is a system account. If this happens, then make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts.</li><li>If the account is an arbitrary name, then it is a user account(producer/worker). If this is the case, the common error is using wrong command to create new account. For account other than system account, it seems it is required to use  <code>cleos system newaccount [OPTIONS] creator name OwnerKey [ActiveKey]</code>.</li></ul><blockquote><p>Error 3120003: Locked wallet<br>Ensure that your wallet is unlocked before using it!<br>Error Details:<br>You don’t have any unlocked wallet!</p></blockquote><p>Solution: The wallet need to be unlocked before experiment.</p><blockquote><p>Error 3050001: Account name already exists<br>Error Details:<br>Cannot create account named bp1111111111, as that name is already taken</p></blockquote><p>Solution: Use another name.</p><blockquote><p>Error 3050003: eosio_assert_message assertion failure<br>Error Details:<br>assertion failure with message: cannot use transfer flag if delegating to self</p></blockquote><p>Solution: It seems --transfer tag for self transfer is for some old version of EOSIO. Remove it if error happens. Though the error happens, the command still get executed sometime.</p><blockquote><p>assertion failure with message: system contract must first be initialized</p></blockquote><p>Solution: Make sure <code>eosio.msig</code> is a privileged account and Initialize system account. To do those:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio setpriv <span class="string">'["eosio.msig", 1]'</span> -p eosio@active</span><br><span class="line"></span><br><span class="line">cleos push action eosio init <span class="string">'["0", "4,SYS"]'</span> -p eosio@active</span><br></pre></td></tr></table></figure><blockquote><p>Not producing block because I don’t have the private key for EOS5ks6trFhN8xz5mxaDAwQy7qJdjHhNwQbLca6wkYuRKwvGDUAPG</p></blockquote><p>Solution: This message happens when running the very first node in the network, who will produce the genesis block. Make sure the EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh is the same as the EOS_PUB_DEV_KEY in genesis.json. And EOS_PRIV_DEV_KEY is the private key of this public key. For those two files. genesis_start.sh is a file contain the information for the genesis block. genesis_start.sh is a file to start the very first node in the network. For more details, see <a href="../EOSIO_local_network/#Build-local-test-network">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Notes</title>
      <link href="/2019/Hexo-Notes/"/>
      <url>/2019/Hexo-Notes/</url>
      
        <content type="html"><![CDATA[<h3 id="some-notes-for-hexo"><a class="markdownIt-Anchor" href="#some-notes-for-hexo"></a> Some notes for Hexo</h3><p>HEXO is always case sensitive whiling redirecting pages and setting up file properties(yaml).</p><p>Hexo is not good for converting table to html format. The solution is to use html format table directly.</p>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common error while building EOSIO</title>
      <link href="/2019/common-build-eosio/"/>
      <url>/2019/common-build-eosio/</url>
      
        <content type="html"><![CDATA[<h3 id="common-error-and-solution-during-compiling-eosio-components"><a class="markdownIt-Anchor" href="#common-error-and-solution-during-compiling-eosio-components"></a> Common error and solution during compiling EOSIO components:</h3><blockquote><p>Doesn’t have boost or boost library is lower than required.</p></blockquote><p>Solution: It seems the latest version of boost is not in the ubuntu package management right now. I compiled and installed it from source to solve this issue. I installed version 1.67. But the minimum version it requires is 1.57 (I remember).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O boost_1_67_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.67.0/boost_1_67_0.tar.gz/download</span><br><span class="line">tar xzvf boost_1_67_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_67_0/</span><br></pre></td></tr></table></figure><a id="more"></a><p>Then, get the required libraries and setup. The one required at here is icu for boost::regex. But I installed all of them in case they will be needed in some other places.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev libboost-all-dev</span><br><span class="line">./bootstrap.sh --prefix=/usr/</span><br></pre></td></tr></table></figure><p>Then, build it and install it:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./b2 <span class="comment"># Build it</span></span><br><span class="line">sudo ./b2 install <span class="comment"># install it</span></span><br></pre></td></tr></table></figure><blockquote><p>Add the installation prefix of “eosio” to CMAKE_PREFIX_PATH or set<br>“eosio_DIR” to a directory containing one of the above files.  If “eosio”<br>provides a separate development package or SDK, be sure it has been<br>installed.</p></blockquote><p>Solution: Error happens while compiling EOSIO.contracts.</p><ol><li><p>Be sure EOS is compiled and installed from source instead of ubuntu package.</p></li><li><p>If the EOS is compiled and installed from source. You could find the place for this Cmake file easily.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> EOS_BUILD_PATH <span class="comment"># EOS_BUILD_PATH is the directory EOS was cloned to.</span></span><br><span class="line">find . -name <span class="string">"eosio-config.cmake"</span></span><br><span class="line"><span class="built_in">export</span> eosio_DIR=<span class="string">"PATH_FOUND"</span> <span class="comment"># PATH_FOUND is the path found up by the previous command</span></span><br></pre></td></tr></table></figure><p>The path is usually at  <code>EOS_BUILD_PATH/build/lib/cmake/eosio/</code>. And it is good to use absolute directory.</p><p>And then, do <code>./build.sh</code> again.</p></li></ol><blockquote><p>Doesn’t have llvm or doesn’t have required version of llvm while building eosio.cdt.</p></blockquote><p>Solution: llvm package is from another repository. So, add <code>--recursive</code> while git clone.</p><blockquote><p>Did install EOS by using the default installing shell but can not start the program by simply run nodeos from terminal.</p></blockquote><p>Solution: I find this happens on ubuntu 18.04. Use the absolute path to start server instead. Usually, the nodeos program is at <code>EOSIO_BUILD_PATH/build/bin/nodeos</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build EOSIO local network</title>
      <link href="/2019/EOSIO_local_network/"/>
      <url>/2019/EOSIO_local_network/</url>
      
        <content type="html"><![CDATA[<h3 id="some-experience-on-building-eosio-local-network"><a class="markdownIt-Anchor" href="#some-experience-on-building-eosio-local-network"></a> Some experience on building EOSIO local network</h3><h4 id="basic-info"><a class="markdownIt-Anchor" href="#basic-info"></a> Basic info</h4><p>EOSIO is an application based on proof of stake. I am going to discuss my experience on setting up the local test environment for EOSIO. The test version for EOS is 1.7 and test environment is Ubuntu 18.04.<br>The whole system is made up of three components in order to build local environment:</p><ul><li><p><strong>EOS</strong> - Main net. Basic communication</p></li><li><p><strong>EOS.CDT</strong> - Developer package. API for application</p></li><li><p><strong>EOS.CONTRACT</strong> - super user account setup. It store information about different user and send call to system, like create an voter account.</p></li></ul><p>Following is the basic network structure of EOSIO</p><a id="more"></a><ul><li><p>Only one <strong>super account</strong>. It produces blocks based on gensis.json. It can also interact with system to create accounts, register producers.</p></li><li><p>Multiple(21) <strong>block generators</strong>. They will produce(confirm) block once get enough vote</p></li><li><p><strong>Voter</strong>. It could vote producer.</p></li></ul><p>gensis.json is a json file contains the information for the system to produce gensis block. Its structure is as follows:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"initial_timestamp"</span>: <span class="string">"2018-12-05T08:55:11.000"</span>, </span><br><span class="line">  "initial_key": "EOS_PUB_DEV_KEY", 'Only the super account who has the private key relate to this key can produce block'</span><br><span class="line">  "initial_configuration": &#123;</span><br><span class="line">    ... </span><br><span class="line">    "target_block_cpu_usage_pct": 500, 'It doesn't like bitcoind, you could set up everything of the genesis block by yourself.'</span><br><span class="line">    "max_transaction_cpu_usage": 50000,</span><br><span class="line">    "min_transaction_cpu_usage": 100,</span><br><span class="line">    "max_transaction_lifetime": 3600,</span><br><span class="line">    "deferred_trx_expiration_window": 600,</span><br><span class="line">    "max_transaction_delay": 3888000,</span><br><span class="line">    "max_inline_action_size": 4096,</span><br><span class="line">    "max_inline_action_depth": 4,</span><br><span class="line">    "max_authority_depth": 6</span><br><span class="line">  &#125;,</span><br><span class="line">  "initial_chain_id": "0000000000000000000000000000000000000000000000000000000000000000"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For most things in the file is easy to understand. The server is clever, for the string in the json, the server will choose characters he thought it is correct. Confound server thought will be ignored.</p><h5 id="build-install"><a class="markdownIt-Anchor" href="#build-install"></a> Build &amp; install</h5><p>In order to setup a local test environment, EOS.CDT and EOS.CONTRACT have to be compiled on the local machine. Official said EOS is not required to compile locally. But during my test and some hint from <a href="https://github.com/EOSIO/eosio.contracts" target="_blank" rel="noopener">EOS.CONTRACT</a>. It seems it is required. Original official words as follows:</p><blockquote><ol><li><p>First, ensure that your eosio is compiled to the core symbol for the EOSIO blockchain that intend to deploy to.</p></li><li><p>Second, make sure that you have sudo make installed eosio.</p></li><li><p>Then just run the <code>build.sh</code> in the top directory to build all the contracts and the unit tests for these contracts.</p></li></ol></blockquote><blockquote><p>Before compile and run those stuff, make sure the computer has at least 40GB in your home directory and 8GB of memory.</p></blockquote><p><em>To compile EOS locally, do the following:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/EOSIO/eos --recursive</span><br><span class="line"><span class="built_in">cd</span> eos/</span><br><span class="line">./scripts/eosio_build.sh</span><br></pre></td></tr></table></figure><p>It is also required to install this one into root. The build script is at scripts directory right now. And it may take up to 3 hours to build. It could be faster if you are using a multi-core computer.</p><p>It is also recommended to install it. So that it will be easier to use in the future. Just do <code>./scripts/eosio_install.sh</code>. During my test on ubuntu 18.04. The script installed successfully. But I can not run it in the shell.</p><p><em>Then build <a href="https://github.com/EOSIO/eosio.cdt" target="_blank" rel="noopener">eosio.cdt</a>.</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/eosio/eosio.cdt</span><br><span class="line"><span class="built_in">cd</span> eosio.cdt</span><br><span class="line">./build.sh</span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>There should exist at least 10GB to compile this one.</p><p><em>Then build <a href="https://github.com/EOSIO/eosio.contracts" target="_blank" rel="noopener">eosio.contracts</a>.</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EOSIO/eosio.contracts.git</span><br><span class="line">cd eosio.contracts/</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure><p>The building process of eosio.cdt and eosio.contracts is nothing special but time consuming. It might take up to 2 hours to build. And it is impossible to build using multiple cores.</p><p>Some common error and solutions could be found at <a href="../common-build-eosio/">here</a>.</p><h5 id="initialize"><a class="markdownIt-Anchor" href="#initialize"></a> Initialize</h5><p>You need to have an wallet in order to get start. You will have one by doing the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet create --to-console</span><br></pre></td></tr></table></figure><blockquote><p>There is no way to recover password, do remember it.</p></blockquote><p>When you have the password, you could play with cleos. You could use the following command to see full list of subcommand.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>Some useful subcommands are open, unlock, create_key, private_keys. Whenever you want to visit sensitive data, you need to provide the password. To prevent prompted by system, you could use --password to pass in your password.</p><p>Typically, you need to open wallet at first and then unlock to interact with wallet. After all interactions, it is good to lock them.</p><p><em>Batch initialize</em></p><p>The following are scripts might be helpful to initialize for the appropriate data folder and public key-private key pair for multiple(21) nodes.</p><p>To use it, you have to pass in the password as the first attribute</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet open</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 21 `</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span><span class="variable">$i</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cleos wallet unlock  --password <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 21)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">cleos wallet create_key</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cleos wallet private_keys  --password <span class="variable">$1</span>|grep <span class="string">"\""</span>&gt;list</span><br><span class="line"></span><br><span class="line">python3 a.py <span class="comment">#a.py will be discussed below</span></span><br><span class="line">cleos wallet lock</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><a href="http://a.py" target="_blank" rel="noopener">a.py</a> is a python script which will export public-key and private key information into file in case it need to be used in the future. It is always required to have both information of public key and private key when starting a node.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file = open(<span class="string">"list"</span>, <span class="string">"r"</span>) </span><br><span class="line">file1 = open(<span class="string">"li_"</span>, <span class="string">"w"</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">li = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file: </span><br><span class="line">li.append(line.replace(<span class="string">'\"'</span>, <span class="string">''</span>).replace(<span class="string">','</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>))</span><br><span class="line">count+=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(count<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">file1.write(li[i])</span><br><span class="line">file.close()</span><br><span class="line">file1.close()</span><br></pre></td></tr></table></figure><blockquote><p>The key start with EOS and longer is <strong>public key</strong>, like EOS5CZwEpiweHHZpEdHYsU9Q1MEk5zTtqfrcg3TefBzTYG9xdw2gC</p><p>The key which is shorter is <strong>private key</strong>, like this: 5Jarc4qfsXqHcivfGc8qWYTGdQJ5CPy8NeyRjfceXopn9dy3hgR</p></blockquote><p><em>Batch clean</em></p><p>Those are some script that will remove everything. It will make the workspace(including wallet, work folder) be initialized.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line">rm -rf <span class="variable">$DATADIR</span>*;</span><br><span class="line"></span><br><span class="line">cleos wallet open</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">cleos wallet unlock --password <span class="variable">$1</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> a; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> a;</span><br><span class="line">cleos wallet remove_key <span class="variable">$a</span> --password <span class="variable">$1</span></span><br><span class="line"><span class="keyword">done</span> &lt; li_</span><br><span class="line">rm li_</span><br><span class="line">rm list</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">cleos wallet lock</span><br></pre></td></tr></table></figure><blockquote><p>It is good to clean every time after experiment, otherwise blocks generated will occupy too many space. It is 0.5s/blocks.</p></blockquote><h4 id="procedure"><a class="markdownIt-Anchor" href="#procedure"></a> Procedure</h4>  <img alt="Basic procedure" src="https://f5q9jg.bn.files.1drv.com/y4mliL3MZo-_SK5igtd3BDqFS-YkT3YaOVmd-cUxFcdCJDQD0PMnvcbKsLs2SeJutQ9ho3B-tSWCjC_pRp3sAWLpUEFQ9X2_h7DL7Xp0N-NwGtkN1WAl_A7Hz83cpZA4EU4EqURUq9j3petzuFUL3vBssnsJuFLAKFsVaDZ34ymT1rcIMmphV2flpeIvGO7SZZsOCWXxtzZVPi4meg5XPGC5A?width=1280&height=720&cropmode=none" width="100%"> <p>This is the basic procedure. The voter account and block generator account are produced by one super account. Generally speaking, the basic idea is voter will vote the producer they like, block producer are connected together. During the runtime, the procedure is:</p><ul><li><p>Firstly, start producer nodes.</p></li><li><p>Next vote</p></li><li><p>When the block producer has enough votes, block producer will go to confirm blocks.</p></li></ul><p>After doing appropriate settings it should start to confirm blocks. I did’t test this part yet.</p><p>If you want or in some situation, you could link super account together like this, but only the one with appropriate public and private key could generate the block. More specifically, only the one has the private key of the public key in the gensis.json can produce block. Other super accounts nodes could only sync.</p><p>The whole structure like this:</p><img alt="Linked structure" src="https://fzq9jg.bn.files.1drv.com/y4mPFY4a8LfbnWohwk35HzA1vDHDQ-CjNYKvRaKxmvLyM40oaDZz6BuFXy6YlJcXsKQ2De1XGM0jRVjCprRnvAs9pD87cLG359wt-xDj-0FpR0TLY_zYwcO1IWDGJKiKQrwiWouefpY1KG5wjiHAUvCNmT1a13oBQedYAB82QLgwRfBw9TB35FMMrx0MCIgJPB2EZVFiBjwt4LeKLQH-g1Viw?width=1280&height=291&cropmode=none" width="100%"><p>You could use the following command to start multiple super account nodes from gensis status and form the structure shown above:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">password = <span class="string">""</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">password = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line">print(<span class="string">"Please include password"</span>)</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Generate gensis.json</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">file1 = open(<span class="string">"li_"</span>, <span class="string">"r"</span>)</span><br><span class="line">temp = file1.readline()</span><br><span class="line">initial_key = file1.readline()</span><br><span class="line">os.system(<span class="string">'rm -f genesis.json'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"genesis.json"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">    json.dump(&#123;<span class="string">'initial_timestamp'</span>:<span class="string">"2018-12-05T08:55:11.000"</span>, <span class="string">'initial_key'</span>: initial_key[:<span class="number">-1</span>], <span class="string">'initial_configuration'</span>:&#123;<span class="string">"max_block_net_usage"</span>: <span class="number">1048576</span>, <span class="string">"target_block_net_usage_pct"</span>: <span class="number">1000</span>, <span class="string">"max_transaction_net_usage"</span>: <span class="number">524288</span>, <span class="string">"base_per_transaction_net_usage"</span>: <span class="number">12</span>, <span class="string">"net_usage_leeway"</span>: <span class="number">500</span>, <span class="string">"context_free_discount_net_usage_num"</span>: <span class="number">20</span>, <span class="string">"context_free_discount_net_usage_den"</span>: <span class="number">100</span>, <span class="string">"max_block_cpu_usage"</span>: <span class="number">100000</span>, <span class="string">"target_block_cpu_usage_pct"</span>: <span class="number">500</span>, <span class="string">"max_transaction_cpu_usage"</span>: <span class="number">50000</span>, <span class="string">"min_transaction_cpu_usage"</span>: <span class="number">100</span>, <span class="string">"max_transaction_lifetime"</span>: <span class="number">3600</span>, <span class="string">"deferred_trx_expiration_window"</span>: <span class="number">600</span>, <span class="string">"max_transaction_delay"</span>: <span class="number">3888000</span>, <span class="string">"max_inline_action_size"</span>: <span class="number">4096</span>, <span class="string">"max_inline_action_depth"</span>: <span class="number">4</span>, <span class="string">"max_authority_depth"</span>: <span class="number">6</span> &#125;,  <span class="string">"initial_chain_id"</span>: <span class="string">"0000000000000000000000000000000000000000000000000000000000000000"</span>&#125;, outfile, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Start gensis</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">ini_port=<span class="number">9000</span></span><br><span class="line">currentport=ini_port</span><br><span class="line">sentstring=<span class="string">'./genesis_start.sh '</span>+<span class="string">'./blockchain'</span>+<span class="string">' '</span>+initial_key[:<span class="number">-1</span>]+<span class="string">' '</span>+temp[:<span class="number">-1</span>]+<span class="string">' '</span>+str(currentport)+<span class="string">' '</span>+str(currentport+<span class="number">100</span>)+<span class="string">' '</span>+str(currentport+<span class="number">101</span>)</span><br><span class="line">os.system(<span class="string">'echo Start gensis'</span>)</span><br><span class="line">os.system(sentstring)</span><br><span class="line">currentport+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">30</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">start nodes</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">22</span>):</span><br><span class="line">private_key = file1.readline()</span><br><span class="line">public_key = file1.readline()</span><br><span class="line">tosend = <span class="string">'./genesis_start.sh '</span>+<span class="string">'./blockchain'</span>+str(i)+<span class="string">' '</span>+public_key[:<span class="number">-1</span>]+<span class="string">' '</span>+private_key[:<span class="number">-1</span>]+<span class="string">' '</span>+str(currentport)+<span class="string">' '</span>+str(currentport+<span class="number">100</span>)+<span class="string">' '</span>+str(currentport+<span class="number">99</span>)</span><br><span class="line">os.system(<span class="string">'echo start node '</span>+ str(i))</span><br><span class="line">os.system(tosend)</span><br><span class="line">currentport+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>For this python code, it first generates the gensis.json. And then it starts nodes in some order(First gensis node, then other super accounts). All public key and private key used is based on the file generated previously. To use it, you have to put the password of the wallet as the first attribute pass in when you run the program. The script did so, in case it needs to deal with sensitive information.</p><p>The follow script is in a file called genesis_start.sh, which is called by the previous python program to start each node:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#$1--datadir $2--Public_key $3--Private_key $4--httpserver $5--p2plisten $6--peer_address</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ] &amp;&amp; [ <span class="variable">$2</span> ] &amp;&amp; [ <span class="variable">$3</span> ] &amp;&amp; [ <span class="variable">$4</span> ] &amp;&amp; [ <span class="variable">$5</span> ] &amp;&amp; [ <span class="variable">$6</span> ]; <span class="keyword">then</span></span><br><span class="line">DATADIR=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">nodeos \</span><br><span class="line">--genesis-json <span class="variable">$DATADIR</span><span class="string">"/../genesis.json"</span> \</span><br><span class="line">--signature-provider <span class="variable">$2</span>=KEY:<span class="variable">$3</span> \</span><br><span class="line">--plugin eosio::producer_plugin \</span><br><span class="line">--plugin eosio::chain_api_plugin \</span><br><span class="line">--plugin eosio::http_plugin \</span><br><span class="line">--plugin eosio::history_api_plugin \</span><br><span class="line">--data-dir <span class="variable">$DATADIR</span><span class="string">"/data"</span> \</span><br><span class="line">--blocks-dir <span class="variable">$DATADIR</span><span class="string">"/blocks"</span> \</span><br><span class="line">--config-dir <span class="variable">$DATADIR</span><span class="string">"/config"</span> \</span><br><span class="line">--producer-name eosio \</span><br><span class="line">--http-server-address 127.0.0.1:<span class="variable">$4</span> \</span><br><span class="line">--p2p-listen-endpoint 127.0.0.1:<span class="variable">$5</span> \</span><br><span class="line">--access-control-allow-origin=* \</span><br><span class="line">--contracts-console \</span><br><span class="line">--http-validate-host=<span class="literal">false</span> \</span><br><span class="line">--verbose-http-errors \</span><br><span class="line">--<span class="built_in">enable</span>-stale-production \</span><br><span class="line">--p2p-peer-address localhost:<span class="variable">$6</span> \</span><br><span class="line">&gt;&gt; <span class="variable">$DATADIR</span><span class="string">"/nodeos.log"</span> 2&gt;&amp;1 &amp; \</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$DATADIR</span><span class="string">"/eosd.pid"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>This script will start a new node by using information given by user and save the running result to file at the datadir given… To use it manually, just use <code>./genesis_start.sh [datadir] [Public_key] [Private_key] [httpserver] [p2plisten] [peer_address]</code></p><blockquote><p>If you get an information of “This is not an executable file”. Just do <code>chmod 777 genesis_start.sh</code></p></blockquote><p>I think those scripts are still useful for the following reason:</p><ul><li>The producer has option about the super account node it reports. It could make the main node not too stressful when lots of submission happens(I guess).</li><li>By modifying them a little bit, they could also be used to generate multiple block producer and voters.</li></ul><p>And I find out only the linked structure will be accepted. It means multiple connections to one super account node is not permitted. More detailed, as the graph show below:<br><img alt="Multi conn not allowed" src="https://fzq8jg.bn.files.1drv.com/y4m9X87KWyMymAB7T60SBAoK0DvuSQsPDRoSqIYl1A-6crJca50nXk36T0G2crGK2PISAJLGzaM5Z-XAVcpQTMwARR8VuQpZlZwz5w7WTmuVQWaD8hEHEt2bmFVH0HJpP_gl5fWdfIaXHw-ZIE8RHQU2slcf3fPLgmnQGZMLvIX8TDnPBUVWLe-JCKBzQtCSqRasTyWT2AmMOPsiUweCl-C9A?width=1280&height=519&cropmode=none" width="100%"></p><blockquote><p>To make the system recognize an account is block producer, it is required to use regproducer like the following. Otherwise it is just a voter.</p></blockquote><h4 id="build-local-test-network"><a class="markdownIt-Anchor" href="#build-local-test-network"></a> Build local test network</h4><blockquote><p>Need to use the EOS (cleos and nodes) compiled from the previous steps. Maybe this is not required. But it seems that eosio.contract is related on eosio main program. The network can not be built when using the software from ubuntu package management on my machine.</p></blockquote><p>Basically, I follow up the guidance from <a href="https://medium.com/coinmonks/guide-to-eos-voting-simulation-4eb7a85bab44" target="_blank" rel="noopener">Guide to EOS voting simulation</a> and the official guidance <a href="https://developers.eos.io/eosio-nodeos/docs/bios-boot-sequence" target="_blank" rel="noopener">BIOS Boot Sequence</a>. Some places has been changed to fit the latest version of EOSIO.</p><p>Before start, you need to initialize wallet by taking the previous steps. And then create some new public and private key pairs. Just do <code>cleos wallet create_key</code>. If you want to see all key pairs, do <code>cleos wallet private_keys</code>.</p><p>Then, create genesis.json and the script used to start producing genesis block.</p><ul><li>Create genesis.json at a property directory.</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"initial_timestamp"</span>: <span class="string">"2018-12-05T08:55:11.000"</span>,</span><br><span class="line">  <span class="attr">"initial_key"</span>: <span class="string">"EOS_PUB_DEV_KEY"</span>,</span><br><span class="line">  <span class="attr">"initial_configuration"</span>: &#123;</span><br><span class="line">    <span class="attr">"max_block_net_usage"</span>: <span class="number">1048576</span>,</span><br><span class="line">    <span class="attr">"target_block_net_usage_pct"</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="attr">"max_transaction_net_usage"</span>: <span class="number">524288</span>,</span><br><span class="line">    <span class="attr">"base_per_transaction_net_usage"</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">"net_usage_leeway"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"context_free_discount_net_usage_num"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">"context_free_discount_net_usage_den"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"max_block_cpu_usage"</span>: <span class="number">100000</span>,</span><br><span class="line">    <span class="attr">"target_block_cpu_usage_pct"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"max_transaction_cpu_usage"</span>: <span class="number">50000</span>,</span><br><span class="line">    <span class="attr">"min_transaction_cpu_usage"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"max_transaction_lifetime"</span>: <span class="number">3600</span>,</span><br><span class="line">    <span class="attr">"deferred_trx_expiration_window"</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">"max_transaction_delay"</span>: <span class="number">3888000</span>,</span><br><span class="line">    <span class="attr">"max_inline_action_size"</span>: <span class="number">4096</span>,</span><br><span class="line">    <span class="attr">"max_inline_action_depth"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"max_authority_depth"</span>: <span class="number">6</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"initial_chain_id"</span>: <span class="string">"0000000000000000000000000000000000000000000000000000000000000000"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Then, create the script used to start the first node and save it as genesis_start.sh.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir -p <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">nodeos \</span><br><span class="line">--genesis-json <span class="variable">$DATADIR</span><span class="string">"/../genesis.json"</span> \</span><br><span class="line">--signature-provider EOS_PUB_DEV_KEY=KEY:EOS_PRIV_DEV_KEY \</span><br><span class="line">--plugin eosio::producer_plugin \</span><br><span class="line">--plugin eosio::chain_api_plugin \</span><br><span class="line">--plugin eosio::http_plugin \</span><br><span class="line">--plugin eosio::history_api_plugin \</span><br><span class="line">--plugin eosio::history_plugin \</span><br><span class="line">--data-dir <span class="variable">$DATADIR</span><span class="string">"/data"</span> \</span><br><span class="line">--blocks-dir <span class="variable">$DATADIR</span><span class="string">"/blocks"</span> \</span><br><span class="line">--config-dir <span class="variable">$DATADIR</span><span class="string">"/config"</span> \</span><br><span class="line">--producer-name eosio \</span><br><span class="line">--http-server-address 127.0.0.1:8888 \</span><br><span class="line">--p2p-listen-endpoint 127.0.0.1:9010 \</span><br><span class="line">--access-control-allow-origin=* \</span><br><span class="line">--contracts-console \</span><br><span class="line">--http-validate-host=<span class="literal">false</span> \</span><br><span class="line">--verbose-http-errors \</span><br><span class="line">--<span class="built_in">enable</span>-stale-production \</span><br><span class="line">--p2p-peer-address localhost:9011 \</span><br><span class="line">--p2p-peer-address localhost:9012 \</span><br><span class="line">--p2p-peer-address localhost:9013 \</span><br><span class="line">&gt;&gt; <span class="variable">$DATADIR</span><span class="string">"/nodeos.log"</span> 2&gt;&amp;1 &amp; \</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$DATADIR</span><span class="string">"/eosd.pid"</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: The EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh should be the same as the EOS_PUB_DEV_KEY in genesis.json. EOS_PRIV_DEV_KEY is the private key of this public key. Otherwise, you will get the error Not producing block because I don’t have the private key for EOS_PUB_DEV_KEY</p></blockquote><ol><li><strong>Start the first node</strong></li></ol><p>This tutorial is based on v4.2.0, with one node for bios and two nodes as block producers. First start the bios node:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gensis_start.sh</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Deploy</strong> <code>eosio.bios</code> <strong>contract to</strong> <code>eosio</code> <strong>account.</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio build/contracts/eosio.bios</span><br></pre></td></tr></table></figure><div id="3"></div>3. **Create necessary accounts.**<p>The list of accounts required is provided by official:</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; eosio.bpay</span><br><span class="line">&gt; eosio.msig</span><br><span class="line">&gt; eosio.names</span><br><span class="line">&gt; eosio.ram</span><br><span class="line">&gt; eosio.ramfee</span><br><span class="line">&gt; eosio.saving</span><br><span class="line">&gt; eosio.stake</span><br><span class="line">&gt; eosio.token</span><br><span class="line">&gt; eosio.vpay</span><br><span class="line">&gt; eosio.rex</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>Use <code>create account</code> command to create each of them:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos create account eosio eosio.*** EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>Set the</strong> <code>eosio.token</code> <strong>contract</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio.token eos/build/contracts/eosio.token</span><br></pre></td></tr></table></figure><blockquote><p>The eosio.token used should be at the build directory which contains file eosio.token.wasm, otherwise wrong message will be invoked.</p></blockquote><ol start="5"><li><strong>set the</strong> <code>eosio.msig</code> <strong>contract</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos create account eosio eosio.msig EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br><span class="line">cleos <span class="built_in">set</span> contract eosio.msig eos/build/contracts/eosio.msig</span><br></pre></td></tr></table></figure><blockquote><p>The eosio.msig used should be at the build directory which contains file eosio.msig.wasm, otherwise wrong message will be invoked.</p></blockquote><ol start="6"><li><strong>Create and allocate token</strong></li></ol><p>We create and issue 1,000,000,000.0000 tokens and name it ‘SYS’. Then issue to <code>eosio</code> account.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio.token create <span class="string">'&#123;"issuer":"eosio", "maximum_supply": "1000000000.0000 SYS", "can_freeze": 0, "can_recall": 0, "can_whitelist": 0&#125;'</span> -p eosio.token</span><br><span class="line">cleos push action eosio.token issue <span class="string">'&#123;"to":"eosio","quantity":"1000000000.0000 SYS","memo":"issue"&#125;'</span> -p eosio</span><br></pre></td></tr></table></figure><p>To check the balance and stats</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos get currency balance eosio.token eosio</span><br><span class="line">cleos get currency stats eosio.token <span class="string">'SYS'</span></span><br></pre></td></tr></table></figure><ol start="7"><li><strong>Set</strong> <code>eosio.system</code> <strong>contract to</strong> <code>eosio</code></li></ol><p>After setting <code>eosio.system</code> contract we will be able to stake our accounts.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio eos/build/contracts/eosio.system</span><br></pre></td></tr></table></figure><p>Then stake tokens and expand the network. <code>cleos</code> stakes 8 KB of RAM on account creation, paid by the account creator.</p><ol start="8"><li><strong>Make</strong> <code>eosio.msig</code> <strong>a privileged account and Initialize system account</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio setpriv <span class="string">'["eosio.msig", 1]'</span> -p eosio@active</span><br><span class="line"></span><br><span class="line">cleos push action eosio init <span class="string">'["0", "4,SYS"]'</span> -p eosio@active</span><br></pre></td></tr></table></figure><blockquote><p>The command initializes the <code>system</code> account with code zero (needed at initialization time)<br>and <code>SYS</code> token with precision 4; precision can range from [0 … 18].</p></blockquote><ol start="9"><li><strong>Create accounts for BPs:</strong> <code>bp1111111111</code> <strong>and</strong> <code>bp2222222222</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system newaccount eosio bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS <span class="string">'1000000.0000 SYS'</span> --stake-net <span class="string">'1000000.0000 SYS'</span> --stake-cpu <span class="string">'1000000.0000 SYS'</span></span><br></pre></td></tr></table></figure><ol start="10"><li><strong>Register BPs</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system regproducer bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br></pre></td></tr></table></figure><p>Similarly register <code>bp2222222222</code>. To check producers:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system listproducers</span><br></pre></td></tr></table></figure><p>To start the two producer nodes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodeos -e --genesis-json path/to/genesis.json --producer-name bp1111111111 --private-key <span class="string">'[ "EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo","5K7EY...Hi8Uy61wU1o" ]'</span> --http-server-address 127.0.0.1:8889 --p2plisten-endpoint 127.0.0.1:9877 --p2p-peer-address bios_node_ip:port --plugin eosio::producer_plugin --plugin eosio::chain_api_plugin --plugin eosio::net_api_plugin</span><br></pre></td></tr></table></figure><ol start="11"><li><strong>Create voters accounts:</strong> <code>voter1111111</code><strong>,</strong> <code>voter2222222</code><strong>,</strong> <code>voter3333333</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system newaccount eosio voter1111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS <span class="string">'50.0000 SYS'</span> --stake-net <span class="string">'50.0000 SYS'</span> --stake-cpu <span class="string">'50.0000 SYS'</span></span><br></pre></td></tr></table></figure><ol start="12"><li><strong>Issue tokens to voters</strong></li></ol><p>Transfer 100,000,000 SYS to each voter.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio.token transfer <span class="string">'["eosio", "voter1111111","100000000.0000 SYS","vote"]'</span> -p eosio</span><br></pre></td></tr></table></figure><p>Check the balance</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos get currency balance eosio.token voter1111111</span><br></pre></td></tr></table></figure><ol start="13"><li><strong>Delegate bandwidth</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system delegatebw voter1111111 voter1111111 <span class="string">"50000000.0000 SYS"</span> <span class="string">"50000000.0000 SYS"</span></span><br></pre></td></tr></table></figure><blockquote><p>Sometime, the program will tell you failed. But the command successes actually. You could redo <code>cleos get currency balance eosio.token voter1111111</code> to check if this command take effect or not.</p></blockquote><ol start="14"><li><strong>Vote</strong></li></ol><p>Voting for producers can begin as accounts are staked and producers are registered.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system voteproducer prods voter1111111 bp1111111111 bp2222222222</span><br></pre></td></tr></table></figure><p>After 15% of the available votes have been voted, block producers will begin producing. In this case we need 150,000,000 votes.</p><ul><li><strong>Check votes:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos system listproducers </span><br><span class="line">cleos get table eosio eosio voters</span><br></pre></td></tr></table></figure><p>Some error and solutions I found is at <a href="../common-run-eosio/">here</a>.</p><h4 id="special-notice"><a class="markdownIt-Anchor" href="#special-notice"></a> Special notice</h4><ul><li>EOS.CONTRACT is based on locally compiled EOS.</li><li>To compile EOS locally, it has to use git clone to clone it from github. You can not download from source and compile.</li><li>The compilation requires lots of space. It is good to remain 40GB of disk and 8GB of memory. It also takes around 3 hours to compile.</li><li>They can only be compiled at the current user’s home directory.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build Bitcoin local network</title>
      <link href="/2019/Bitcoin_local_network/"/>
      <url>/2019/Bitcoin_local_network/</url>
      
        <content type="html"><![CDATA[<h3 id="some-experience-on-building-bitcoin-local-network"><a class="markdownIt-Anchor" href="#some-experience-on-building-bitcoin-local-network"></a> Some experience on building Bitcoin local network</h3><h4 id="basic-info"><a class="markdownIt-Anchor" href="#basic-info"></a> Basic info</h4><p>Bitcoin is an client based on proof of work(POW).</p><p>Bitcoin core is a client of official bitcoin network. After some tests, I find the local network for bitcoin is good for testing wallet application but hard for testing mining function.  In this page, I am going to discuss some experience of mine on building the local test environment for bitcoin core.</p><h5 id="compile-installation"><a class="markdownIt-Anchor" href="#compile-installation"></a> Compile &amp; Installation</h5><a id="more"></a><p>For ubuntu, just do:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev libqrencode-dev </span><br><span class="line">git <span class="built_in">clone</span> https://github.com/bitcoin/bitcoin.git</span><br><span class="line"><span class="built_in">cd</span> bitcoin</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install <span class="comment"># optional</span></span><br></pre></td></tr></table></figure><p>For other system, official has a page at <a href="https://github.com/bitcoin/bitcoin/tree/master/doc" target="_blank" rel="noopener">here</a> described how to build and install.</p><p>Bitcoin core contains three different networks, mainnet, regtest and testnet. The difference of those three networks are as follows:</p><h5 id="mainnet"><a class="markdownIt-Anchor" href="#mainnet"></a> Mainnet</h5><blockquote><p>The original and <strong>main network</strong> for Bitcoin transactions, where satoshis have <strong>real economic value.</strong></p></blockquote><p>As we could see above, mainnet is the main network of bitcoin core. It has the <strong>real economic value</strong>, which means it has lots of restriction. And it make me hard to implement it locally. On the main net, I tried lots of different ways, including connect it with a virtual network, do not connect with network and change some source code. But none of them successfully build a local network.</p><p><em>To start a node under main net, just do: (The default port is 8444/8443)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind</span><br></pre></td></tr></table></figure><p><em>To use rpc to communicate, do the following: (datadir should exist at first)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/A/ -pid=<span class="variable">$HOME</span>/A/.pid -debug -daemon <span class="comment">#-daemon for running in background -debug to get detailed output</span></span><br></pre></td></tr></table></figure><p>In some old version, password and username can not be the same.</p><p><em>To connect to a specific node, use -connect tag.</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -connect=127.0.0.1:17592 -datadir=<span class="variable">$HOME</span>/A/ -pid=<span class="variable">$HOME</span>/A/.pid -debug -daemon</span><br></pre></td></tr></table></figure><p>-reindex-chainstate(Rebuild chain state from the currently indexed blocks ) and -reindex(Rebuild chain state and block index from the blk*.dat files on disk ) might be helpful some time. If need them, just add them to the end of the startup code</p><p><em>Use the following code to start 5 nodes and connect them together under main net:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. To check them:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"~/test/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A B C D E</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span><span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir -p <span class="variable">$DATADIR</span><span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>If you want to restart a new test or changed the version of bitcoind running on the machine(from high version to low version). You have to delete the datadir:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"~/test/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A B C D E</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$DATADIR</span><span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">  rm -rf <span class="variable">$DATADIR</span><span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>To get info from any node by using rpc command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><p><strong>bitcoin-cli</strong> is just a communication tool. So, you could use the same command to communicate with different nodes in different model(mainnet, testnet, regtest).</p><p>Moreover, you could also use it to communicate with other project’s node forked from bitcoind, like litecoind.</p><h5 id="regtest"><a class="markdownIt-Anchor" href="#regtest"></a> Regtest</h5><blockquote><p>A local testing environment in which developers can almost instantly <strong>generate blocks on demand</strong> for testing events, and can create private satoshis with no real-world value.</p></blockquote><p><strong>generate blocks on demand</strong> means it is not real case. It is fake mining. An easy example is it produce block quick and producer doesn’t get award they should have. Another example is the normal case should have nonce 0-0xfffff. But it only have nonce 0-4 for every block. So, it is a good tool to test transaction and wallet application locally.</p><p><em>To start a node under regtest, just do: (The default port is 18444/18443)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -regtest</span><br></pre></td></tr></table></figure><p>The other commands like whatever at the first part of main net. Just add the -regtest tag to the program.</p><p><em>Use the following code to start 5 nodes and connect them together under regtest:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -regtest -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. See the former part for the way to do those procedure</p><p>Though it is possible to use command represented before, the official recommend to use this one:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><h5 id="testnet"><a class="markdownIt-Anchor" href="#testnet"></a> Testnet</h5><blockquote><p>A global testing environment in which developers can obtain and spend satoshis that have <strong>no real-world value</strong> on a network that is <strong>very similar</strong> to the Bitcoin mainnet.</p></blockquote><p><strong>very similar</strong> means it is likely to be the same as the main net. <strong>no real-world value</strong> means you could get some points free online.</p><p>By comparing with mainnet, it seems there is restriction on the height on the testnet, which means difficulty has restriction. Right now, it is at the version 3. Its version could be changed by developer, but it is hardcoded. Difficulty does change when the height being higher and higher. And most things are similar to mainnet. It also has the same restrictions as the main net. So, testnet is best for testing transaction application and wallet application.</p><p>To start a node under testnet, just do: (The default port is 18444/18443)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -testnet</span><br></pre></td></tr></table></figure><p>The other commands like whatever at the first part of main net. Just add the -testnet tag to the program.</p><p>Use the following code to start 5 nodes and connect them together under testnet:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -testnet -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. See the former part for the way to do those procedure</p><p>Though it is possible to use command represented before, the official recommend to use this one:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -testnet -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><h5 id="version-difference"><a class="markdownIt-Anchor" href="#version-difference"></a> Version difference</h5>  <img alt="Version difference" src="https://h59ygg.bn.files.1drv.com/y4mi5rh-SwSuFKvGvOs_EIQFjXefs1P_ViKroareW_mtIrjAE_zF4160tywav8iK4hgNfGuu87DXGP4gD-kvkFTxi-TEMXjXHcxSQaudMBhQf7KfoHV6hv_MWClF6czkxt7jwKQA7AOQbSCR1YwEcVX9ouTRmH6CKA26mAayQXnIK7O04Yt9A1dl0sg4AKKvcZWvg7l9DqK0QSD7f1gzZbGJw?width=1280&height=720&cropmode=none" width="100%"><p>The bubble is the separator of different version. Litecoind is forked out from bitcoind since 0.16.3. The methods talked above, getblocktemplate, is only for mainnet or testnet. For the regtest net, there is only one method, generate or generatetoaddress. <strong>0.17.9</strong> remove wallet functions like listaccounts. It also remove generate function. To confirm a block on regtest, use generatetoaddress instead.</p><h5 id="to-connect-nodes"><a class="markdownIt-Anchor" href="#to-connect-nodes"></a> To connect nodes</h5><img alt="Basic structure" src="https://fpqpjg.bn.files.1drv.com/y4mXqpE6NGGZOHb58ocVVjMxMYZ_UM-D9IWy5CWPwqGXHIxRYk7nQncfdf9We3Cf9nva_kWx6fiKELZzbgUqH1sxr0Mx5Byu_B33dIyiULR7wPMQgOkcrM6_wu_YTadEZxndBs_y5RyS5G2YlE6tpQ9HhZqG_DNxtftVvErHpzPV1ELwiJ0UKya-ie1pfjjKuozoag40X8sMsNgaZY2nbXVgA?width=1280&height=720&cropmode=none" width="100%"><p>This graph is the basic way to connect nodes. The miner is always separate with the main net. Loop connection is permitted but not required. In order to start using mining feature(getblocktemplate). Be sure to have at least two nodes connected. Actually, there are more restriction than this.</p><h4 id="to-confirm-a-block"><a class="markdownIt-Anchor" href="#to-confirm-a-block"></a> To confirm a block</h4>  <img alt="Structure to mine" src="https://fp8bjw.bn.files.1drv.com/y4mdRutIlghFFflWeN_puKMs_4LpZsI8wk9IWOQ3lhXixvxVuoO6OK3VeBB4TNLaFIdGO0NIGJVmFkyZxVoxhpYvoHo3USjmB1n3R3EsLAOaopAUvz5nVWqFp1ojkL-zWeeWDRsff0cVx8HcvXMF21RFXsgw9ez4re7vUudQKVeyELWlfOGycyNM56xibsw9NgcEbO5uwRSgJPXllE_qW_4dg?width=1280&height=720&cropmode=none" width="100%"><p><strong>Bitcoin core full node</strong> is the client start by bitcoind by using command in the previous section.</p><p>Above is the basic structure for mining(confirm a block). If no other things happen, one block will be completely confirmed 100 blocks later. The confirm interval is 100 blocks.</p><p><strong>Getblocktemplate</strong> is a method which will return the following structure as a return result as a json for the miner to use, which contains information miner need. The structure looks like this:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"result"</span>:&#123;</span><br><span class="line">      <span class="attr">"capabilities"</span>:[<span class="string">"proposal"</span>],</span><br><span class="line">      ...</span><br><span class="line">      "previousblockhash":"756c7b16ef069c782fe6faf9e393483821261206fe110d409c11fbc4a0b927b0",</span><br><span class="line">      "transactions":[], 'Transactions information could be used for next block'</span><br><span class="line">      "coinbaseaux":&#123;"flags":""&#125;, 'miner will use this and the nest value to build coinbase'</span><br><span class="line">      "coinbasevalue":5000000000, 'bonus people have'</span><br><span class="line">      "longpollid":"756c7b16ef069c782fe6faf9e393...06fe110d409c11fbc4a0b927b02", 'bitcoind technique'</span><br><span class="line">      "target":"7fffff0000000000000000000000000000000000000000000000000000000000", </span><br><span class="line">      "mintime":1550614864,</span><br><span class="line">      "noncerange":"00000000ffffffff",</span><br><span class="line">  ...</span><br><span class="line">      "bits":"207fffff",</span><br><span class="line">      "height":4,</span><br><span class="line">      ...</span><br><span class="line">   &#125;,</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>After version <strong>0.17.9</strong>. You have to attach the argument segwit in order to get a return. Their official said this is safer. In order to attach argument, it is recommend to use curl:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user 123 --data-binary <span class="string">'&#123;"id": 1, "method": "getblocktemplate", "params": [&#123;"rules": ["segwit"], "capabilities": ["coinbasetxn", "workid", "coinbase/append"]&#125;]&#125;'</span> -H <span class="string">'content-type: text/plain;'</span> http://127.0.0.1:16592/</span><br></pre></td></tr></table></figure><p><strong>Miners</strong> are softwares used for mining</p><p>If you are using Miner software, then you don’t have to understand what getblocktemplate get. Miner software will handle them. But you have to make sure the Getblocktemplate method is working and coinbasevalue exist and it is not 0.</p><blockquote><p>To make the coinbasevalue exist and it is not 0, it might be helpful to make sure <a href="https://github.com/bitcoin/libblkmaker" target="_blank" rel="noopener">libblkmaker</a>compile successfully. Because there is some library dependence required. And Getblocktemplate never tell you what is the dependence and the main bitcoin core could compile without it. Maybe there are some better ways. But I fix every dependences by compile libblkmaker. I think it is because they use the same dependence at somewhere. But some people also say bitcoin’s getblocktemplate relay on libblkmaker.</p></blockquote><p>There are two official recommend and commonly used miner. <a href="https://bitcointalk.org/?topic=877081" target="_blank" rel="noopener">BFGMiner</a> and <a href="https://bitcointalk.org/?topic=877081" target="_blank" rel="noopener">Cgminer</a>.</p><p><em>To start solo mining by using <strong>BFGMiner</strong>:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bfgminer -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to <span class="string">"PUBLIC_ADDRESS"</span> --coinbase-sig <span class="string">"rig1: This is Joe's block!"</span> --net-delay</span><br></pre></td></tr></table></figure><p>–coinbase-sig is for comments, it is not required</p><p>–net-delay is to make it don’t communicate with server too frequently.</p><p>You could use -S to specify hardware you want to use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bfgminer -S opencl:auto -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to <span class="string">"PUBLIC_ADDRESS"</span></span><br></pre></td></tr></table></figure><p><em>To start solo mining by using <strong>Cgminer</strong>:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgminer -o http://localhost:8332 -u username -p password --btc-address PUBLIC_ADDRESS</span><br></pre></td></tr></table></figure><p>This is from the official website, I did’t test it. It requires to use FPGA and ASIC miner.</p><p>If you want to build a miner from scratch, official do provide some instructions at their <a href="https://en.bitcoin.it/wiki/Getblocktemplate#For_developers" target="_blank" rel="noopener">website</a></p><p>Actually, if you just want to build a miner application, most of people choose to make their application based on the <a href="https://github.com/bitcoin/libblkmaker" target="_blank" rel="noopener">libblkmaker</a> official provided.</p><h4 id="special-note"><a class="markdownIt-Anchor" href="#special-note"></a> Special note</h4><ol><li>In order to simulate a real network case that lots of transaction happens every second, you could use the following code:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 1000)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 sendtoaddress <span class="string">"PUBLIC_ADDRESS"</span> 0.0001</span><br><span class="line">  sleep 2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>Build Path should be correct. If you change the path of compiled file, you have to reconfigure and recompile before install or do other implementation.<br>Bitcoind is not friendly for mining locally</p></li><li><p>For mainnet and testnet, they set up some restriction. So getblocktemplate never works. The coding for getblocktemplate is in <a href="https://github.com/bitcoin/bitcoin/blob/adc55dbac5b521d6c9df58d1d69075e6abf0116f/src/rpc/mining.cpp#L292" target="_blank" rel="noopener">mining.cpp</a> Maybe I need to look through source in order to check where is the real restriction. But I guess they setup multiple restrictions. One I found is at <a href="https://github.com/bitcoin/bitcoin/blob/f5a623eb66c81d9d7b11206d574430af0127546d/src/chainparams.cpp" target="_blank" rel="noopener">chainparams.cpp</a>. It is also a direction to try to delete as many information as it could to see if it works.</p></li><li><p>In bitcoind, Genesis block and its information, including time interval, is hard coded, even for genesis block.</p></li><li><p>Bitcoid is easy to compile. But it will occupy 3GB space on disk after compilation. And it takes around an hour to compile. To compile it, their official <a href="https://github.com/bitcoin/bitcoin/tree/f5a623eb66c81d9d7b11206d574430af0127546d/doc" target="_blank" rel="noopener">website</a> described it clearly.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> Bitcoin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bitcoin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Website for CS425 project</title>
      <link href="/2019/projects/Website%20for%20CS425%20project/"/>
      <url>/2019/projects/Website%20for%20CS425%20project/</url>
      
        <content type="html"><![CDATA[<h3 id="reservation-system-website-application-deployed"><a class="markdownIt-Anchor" href="#reservation-system-website-application-deployed"></a> Reservation system website application deployed</h3><p>The website made by me for my CS425 project has been deployed and works normally at <a href="https://cs425a.azurewebsites.net" target="_blank" rel="noopener">This Website</a>. In webpage browser is at bottom.</p><p>Source code is at <a href="https://github.com/ShaokangJiang/CS425-project/blob/master/README.md" target="_blank" rel="noopener">My Github Page</a></p><p>This is a website made by using SQL as database and <a href="https://materializecss.com/" target="_blank" rel="noopener">Material Theme</a> as layout.</p><h4 id="test-account-information"><a class="markdownIt-Anchor" href="#test-account-information"></a> Test account information:</h4><a id="more"></a><table class="highlight1">      <thead>    <tr>        <td>id</td>        <td>priority</td>        <td>password</td>        <td>Name</td>    </tr>    </thead>    <tr>        <td>1</td>        <td>admin</td>        <td>123456</td>        <td></td>    </tr>    <tr>        <td>28</td>        <td>patient</td>        <td>456789</td>        <td>Rebecca Torres</td>    </tr>    <tr>        <td>29</td>        <td>scheduler</td>        <td>789456</td>        <td></td>    </tr>    <tr>        <td>30</td>        <td>medical staff</td>        <td>123789</td>        <td></td>    </tr></table><h4 id="basic-functions"><a class="markdownIt-Anchor" href="#basic-functions"></a> Basic functions:</h4><h5 id="login"><a class="markdownIt-Anchor" href="#login"></a> Login</h5><p>The application must provide a login portal for user to login. The application will validate the user credentials and privileges. For this project you are only required to provide the implementation of managers.</p><h5 id="privileges"><a class="markdownIt-Anchor" href="#privileges"></a> Privileges</h5><p>1- Users with admin privileges can do the following:</p><p>​    a. Schedule an appointment</p><p>​    b. Create new patient</p><p>​    c. Create a new user account</p><p>​    d. Access the business reporting</p><p>2- Users with Doctor/Staff privileges can do the following:</p><p>​    a. View and update patient record</p><p>​    b. Create an Order</p><p>​    c. View calendar and schedule appointment with medical staff</p><p>3- Users with Patient privileges can do the following:</p><p>​    a. View the orders</p><p>​    b. View bills</p><p>4- Users with Scheduler privileges can do the following:</p><p>​    a. View the orders</p><p>​    b. View bills</p><p>​    c. View calendar and schedule appointment with medical staff</p><h5 id="order-transaction"><a class="markdownIt-Anchor" href="#order-transaction"></a> Order transaction</h5><p>Doctors can order diagnostics for a patient, once the diagnostics are completed and results are available. The system gets updated by medical staff.</p><h5 id="reporting-and-analytics"><a class="markdownIt-Anchor" href="#reporting-and-analytics"></a> Reporting and analytics</h5><p>The admin will have the capability of running business analytics reports that will help them monitor business operations.</p><p>• Total revenue from all diagnostic</p><p>• Total revenue from each doctor visit</p><p>• Allow patient to view their bills, appointment and medical record</p><p>In webpage demo:</p><iframe src="https://cs425a.azurewebsites.net" width="100%" height="500"></iframe>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Website for CS100 project</title>
      <link href="/2017/projects/Website%20for%20CS100%20project/"/>
      <url>/2017/projects/Website%20for%20CS100%20project/</url>
      
        <content type="html"><![CDATA[<h3 id="hatefate-website-application-deployed"><a class="markdownIt-Anchor" href="#hatefate-website-application-deployed"></a> Hatefate website application deployed</h3><p>The website made by me for my CS100 project has been deployed and works normally at <a href="https://hatefate.azurewebsites.net" target="_blank" rel="noopener">This Website</a>. In webpage browser is at bottom.</p><p>Source code is at <a href="https://github.com/ShaokangJiang/CS100Website" target="_blank" rel="noopener">This Github Page</a></p><p>This is a website made by using SQL as database and <a href="https://materializecss.com/" target="_blank" rel="noopener">Material Theme</a> as layout.</p><p>Function included: login via email, login via account name, register, reset password via email, set your favorites, and find people who has the same favorites as you.</p><p>Due to the reason that the domain(<a href="http://huangsk100.me" target="_blank" rel="noopener">huangsk100.me</a>) was expired. This website is for demo only right now. For testing, test account information is as follows:<a id="more"></a></p><table class="highlight1">    <tr>        <td>Username</td>        <td>Password</td>        <td>Email</td>    </tr>    <tr>        <td>test</td>        <td>123456</td>        <td>123456@example.com</td>    </tr>    <tr>        <td>test01</td>        <td>123456</td>        <td>test01@example.com</td>    </tr>    <tr>        <td>test02</td>        <td>123456</td>        <td>test02@example.com</td>    </tr></table><p>Here is the map for this website:Some functions didn’t implement.</p><p><img src="https://github.com/ShaokangJiang/CS100Website/raw/master/wesite%20(2).png" alt=" "></p><p>The in-browser demo:</p><iframe src="https://hatefate.azurewebsites.net" width="100%" height="500"></iframe>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
