<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Optimal Energy Production</title>
      <link href="/2020/Optimal-Energy-Production/"/>
      <url>/2020/Optimal-Energy-Production/</url>
      
        <content type="html"><![CDATA[<p>A simple limitation is too less sometime. If we are using the fixed threshold, then we could simply let threshold to be the time that consumption is equal to usage. And we are not able to handle the battery capacity as well. This might not meet the real case. In the real case, equipment will use large amount of energy when they start. So the model should be able to predict. Thought wind does change everyday, but it is still some kind of predictable. So, we could train a model from the history data and then predict the wind speed in the future, like one year. We could use <a href="https://www.tensorflow.org/js/tutorials/training/linear_regression" target="_blank" rel="noopener">TensorFlow.js</a> for training. Then Solve an optimization problem to see what would be the best time to start the engine and what would be the best time to stop the engine. Or solving an optimization problem to find the threshold to turn on or off the equipment would also better than a simple one.  </p><a id="more"></a> <h2 id="Normal-Count-Model"><a href="#Normal-Count-Model" class="headerlink" title="Normal Count Model"></a>Normal Count Model</h2><h3 id="Define-variables"><a href="#Define-variables" class="headerlink" title="Define variables"></a>Define variables</h3><p>n : number of days</p><p>c : the normal energy consumption per unit time</p><p>S = {0,1}$^n$, the status code to identify if we need to turn on the machine in this day/unit time. </p><p>C = {0,1,2}$^n$, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off.</p><p>W = $\mathbf{R}^n$, the energy produced per day/unit time</p><h3 id="Optimization-Model"><a href="#Optimization-Model" class="headerlink" title="Optimization Model"></a>Optimization Model</h3><script type="math/tex; mode=display">\begin{equation}\begin{split}&\text{Maximize } & \sum_{i\in n}W_iS_i-c\sum_{i\in n}C_iS_i\\&\text{Subject to } & C_i=S_i-S_{i-1}+1 \ \forall i\in \{2,\cdots,n\}\\& & 0 \le C_i \le 2 \ \forall i\in \{1,\cdots,n\}\\& & 0 \le S_i \le 1 \ \forall i\in \{1,\cdots,n\}\\\end{split}\end{equation}</script><p>Use MIP to solve it</p><h3 id="Sample-data"><a href="#Sample-data" class="headerlink" title="Sample data"></a>Sample data</h3><p>Sample data should be in csv format, each column contains different information. Only wind data is represented in the  section below</p><p>u is the x component of wind, v is the y component of the wind. Final wind speed is calculated by using $ws = \sqrt{u^2+v^2}$ </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,u,v</span><br><span class="line">0.2,12,15</span><br><span class="line">0.3,16,12</span><br><span class="line">0.5,12,16</span><br></pre></td></tr></table></figure><p>If we need to make this simpler or we are not able to collect related data for each type of energy, we could also use data in the below format:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,var</span><br><span class="line">0.2,12</span><br><span class="line">0.3,16</span><br><span class="line">0.5,12</span><br></pre></td></tr></table></figure><p><code>var</code> is the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way, e.g. wind speed. </p><h3 id="Possible-GAMS-code"><a href="#Possible-GAMS-code" class="headerlink" title="Possible GAMS code"></a>Possible GAMS code</h3><h3 id="Interpret-to-Js"><a href="#Interpret-to-Js" class="headerlink" title="Interpret to Js"></a>Interpret to Js</h3><h3 id="Analyze"><a href="#Analyze" class="headerlink" title="Analyze"></a>Analyze</h3><h4 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h4><ul><li>Considered the immediate on will consume much more energy.</li><li>model could be extended to handle all power source in this single model</li></ul><h4 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h4><ul><li>wind is not possible to be predicted, so turning on and off has less significance as the situation in the next year might be different.</li></ul><h2 id="Expected-Count-Model"><a href="#Expected-Count-Model" class="headerlink" title="Expected Count Model"></a>Expected Count Model</h2><p>Because the wind is hard to predict, especially in some unstable situation. And battery could only store a limited amount of energy. Using statistic data might be a better way to calculate. We could calculate the expectation of total energy and find a threshold for each type of energy to measure maximize possible energy production instead of in a specific day. </p><p>In this setting, we only need to run the optimization for one turn and could overcome a lot of unnecessary production. </p><h3 id="Sample-data-before-analyze"><a href="#Sample-data-before-analyze" class="headerlink" title="Sample data before analyze"></a>Sample data before analyze</h3><div class="table-container"><table><thead><tr><th>Index</th><th>Val(W)</th><th>Possibility(%)</th><th>Day count</th><th>Expectation</th></tr></thead><tbody><tr><td>0</td><td>65.2</td><td>8</td><td>2</td><td>5.216/130.4</td></tr><tr><td>1</td><td>32.8</td><td>4</td><td>1</td><td>1.312/32.8</td></tr><tr><td>2</td><td>23.3</td><td>4</td><td>1</td><td>0.932/23.3</td></tr><tr><td>…</td><td></td><td></td><td></td></tr></tbody></table></div><p>This data needs to be purified ahead of time, for those cases that produced energy is less than equipment consumption, we could simply set its total to 0.</p><h3 id="Define-variables-1"><a href="#Define-variables-1" class="headerlink" title="Define variables"></a>Define variables</h3><p>J : type of energy, $J\in$ {wind, water, $\cdots$ }</p><p>N : value index, 1, 2, $\cdots$. </p><p>C = $\mathbf{R}^J$: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then $C_{wind}$=10*2=20)</p><p>U = $\mathbf{R}$: Total user consumption</p><p>W = $\mathbf{R}^{J,N}$, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model.</p><p>S = {0,1}$^{J,N}$, to indicate I should turn on wind on this statistic data or not</p><p>B $\in \mathbf{R}$ : The battery charging limitation.</p><h3 id="Optimization-Model-1"><a href="#Optimization-Model-1" class="headerlink" title="Optimization Model"></a>Optimization Model</h3><script type="math/tex; mode=display">\begin{equation}\begin{split}&\text{Maximize } & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}\\& \text{Subject to}\ & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}-U\le B\end{split}\end{equation}</script><p>Use MIP to solve it</p><h3 id="Sample-data-1"><a href="#Sample-data-1" class="headerlink" title="Sample data"></a>Sample data</h3><p><a id="2"></a></p><p>Sample data should be in csv format, each column contains different information. Data defined in teh previous section is acceptable but not efficient. Only wind data is represented in the section below. </p><p>If data input is in a range, then we are going to use median of each group. Like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eType,Range (mph), Total</span><br><span class="line">1, 1.3 -    4,3.3</span><br><span class="line">1,   4 -    8,23.5</span><br><span class="line">1,   8 -   13,46.4</span><br></pre></td></tr></table></figure><p>Or the specific data and occurrence count in csv file: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eType,val (mph), Total</span><br><span class="line">1, 1.3,3.3</span><br><span class="line">1,   4,23.5</span><br><span class="line">1,   8,46.4</span><br></pre></td></tr></table></figure><p><code>Total</code> could be either the possibility this data occurs or the number of days.</p><p><code>Range</code> or <code>val</code> could be the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way, e.g. wind speed. </p><h3 id="Possible-GAMS-code-1"><a href="#Possible-GAMS-code-1" class="headerlink" title="Possible GAMS code"></a>Possible GAMS code</h3><h3 id="Interpret-to-Js-1"><a href="#Interpret-to-Js-1" class="headerlink" title="Interpret to Js"></a>Interpret to Js</h3><h3 id="Analyze-1"><a href="#Analyze-1" class="headerlink" title="Analyze"></a>Analyze</h3><h4 id="Pros-1"><a href="#Pros-1" class="headerlink" title="Pros"></a>Pros</h4><ul><li>Use expectation to simulate a better estimate of wind speed in different scenario</li><li>Save calculation</li></ul><h4 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons"></a>Cons</h4><ul><li>Data has higher wind speed would usually has less possibility. Then the model won’t focus on them, so they might be ignored in the model. (Too big wind might harm the equipment, so this make sense sometime)</li><li>User consumption is not perfect estimate</li></ul><h2 id="Modified-Version-for-Normal-Count"><a href="#Modified-Version-for-Normal-Count" class="headerlink" title="Modified Version for Normal Count"></a>Modified Version for Normal Count</h2><p>Battery limitation is a long term limitation, each one has some kind of relationship. Has battery limitation and want to find global optimal. </p><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>J : type of energy, $J\in$ {wind, water, $\cdots$ }</p><p>N : number of days, $\in $ {1,2,3, $\cdots$ ,n}</p><p>c = $\mathbf{R}^J$: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then $C_{wind}$=10*2=20)</p><p>U = $\mathbf{R}^N$: User consumption per unit time N</p><p>S = {0,1}$^{J,N}$, the status code to identify if we need to turn on the machine in this day/unit time. </p><p>C = {0,1,2}$^{J,N}$, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off.</p><p>W = $\mathbf{R}^{J,N}$, the energy produced per day/unit time for j equipment</p><p>B $\in \mathbf{R}^N$ : The battery charging limitation. With $B_0=0$</p><p>B $\in \mathbf{R}$ : Constant to represent the battery charging limitation. </p><h3 id="Optimization-Model-2"><a href="#Optimization-Model-2" class="headerlink" title="Optimization Model"></a>Optimization Model</h3><script type="math/tex; mode=display">\begin{equation}\begin{split}&\text{Maximize } & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{j\in J}c_j\sum_{i\in N}C_{ij}S_{ij}\\&\text{Subject to } & C_{ij}=S_{ij}-S_{i-1,j}+1 \ \forall i\in \{2,\cdots,n\}\\& & 0 \le C_{ij} \le 2 \ \forall i\in N j\in J\\& & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & B_i\le B \  \forall i\in \{2,\cdots, n\}\\& & B_i=B_{i-1}+\sum_{j\in J}W_{ij}S_{ij}-\sum_{j\in J}c_jC_{ij}S_{ij}-U_i\end{split}\end{equation}</script><p>Use MIP to solve it</p><h3 id="Sample-data-2"><a href="#Sample-data-2" class="headerlink" title="Sample data"></a>Sample data</h3><p><a id="1"></a></p><p>Sample data should be in csv format, each column contains different information. Only wind data is represented in the  section below</p><p>u is the x component of wind/other type of energy, v is the y component of the wind. Final wind speed is calculated by using $ws = \sqrt{u^2+v^2}$ . </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,eType,u,v</span><br><span class="line">0.2,1,12,15</span><br><span class="line">0.3,1,16,12</span><br><span class="line">0.5,1,12,16</span><br></pre></td></tr></table></figure><p>If we need to make this simpler or we are not able to collect related data for each type of energy, we could also use data in the below format:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,eType,var</span><br><span class="line">0.2,1,12</span><br><span class="line">0.3,1,16</span><br><span class="line">0.5,1,12</span><br></pre></td></tr></table></figure><p><code>eType</code> is the type of energy, 1 means wind, 2 means sun …</p><p><code>var</code> is the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way. </p><h2 id="Let-thresholds-high"><a href="#Let-thresholds-high" class="headerlink" title="Let thresholds high"></a>Let thresholds high</h2><p>To overcome the cons that some high energy production case will be ignored in the previous cases, use this model to find it. Instead of previous cases, we want to minimize the $\sum_{i,j}S_{ij}$, to use as many as high production case as we could. So the thresholds could be as high as possible.</p><h3 id="Variables-1"><a href="#Variables-1" class="headerlink" title="Variables"></a>Variables</h3><p>J : type of energy, $J\in$ {wind, water, $\cdots$ }</p><p>N : number of days, $\in $ {1,2,3, $\cdots$ ,n}</p><p>c = $\mathbf{R}^J$: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then $C_{wind}$=10*2=20)</p><p>U = $\mathbf{R}^N$: User consumption per unit time N</p><p>S = {0,1}$^{J,N}$, the status code to identify if we need to turn on the machine in this day/unit time. </p><p>C = {0,1,2}$^{J,N}$, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off.</p><p>W = $\mathbf{R}^{J,N}$, the energy produced per day/unit time for j equipment</p><p>B $\in \mathbf{R}^N$ : The amount of energy battery has. With $B_0=$user defined, could be 70% of the battery size</p><p>B $\in \mathbf{R}$ : Constant to represent the battery charging limitation. </p><h3 id="Optimization-Model-3"><a href="#Optimization-Model-3" class="headerlink" title="Optimization Model"></a>Optimization Model</h3><script type="math/tex; mode=display">\begin{equation}\begin{split}&\text{Minimize } & \sum_{i,j}C_{ij}S_{ij}\\&\text{Subject to } & C_{ij}=S_{ij}-S_{i-1,j}+1 \ \forall i\in \{2,\cdots,n\}\\& & 0 \le C_{ij} \le 2 \ \forall i\in N j\in J\\& & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & B_i\ge B \  \forall i\in \{2,\cdots, n\}\\& & B_i=B_{i-1}+\sum_{j\in J}W_{ij}S_{ij}-\sum_{j\in J}c_jC_{ij}S_{ij}-U_i\end{split}\end{equation}</script><p>Use MIP to solve it</p><p>We could use default value if no applied answer found</p><h3 id="Sample-data-3"><a href="#Sample-data-3" class="headerlink" title="Sample data"></a>Sample data</h3><p>Data format is the same as format defined in <a href="#1">Modified Version for Normal Count</a>.</p><h3 id="Possible-GAMS-code-2"><a href="#Possible-GAMS-code-2" class="headerlink" title="Possible GAMS code"></a>Possible GAMS code</h3><h3 id="Interpret-to-Js-2"><a href="#Interpret-to-Js-2" class="headerlink" title="Interpret to Js"></a>Interpret to Js</h3><h3 id="Analyze-2"><a href="#Analyze-2" class="headerlink" title="Analyze"></a>Analyze</h3><h4 id="Pros-2"><a href="#Pros-2" class="headerlink" title="Pros"></a>Pros</h4><ul><li>We will use as much as high production scenario as we could</li><li>Because thresholds is high, a lot of unexpected energy consumption in the turning on process could be eliminated. </li></ul><h4 id="Cons-2"><a href="#Cons-2" class="headerlink" title="Cons"></a>Cons</h4><ul><li>Total energy is not maximized(This makes sense, as we only have a limited energy storage)</li></ul><h2 id="Expected-Count-for-Let-thresholds-high-case"><a href="#Expected-Count-for-Let-thresholds-high-case" class="headerlink" title="Expected Count for Let thresholds high case"></a>Expected Count for Let thresholds high case</h2><p>Data source definition is the same as the previous situation</p><h3 id="Define-variables-2"><a href="#Define-variables-2" class="headerlink" title="Define variables"></a>Define variables</h3><p>J : type of energy, $J\in$ {wind, water, $\cdots$ }</p><p>N : value index, 1, 2, $\cdots$. </p><p>C = $\mathbf{R}^J$: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then $C_{wind}$=10*2=20)</p><p>U = $\mathbf{R}$: Total user consumption</p><p>W = $\mathbf{R}^{J,N}$, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model.</p><p>S = {0,1}$^{J,N}$, to indicate I should turn on wind on this statistic data or not</p><p>B $\in \mathbf{R}$ : The battery charging limitation.</p><p>D $\in \mathbf{R}^{J,N}$, indicate the day count each value index, either pre-calculated or calculate in model.</p><h3 id="Optimization-Model-4"><a href="#Optimization-Model-4" class="headerlink" title="Optimization Model"></a>Optimization Model</h3><script type="math/tex; mode=display">\begin{equation}\begin{split}&\text{Minimize } & \sum_{i\in N}\sum_{j\in J}D_{ij}S_{ij}\\& \text{Subject to}\ & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}-U\ge B\end{split}\end{equation}</script><p>Use MIP to solve it</p><h3 id="Sample-data-4"><a href="#Sample-data-4" class="headerlink" title="Sample data"></a>Sample data</h3><p>Data format is the same as format defined in <a href="#2">Expected Count Model</a>.</p><h3 id="Possible-GAMS-code-3"><a href="#Possible-GAMS-code-3" class="headerlink" title="Possible GAMS code"></a>Possible GAMS code</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">$ontext</span></span><br><span class="line"><span class="comment">generating gdx</span></span><br><span class="line"><span class="comment">gdxxrw E:\test\OptimizationData.xlsx par=data rng=OptimizationData!A1:I12 cDim=1 rDim=1 set=row rng=OptimizationData!A1:I1 cDim=1 set=idx rng=OptimizationData!A2:A12 rDim=1</span></span><br><span class="line"><span class="comment">assume 365 hrs in total to make calculation simpler</span></span><br><span class="line"><span class="comment">Need to add user consumption in the future</span></span><br><span class="line"><span class="comment">//permit partially open, for case when half of days needs to be opened.</span></span><br><span class="line"><span class="comment">MIP is reqired, as we are calculating the expectation, I only know this might happen, but I don't know and no need to know the exact day to turn on or off the device.</span></span><br><span class="line"><span class="comment">So, it is saying we need to turn on this device at this energy level or not.</span></span><br><span class="line"><span class="comment">We can not half turn on the device</span></span><br><span class="line"><span class="comment">wind_count could be wind possibility</span></span><br><span class="line"><span class="comment">$offtext</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">sets</span> idx(*), row(*);</span><br><span class="line"><span class="keyword">parameter</span> data(idx, row);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> OptimizationData.gdx </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> idx row data</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alias</span>(idx,i);</span><br><span class="line"><span class="keyword">Sets</span></span><br><span class="line">       j(row) / wind_value,light_value,wave_value,current_value/ ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">scalar</span> U <span class="comment">"Total user consumption in 365 hrs"</span> /[<span class="number">2139300</span>*<span class="number">365</span>]/</span><br><span class="line">        B <span class="comment">"battery capacity"</span> /<span class="number">1000000000</span>/;</span><br><span class="line"></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variable</span> a(i,j);</span><br><span class="line"><span class="keyword">variable</span> k;</span><br><span class="line"><span class="keyword">equations</span> obj, limit, limitvar1, limitvar2;</span><br><span class="line"><span class="function"><span class="title">obj</span></span>..</span><br><span class="line">    k <span class="symbol">=e=</span> <span class="keyword">sum</span>(i,a(i,<span class="string">"wind_value"</span>)*data(i,<span class="string">"wind_count"</span>)+a(i,<span class="string">"light_value"</span>)*data(i,<span class="string">"light_count"</span>)+a(i,<span class="string">"wave_value"</span>)*data(i,<span class="string">"wave_count"</span>)+a(i,<span class="string">"current_value"</span>)*data(i,<span class="string">"current_count"</span>));</span><br><span class="line"><span class="function"><span class="title">limit</span></span>..</span><br><span class="line">    <span class="keyword">sum</span>(i, a(i,<span class="string">"wind_value"</span>)*data(i,<span class="string">"wind_count"</span>)*data(i,<span class="string">"wind_value"</span>)+a(i,<span class="string">"light_value"</span>)*data(i,<span class="string">"light_count"</span>)*data(i,<span class="string">"light_value"</span>)+a(i,<span class="string">"wave_value"</span>)*data(i,<span class="string">"wave_value"</span>)*data(i,<span class="string">"wave_count"</span>)+a(i,<span class="string">"current_value"</span>)*data(i,<span class="string">"current_value"</span>)*data(i,<span class="string">"current_count"</span>)) - U <span class="symbol">=g=</span> B;</span><br><span class="line"><span class="function"><span class="title">limitvar1</span>(<span class="params">i,j</span>)</span>..</span><br><span class="line">    a(i,j) <span class="symbol">=g=</span> <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="title">limitvar2</span>(<span class="params">i,j</span>)</span>..</span><br><span class="line">    a(i,j) <span class="symbol">=l=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">model</span> energy /<span class="keyword">all</span>/;</span><br><span class="line"><span class="keyword">solve</span> energy <span class="keyword">using</span> mip <span class="keyword">minimizing</span> k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">display</span> a.l;</span><br></pre></td></tr></table></figure><h3 id="Analyze-3"><a href="#Analyze-3" class="headerlink" title="Analyze"></a>Analyze</h3><h4 id="Pros-3"><a href="#Pros-3" class="headerlink" title="Pros"></a>Pros</h4><ul><li>Use expectation to simulate a better estimate of wind speed in different scenario</li><li>Save calculation</li></ul><h4 id="Cons-3"><a href="#Cons-3" class="headerlink" title="Cons"></a>Cons</h4><ul><li>User consumption is not perfect estimate</li><li>Energy stored in battery is not perfectly estimated</li></ul><h2 id="Last-thought"><a href="#Last-thought" class="headerlink" title="Last thought:"></a>Last thought:</h2><p>Both model doesn’t consider extreme case, as people will still have control on the entire system and most of people won’t use this in extreme case.</p><p>To make all models become portable and not using too many calculation, I choose LP or MIP model, instead of building some better estimate model.  </p><p>Battery has some specific charging and discharging curve, like this: <img src="https://i.stack.imgur.com/eltx3.png" alt></p><h2 id="Need-discussion"><a href="#Need-discussion" class="headerlink" title="Need discussion"></a>Need discussion</h2><ul><li><p>Do we know normal user consumption of energy?</p></li><li><p>If no history data provided, then use fixed threshold=energy consumed by equipment in normal life. </p></li><li><p>Another thought: Use a single line and calculate how many value is below the line, estimate and find the least number of turning on/off (Not possible, as turning off is a point but wind might remain low for a duration of time)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAMS </tag>
            
            <tag> MIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>From swing,awt to javafx</title>
      <link href="/2020/projects/From-swing-awt-to-javafx/"/>
      <url>/2020/projects/From-swing-awt-to-javafx/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>A JavaFx project</title>
      <link href="/2020/projects/A-JavaFx-project/"/>
      <url>/2020/projects/A-JavaFx-project/</url>
      
        <content type="html"><![CDATA[<p>This is a Group project done by me. I will talk about my design and usage instruction in the following space. Detailed implementation could be view at <a href="https://github.com/ShaokangJiang/A-JavaFX-project" target="_blank" rel="noopener">This repository</a>. </p><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/A-JavaFX-project" target="_blank" rel="noopener">https://github.com/ShaokangJiang/A-JavaFX-project</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/A-JavaFX-project/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/A-JavaFX-project/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/A-JavaFX-project/archive/0.9.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/A-JavaFX-project/archive/0.9.zip</a></p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><a id="more"></a><h4 id="Command-Line-Guide"><a href="#Command-Line-Guide" class="headerlink" title="Command Line Guide"></a>Command Line Guide</h4><p>It is possible to run from command line or use command line version to interrupt with basic feature, including import. It has two mode, command line mode and  command line start. In Command line start, you can specify your argument and then program will enter GUI automatically. In command line mode, you can decide the time you want to enter GUI interface. </p><h5 id="Command-line-mode"><a href="#Command-line-mode" class="headerlink" title="Command line mode"></a>Command line mode</h5><p>In this mode, you will see an interface like this in command mode:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Welcome to <span class="built_in">command</span> mode of this program. Because of the requirement of this assignment,</span><br><span class="line"> majority effort should be <span class="keyword">done</span> <span class="keyword">in</span> GUI. This part is only <span class="keyword">for</span> <span class="built_in">command</span> line import <span class="keyword">function</span>. </span><br><span class="line">Usage:  -f <span class="string">"path/to/file"</span> -- This file will be imported. Should be csv files. Seperate using ; <span class="keyword">if</span> there are multiple files</span><br><span class="line"> -d <span class="string">"path/to/file"</span> -- This will import any csv file <span class="keyword">in</span> the directory, <span class="keyword">if</span> any of them contain incorrect formatted data, no data will be imported </span><br><span class="line"> -h -- <span class="built_in">print</span> <span class="built_in">help</span> message </span><br><span class="line"> -g -- start GUI </span><br><span class="line"></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>To enter it:</p><blockquote><p><strong>Path to JavaFx:</strong> The path to the library directory to JavaFx. Sample, <code>/home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --<span class="keyword">module</span>-path <span class="string">"&lt;Path to Javafx&gt;"</span> --add-modules javafx.controls,javafx.fxml -jar executable.jar -c</span><br></pre></td></tr></table></figure><h5 id="Command-line-start"><a href="#Command-line-start" class="headerlink" title="Command line start"></a>Command line start</h5><p>In this mode, it has two options, either import a directory of csv files or import a list of files separate with ‘;’;</p><p>To import a directory of csv files: use <code>-d</code> option, e.g. <code>-d \home\csv\</code>. To import a list of files separate with ‘;’, no option argument required, simple add absolute path of files and separate different files with ‘;’, e.g. <code>\home\csv\a.csv;\home\csv\b.csv</code> </p><p>Program will start GUI automatically after importing. </p><p>To enter GUI with importing a list of files separate with ‘;’:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --<span class="keyword">module</span>-path <span class="string">"&lt;Path to Javafx&gt;"</span> --add-modules javafx.controls,javafx.fxml -jar executable.jar &lt;Path to csv file&gt;</span><br></pre></td></tr></table></figure><p>Or, start with importing a directory: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --<span class="keyword">module</span>-path <span class="string">"&lt;Path to Javafx&gt;"</span> --add-modules javafx.controls,javafx.fxml -jar executable.jar -d &lt;Path to csv directory&gt;</span><br></pre></td></tr></table></figure><h4 id="Running"><a href="#Running" class="headerlink" title="Running"></a>Running</h4><h5 id="Download-from-release-page-or-compile-from-source"><a href="#Download-from-release-page-or-compile-from-source" class="headerlink" title="Download from release page or compile from source."></a>Download from release page or compile from source.</h5><blockquote><p><strong>Path to JavaFx:</strong> The path to the library directory to JavaFx. Sample, <code>/home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib</code></p></blockquote><h6 id="Download-from-release-page-on-Github"><a href="#Download-from-release-page-on-Github" class="headerlink" title="Download from release page on Github:"></a>Download from release page on Github:</h6><ol><li>Download <a href="https://openjfx.io/" target="_blank" rel="noopener">JavaFX</a> (their official website) and download <code>executable.jar</code> from release page</li><li><code>java --module-path &quot;&lt;Path to Javafx&gt;&quot; --add-modules javafx.controls,javafx.fxml -jar executable.jar</code></li></ol><h6 id="Download-and-compile-from-source-page"><a href="#Download-and-compile-from-source-page" class="headerlink" title="Download and compile from source page:"></a>Download and compile from source page:</h6><blockquote><p><strong>NOT RECOMMEND</strong> as too many arguments, dependencies and it is easy to be wrong</p></blockquote><h4 id="Source-data"><a href="#Source-data" class="headerlink" title="Source data:"></a>Source data:</h4><p>Source data should be in the format, it means this farm uses those amount of milk in this date:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">date,id,weight</span><br><span class="line">2019-1-1,id 0,6760</span><br><span class="line">2019-1-1,id 1,8644</span><br><span class="line">2019-1-1,id 2,3547</span><br><span class="line">2019-1-2,id 0,6824</span><br></pre></td></tr></table></figure><h2 id="Design"><a href="#Design" class="headerlink" title="Design"></a>Design</h2><p>An overall agreement of this design is that those function should not only work for this project but also for other project. </p><h4 id="Basic-components"><a href="#Basic-components" class="headerlink" title="Basic components:"></a>Basic components:</h4><img src="/2020/projects/A-JavaFx-project/2.png"><p>It contains the structure to use in this program. </p><h4 id="Manager-amp-Report"><a href="#Manager-amp-Report" class="headerlink" title="Manager&amp;Report:"></a>Manager&amp;Report:</h4><img src="/2020/projects/A-JavaFx-project/3.png"><p>It could be the heart of this program’s non-GUI part, it contains method to handle with file, manage farmers. </p><p>Report part is to generate different GUI report and then let it show up in the major window, <code>Notification.java</code>.</p><h4 id="GUI-components"><a href="#GUI-components" class="headerlink" title="GUI components:"></a>GUI components:</h4><img src="/2020/projects/A-JavaFx-project/1.png"><p>Components that are not shown in the graph are two, <code>alert1.java</code>, <code>ChoiceWindow.java</code>. One component is the alert class to show various alerting information.  <code>ChoiceWindow.java</code> has all window required for choosing. Such as choosing for filter categories. This is a helper class to generate interface for user to select filter or other categories they want. Such as, choosing which function you want to use to manage data</p><p>The other are major part either control or show interfaces to user.  <code>Main.java</code> also has the responsibility to handle command line input. </p><h4 id="Detailed-design"><a href="#Detailed-design" class="headerlink" title="Detailed design"></a>Detailed design</h4><p>A detailed class by class design document and agreement could be view at here: </p><blockquote><p>This is the initial thought of design by me <strong>before</strong> the actual implementation, so the data structure used to store farmers has changed to <code>Hashmap</code> and there are  lot of minor changes. To see the latest version, go to <a href="https://github.com/ShaokangJiang/A-JavaFX-project" target="_blank" rel="noopener">This repository</a>. </p><p>And I have no idea about JavaFx when I design this structure, so it is possible that some places have structure error. </p></blockquote><div class="row">    <embed src="./1.pdf" width="100%" height="550" type="application/pdf"></div><h4 id="Special-notes"><a href="#Special-notes" class="headerlink" title="Special notes:"></a>Special notes:</h4><p><strong>It requires oracle java 1.9(openjdk on linux) or above</strong></p><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit:"></a>Credit:</h2><p>As you might see from the category tag, this is a project for a coursework. Any information for this section has been removed to meet the requirement and ambiguous copyright rules from the professor. </p><p>Their requirement is to remove any description regard to the assignment. I believe this document has less than 0.1% similarity with the original description document, this should meet the requirement. </p><p>Basically, part of the thought, like what this program should have, all of the design, all of the implementation is done by me. </p><p>This page is created for fun and not intended to violate any copyright rule. So, let me know if this version is still inappropriate via <a href="mailto:sjiang97@wisc.edu" target="_blank" rel="noopener">email</a>.</p><h2 id="Last-Note"><a href="#Last-Note" class="headerlink" title="Last Note:"></a>Last Note:</h2><p><code>JavaFX</code> should be good for multi-platform usage and it is easy to build a good, well-formed application. But it is a little bit different than the other, including <code>swing</code>, <code>awt</code>. So, we can not use the same thought to think about <code>JavaFX</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> Coursework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Modified traffic simulator</title>
      <link href="/2020/projects/Modified-simulator/"/>
      <url>/2020/projects/Modified-simulator/</url>
      
        <content type="html"><![CDATA[<p>My modified version is at <a href="https://traffic-simulation.shaokang.ga/" target="_blank" rel="noopener">https://traffic-simulation.shaokang.ga/</a>. I just add an export function to export data for each car and measuring point to csv file. I will talk them in details at here and discuss my thought. </p><a id="more"></a><h3 id="Modification"><a href="#Modification" class="headerlink" title="Modification"></a>Modification</h3><p>I just add an export function to get the data for each car and measuring point. You could see them in real time or download them. </p><h4 id="View"><a href="#View" class="headerlink" title="View"></a>View</h4><p>To see them in real time. Visit: <a href="https://traffic-simulation.shaokang.ga/" target="_blank" rel="noopener">https://traffic-simulation.shaokang.ga/</a>, you will be able to see a text field in the right bottom place. That is the data area. I set a limitation of a maximize of 500 rows because browser will be slow when there are too many rows as we need to append data in real time to those box. This limitation won’t limit content in the csv file you could get by pressing download button. Example image as shown below: </p><img src="/2020/projects/Modified-simulator/1.png"><h4 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h4><p>It is also easy to download. Simply click the button below each box is enough. File will be saved as csv. File has a size limitation based on your browser, generally, 800 MB. Sample downloaded data:</p><p>Sample car data: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Time,rType,id,Speed,lane,u</span><br><span class="line">0,MainRoad,200,58,0,660.09908</span><br><span class="line">0,MainRoad,201,58,1,625.52486</span><br><span class="line">0,MainRoad,202,58,2,590.95306</span><br><span class="line">0,MainRoad,203,58,0,556.38140</span><br><span class="line">0,MainRoad,204,58,1,521.80634</span><br></pre></td></tr></table></figure><p>Sample statistic data:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Time,loc_x,loc_y,flow,Speed</span><br><span class="line">0.2,613.894,182.693,0,--</span><br><span class="line">0.2,175.208,429.275,0,--</span><br><span class="line">0.2,613.894,489.337,0,--</span><br><span class="line">10.2,613.894,182.693,3960,64</span><br><span class="line">10.2,175.208,429.275,1800,64</span><br><span class="line">10.2,613.894,489.337,1800,64</span><br></pre></td></tr></table></figure><h3 id="My-Understanding"><a href="#My-Understanding" class="headerlink" title="My Understanding"></a>My Understanding</h3><p>Based on my understanding, this simulation use the following system to monitor a car: Direction/position of vehicles <lane,u,rtype> (One road only have one direction)</lane,u,rtype></p><ul><li>lane — which road this car is on</li><li>u — distance from start point</li><li>rType — type of road(main road or ramp or others)</li></ul><p>I also have a plan to make another simulator in Java if I have time in the future, which has the same functionality as this one. Here is the detailed plan. </p><ol><li><p><strong>Problem:</strong> A specific type of road, at least 3 main road and one ramp, will be provided. Number of road is able to change at the beginning of the program. The program will be given with the car density, car acceleration, Truck existence percentage and any rule regard to the road set up by the user by drag specific sign to specific position. Then, program needs to simulate the real time running situation and represent the real time graph on the left hand. User is able to change each criteria and graph left side should represent the change dynamically. After user stops, the program will be able to export data contains information about those cars and statistic data. During simulation, cars are able to change route and we assume that driver will choose to change the route if that route is faster.</p></li><li><p><strong>Graphical User interface</strong>: </p><blockquote><p>This is only a simple case, there could be other types of roads</p></blockquote><ul><li><p>An asking prompt to ask user for specific information</p><img src="/2020/projects/Modified-simulator/Untitled%20Diagram1.jpg"></li><li><p>A major running part, left side is the real time running graph. Right hand contains bars to change different criteria, such as car density, car acceleration, Truck existence percentage. </p></li></ul><img src="/2020/projects/Modified-simulator/Untitled%20Diagram.jpg"><ul><li><p>When exit, prompt a save as prompts to ask user choose path to save. Or user could choose to ignore running data.</p><img src="/2020/projects/Modified-simulator/Untitled%20Diagram2.jpg"></li><li><p>In the runtime, the center window is represented as the real time simulation result, like this: </p><img src="/2020/projects/Modified-simulator/Untitled%20Diagram.jpg.jpg"></li></ul></li><li><p><strong>Data</strong>: The program might provide function to read configuration from files but it is not necessary. </p></li></ol><p>Because those data are randomly chosen by user, there is no need to store them in a file before the program running. Initial configuration could be loaded from a configuration txt file. Content looks like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">car_density: 0.5</span><br><span class="line">car_acceleration: 1.2 </span><br><span class="line">trunk acceleration: 1.2</span><br><span class="line">Truck existence percentage: 0.5</span><br><span class="line">Maximize speed for trunk: 108</span><br><span class="line">Maximize speed for car: 120</span><br><span class="line"># of main road: 3</span><br></pre></td></tr></table></figure><ul><li>car density - double type $\in$ (0,1), sample: 0.5 — means half road will get a car as an inflow in a second</li><li>car acceleration - double type $\in$ (0,6), sample 1.2, unit $m/s^2$</li><li>trunk acceleration - double type $\in$ (0,4), sample 1.2, unit $m/s^2$</li><li>Truck existence percentage - double type $\in$ (0,1), sample: 0.5 — means half of inflow cars will be trunk.</li><li>Maximize speed for trunk - double type $\in$ (0,120), sample 108, unit $km/h$</li><li>Maximize speed for car - double type $\in$ (0,120), sample 108, unit $km/h$</li><li># of main road - int type $\in$ [2,5], sample 3.</li></ul><ol><li><strong>Class (Type) Summary</strong>: It is easy to see the program requires two type of cars, car and trunk. Actually, some values are shared. So, we could have an interface basiccar and an abstract class of them as well. Or other ways are also fine. Then, car and trunk class could implement them. We do also need some road classes, and a plot class to plot information provided by road class. </li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">Class Name</th><th>Descriptions</th></tr></thead><tbody><tr><td style="text-align:left">basicCar.java</td><td>Super class of car and trunk, contains basic info to describe a car. See <a href="#1">below</a> for more information.</td></tr><tr><td style="text-align:left">car.java</td><td>Contain more info, such as maxmize speed for car, and personalized acceleration speed.</td></tr><tr><td style="text-align:left">trunk.java</td><td>Contain more info, such as maxmize speed for trunk, and personalized acceleration speed.</td></tr><tr><td style="text-align:left">road.java</td><td>Handle restrictions user put and add cars to roads.</td></tr><tr><td style="text-align:left">plot.java</td><td>The most admin class that handle info between GUI and other class and plot on graph.</td></tr></tbody></table></div><h3 id="Credit"><a href="#Credit" class="headerlink" title="Credit:"></a>Credit:</h3><p>Original simulator is at <a href="https://github.com/movsim/traffic-simulation-de" target="_blank" rel="noopener">https://github.com/movsim/traffic-simulation-de</a>. I forked from this repo and made those edition. Let me know if this is not appropriate. </p>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoCommenter</title>
      <link href="/2019/projects/AutoCommenter/"/>
      <url>/2019/projects/AutoCommenter/</url>
      
        <content type="html"><![CDATA[<h3 id="Automatically-add-comments-to-Java-source-code"><a href="#Automatically-add-comments-to-Java-source-code" class="headerlink" title="Automatically add comments to Java source code"></a>Automatically add comments to Java source code</h3><p>This program can not understand your code. What it is doing is to add some comments based on specific rule and make your program full of comments to meet the requirement of dummy comments required in some courses.</p><p>And actually, this program can only add comments to some specific area. For some other areas, it could detect it and send a window to ask you for comments and provide some suggestion. </p><a id="more"></a><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip</a></p><h4 id="Sample-result"><a href="#Sample-result" class="headerlink" title="Sample result:"></a>Sample result:</h4><p><strong>Before adding:</strong></p><img src="/2019/projects/AutoCommenter/1.png" title="test"><p><strong>After adding</strong></p><img src="/2019/projects/AutoCommenter/2.png" title="test"><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><h5 id="Creating-configuration-file-and-put-it-to-the-running-directory"><a href="#Creating-configuration-file-and-put-it-to-the-running-directory" class="headerlink" title="Creating configuration file and put it to the running directory"></a>Creating configuration file and put it to the running directory</h5><p>A model of configuration file as shown below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-----special:-----</span><br><span class="line">BAIDU_APP_ID: </span><br><span class="line">BAIDU_SECURITY_KEY: </span><br><span class="line">IFLY_APP_ID: </span><br><span class="line">lineLimit:90</span><br><span class="line">-----conditions:-----</span><br><span class="line">if\s*\(.*\) Following code will be generated if ###.*### met.</span><br><span class="line">while\s*\(.*\) Following code will be excuted for multiple time till ###.*### doesn&apos;t met.</span><br><span class="line">do\s*\&#123; A do...while... loop will be handled.</span><br><span class="line">[^&gt;&lt;!=]+=&#123;1&#125;.* Assign values.</span><br><span class="line">for\s+\(.*\) Running iteration on required object.</span><br><span class="line">else\s*\&#123; Do the following if no condition above is met.</span><br><span class="line">return.*; Return ###.*### to the program call from.</span><br><span class="line">break; Break current loop.</span><br><span class="line">System\.out\.println\(.*\) Print information of ###.*### to the user screen.</span><br><span class="line">default\s*\: When default case get touched.</span><br><span class="line">case.*\: Under the case of ###.*###</span><br><span class="line">\.push\( push element to the stack, to the top of it</span><br><span class="line">\.pop\( pop element from the stack, from the top of it</span><br><span class="line">\.peek\( peek element from the stack, never removes data</span><br><span class="line">\.isEmpty\( check if it is empty or not</span><br></pre></td></tr></table></figure><p><code>-----special:-----</code> and <code>-----conditions:-----</code> are field tags, These field tags should matches exactly as what described above. </p><h6 id="Special-field"><a href="#Special-field" class="headerlink" title="Special field:"></a>Special field:</h6><ul><li>BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use translation function.</li><li>IFLY_APP_ID: Need register with Ifly at <a href="https://www.xfyun.cn/" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use voice dedication function </li><li>lineLimit: Words will be cut of at the exact limitation position if it is out of limits.</li></ul><h6 id="Conditions"><a href="#Conditions" class="headerlink" title="Conditions:"></a>Conditions:</h6><p>The conditions used to detect on each line of code and make comments at the end of each line. It uses the regular expression of java to detect words. The format of writing condition is <code>[Expression] &lt;Words&gt;</code>. They are separated using space.</p><p><code>[Expression]</code>: The java regular expression. If space is needed, use \s instead of an empty place.</p><p><code>&lt;Words&gt;</code>: The words to comment at the end of sentences that contains this expression. Use <code>###.*###</code> to place contents matches <code>.*</code> on the left hand side.  Only the first one on the left hand side will be placed on the right side.  And code only support  <code>###.*###</code> syntax right now.</p><p>For example, If there is a line in java code: <code>System.out.println(&quot;Hello World!&quot;);</code>. This meet the requirement of <code>System\.out\.println\(.*\)</code> defined above. So, the comments to be added to the end of this line is <code>Print information of &quot;Hello World!&quot; to the user screen.</code> In most case, this will make sense. </p><h6 id="Other-places"><a href="#Other-places" class="headerlink" title="Other places:"></a>Other places:</h6><p>For the other place, including method header, method implementation method, return value description, pass in parameter and some other things, program will promote a window like this to let you input word you want. Default in graph below will be replaced with some guidance words.</p><img src="/2019/projects/AutoCommenter/3.png" title="test"><p>For some method, such as getter, setter, constructor, program will place some predefined words at here. You could edit it as you need. For the edit method, you could use start listen button to speech language you choose in the first step and use voice dedicator. </p><h4 id="Compile-amp-run"><a href="#Compile-amp-run" class="headerlink" title="Compile &amp; run"></a>Compile &amp; run</h4><h5 id="Download-from-release-page-or-compile-from-source"><a href="#Download-from-release-page-or-compile-from-source" class="headerlink" title="Download from release page or compile from source."></a>Download from release page or compile from source.</h5><h6 id="Download-from-release-page"><a href="#Download-from-release-page" class="headerlink" title="Download from release page:"></a>Download from release page:</h6><ol><li>Choose correct library to download and download AutoCommenter from release page</li><li><code>java -jar AutoCommenter.jar [-d] &lt; Directory or files path &gt;</code></li><li><code>-d</code> is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, <code>java -jar AutoCommenter.jar E:\test</code></li><li><code>&lt;File path&gt;</code> could be a list of files separated with space. Like, <code>java -jar AutoCommenter.jar file1.java file2.java</code>.</li></ol><h6 id="Download-from-release-page-1"><a href="#Download-from-release-page-1" class="headerlink" title="Download from release page:"></a>Download from release page:</h6><ol><li><code>git clone https://github.com/sjiang97/AutoCommenter.git</code></li><li><code>cd AutoCommenter</code></li><li><code>find -name &quot;*.java&quot; &gt; sources.txt</code> : Find all java files to compile</li><li><code>mkdir bin</code></li><li><code>javac -d ./bin -cp ./\* @sources.txt</code></li><li><code>cd bin</code></li><li><code>java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test [-d] &lt; Directory or files path &gt;</code></li><li><code>-d</code> is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, <code>java -jar AutoCommenter.jar E:\test</code></li><li><code>&lt;File path&gt;</code> could be a list of files separated with space. Like, <code>java -jar AutoCommenter.jar file1.java file2.java</code>.</li></ol><h4 id="Special-notes"><a href="#Special-notes" class="headerlink" title="Special notes:"></a>Special notes:</h4><p><strong>It requires oracle java 1.8(openjdk on linux) or above</strong></p><p><strong>It requires a well formated java code:</strong>, In eclipse, kick <code>Ctrl+Shift+f</code> to make code well formated. And define property of class, fields specifically, i.e. include <code>public</code> instead of omit it.</p><p>It works perfectly on windows machine. It might have problem on mac/linux. </p><h4 id="Further"><a href="#Further" class="headerlink" title="Further"></a>Further</h4><ul><li>This is not perfect. Lots of places need to improve</li><li>Didn’t add class header automatically</li><li>Program should able to do multiple replacement</li><li>Program should allow user to define mapping relationship between name of method and javadoc sample. </li></ul>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoiceInput</title>
      <link href="/2019/projects/VoiceInput/"/>
      <url>/2019/projects/VoiceInput/</url>
      
        <content type="html"><![CDATA[<h3 id="A-simple-method-to-write-words"><a href="#A-simple-method-to-write-words" class="headerlink" title="A simple method to write words"></a>A simple method to write words</h3><p>I like to use voice input to write words. But I didn’t find an easy to use voice dedication program with dynamic correction. So I made this one. A java voice input interface using iflytek voice dictation with dynamic correction.</p><a id="more"></a><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip</a></p><h4 id="Sample-run"><a href="#Sample-run" class="headerlink" title="Sample run:"></a>Sample run:</h4><p>You need to choose a language to dedicate in bash window at first. Then a window below will be pushed out: </p><p>Each button clarify what you could do clearly. </p><img src="/2019/projects/VoiceInput/3.png" title="test"><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><h5 id="Creating-configuration-file-and-put-it-to-the-running-directory"><a href="#Creating-configuration-file-and-put-it-to-the-running-directory" class="headerlink" title="Creating configuration file and put it to the running directory"></a>Creating configuration file and put it to the running directory</h5><p>A model of configuration file as shown below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-----special:-----</span><br><span class="line">BAIDU_APP_ID: </span><br><span class="line">BAIDU_SECURITY_KEY: </span><br><span class="line">IFLY_APP_ID:</span><br></pre></td></tr></table></figure><p><code>-----special:-----</code> is field tag, It should matches exactly as what described above. </p><h6 id="Special-field"><a href="#Special-field" class="headerlink" title="Special field:"></a>Special field:</h6><ul><li>BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use translation function.</li><li>IFLY_APP_ID: Need register with Ifly at <a href="https://www.xfyun.cn/" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use voice dedication function </li></ul><h4 id="Compile-amp-run"><a href="#Compile-amp-run" class="headerlink" title="Compile &amp; run"></a>Compile &amp; run</h4><h5 id="Download-from-release-page-or-compile-from-source"><a href="#Download-from-release-page-or-compile-from-source" class="headerlink" title="Download from release page or compile from source."></a>Download from release page or compile from source.</h5><h6 id="Download-from-release-page"><a href="#Download-from-release-page" class="headerlink" title="Download from release page:"></a>Download from release page:</h6><ol><li>Choose correct library to download and download VoiceInput from release page</li><li><code>java -jar VoiceInput.jar</code></li></ol><h6 id="Download-and-compile-from-source-page"><a href="#Download-and-compile-from-source-page" class="headerlink" title="Download and compile from source page:"></a>Download and compile from source page:</h6><ol><li><code>git clone https://github.com/sjiang97/VoiceInput.git</code></li><li><code>cd VoiceInput</code></li><li><code>find -name &quot;*.java&quot; &gt; sources.txt</code> : Find all java files to compile</li><li><code>mkdir bin</code></li><li><code>javac -d ./bin -cp ./\* @sources.txt</code></li><li><code>cd bin</code></li><li><code>java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test</code></li></ol><h4 id="Special-notes"><a href="#Special-notes" class="headerlink" title="Special notes:"></a>Special notes:</h4><p><strong>It requires oracle java 1.8(openjdk on linux) or above</strong></p>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>College library optimization problem</title>
      <link href="/2019/projects/College-library-optimization-problem/"/>
      <url>/2019/projects/College-library-optimization-problem/</url>
      
        <content type="html"><![CDATA[<p>This project is a group work designed and solve by Shaokang Jiang &amp; Katherine Fu for course CS524 project. </p><p>Optimization is a powerful way to solve real problem in a short amount of time. It needs us to use more math when we design solutions instead of using computing resources when the problem runs. GAMS is a powerful optimization software. GAMS could do calculation and generate equations in seconds. By using CPLEX, we are able to reach solutions in seconds. In this project, we utilize GAMS feature (dynamic sets, mip, etc) and nearly solved a real problem. </p><p><a id="Problem"></a></p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="College-library-optimization-problem"><a href="#College-library-optimization-problem" class="headerlink" title="College library optimization problem"></a>College library optimization problem</h3><p>We consider a simplified example of arranging the number of students who use the college library for studying. <a id="more"></a>In different period of time during school year, the number of students staying in the library is different. During the midterm and final weeks, the number is rapidly increasing. Thus, it is essential to maximize the efficiency of the number of hours of students who can use the library <!-- more -->given their studying duration of using individual seats, the inflow and outflow of students, the equipment checking-out situations, and so on.</p><p>To simplify our model, we assume that the library has two sections: a quiet area, a public area. The total number of seats in the college library is 1000. </p><table>    <tr>        <th colspan="2"><center>Quiet area</center></th>        <th colspan="4"><center>Public area</center></th>    </tr>    <tr>        <td>&le;5 hrs</td>        <td>&gt;5 hrs</td>        <th colspan="2">For project</th>        <th colspan="2">For chatting</th>    </tr>    <tr>        <td></td>        <td></td>        <td>&le;2 hrs</td>        <td>&gt;2 hrs</td>        <td>&le;4 hrs</td>        <td>&gt;4 hrs</td>    </tr>    <tr>        <td>1</td>        <td>0.6</td>        <td>1.1</td>        <td>0.5</td>        <td>0.12</td>        <td>0.05</td>    </tr></table><p>To understand the Efficiency, we gave an example at here. Assume a person could finish a page of work in an hour, this is defined as one unit of efficiency, also known as the efficiency per hour for a person work in quiet area for less than 5 hours. But if this person work more than 5 hours, then he/she can only finish 0.6 pages of work for each hour he/she spend. By using formula, it looks like this: (t stand for time of working, f(t) stand for total efficiency)  Equation 1 stand for student total efficiency staying in quiet area. Equation 2 stand for student total efficiency staying in public area for project purpose. Equation 3 stand for student total efficiency staying in public area for chatting purpose. </p><script type="math/tex; mode=display">\begin{equation}  f(t)=\left\{  \begin{aligned}  & 1*t & \forall t\le 5 \\  & 5+0.6*t & \forall t> 5  \end{aligned}  \right.\end{equation}</script><script type="math/tex; mode=display">\begin{equation}  f(t)=\left\{  \begin{aligned}  & 1.1*t & \forall t\le 2 \\  & 2.2+0.5*t & \forall t> 2  \end{aligned}  \right.\end{equation}</script><script type="math/tex; mode=display">\begin{equation}  f(t)=\left\{  \begin{aligned}  & 0.12*t & \forall t\le 4 \\  & 0.48+0.05*t & \forall t> 4  \end{aligned}  \right.\end{equation}</script><p>It is permitted to switch a person from quiet place to public place. A person who requested the quiet apace and switched to public space due to limited seats will have an coefficient of efficiency of 0.8; A person who requested the public apace and switched to quiet space due to limited seats will have an coefficient of efficiency of 0.3; </p><p>Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the caalculation result from the previous step, f(x) stand for result of new efficiency)</p><script type="math/tex; mode=display">\begin{equation}  f(x)=\left\{  \begin{aligned}  & 0.8*x & \forall x| quiet\rightarrow public \\   & 0.3*x & \forall x| public \rightarrow quiet  \end{aligned}  \right.\end{equation}</script><p><a id="end_o1"></a></p><p>The college library also provides equipment including laptops,<br>calculators, and computer chargers for students to use. If a student<br>checks out one of these equipment, the efficiency of that student could be multiply by those coefficient. The coefficient for regular efficiency is shown below.</p><div class="table-container"><table><thead><tr><th>Laptops</th><th>calculators</th><th>computer chargers</th></tr></thead><tbody><tr><td>1.1</td><td>1.2</td><td>1.3</td></tr></tbody></table></div><p>Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the calculation result from the previous step, f(x) stand for result of new efficiency)</p><script type="math/tex; mode=display">\begin{equation}  f(x)=\left\{  \begin{aligned}  & 1.2*x & \forall x| calculator=1 &\\   & 1.1*x & \forall x| laptops=1 &\\  & 1.3*x & \forall x| charger=1 &  \end{aligned}  \right.\end{equation}</script><p>The number of laptops is 10, the total number of calculators is 30, and<br>the number of chargers is also 10. Every person could use those equipment for the time duration that they are study in the library. Each person could borrow at most one equipment during time duration that he is in library.</p><p>data.gdx contain the data of students’ thinking of purpose of using those equipment and seats in the library. We want to consider a situation in a day of experimenting period during opening hours of 8:00 am to 9:00 pm. This file recorded the time when a student enter the library; the time they want to study; the place they want to study; Max possible hours for quiet hours is 10. Max possible hours for public hours is 6; type of 0 stands for project, 1 stands for chatting; </p><p>By using data above, you are going to give permission for certain group of students to enter this library and arrange seats in the library in order to maximize total efficiency. And also, to demonstrate that this library is open to all people, you get to allow at least 10 chatting people to enter this library. </p><h4 id="Objective1"><a href="#Objective1" class="headerlink" title="Objective1:"></a>Objective1:</h4><p>How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library?</p><p>Dataset could be downloaded from <a href="https://shaokang.ga/data.gdx">data.gdx</a>.</p><h4 id="Objective2"><a href="#Objective2" class="headerlink" title="Objective2:"></a>Objective2:</h4><p>More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library.</p><p>Dataset could be downloaded from <a href="https://shaokang.ga/data-free.gdx">data-free.gdx</a>, <a href="https://shaokang.ga/data-middle.gdx">data-middle.gdx</a>, <a href="https://shaokang.ga/data-busy.gdx">data-busy.gdx</a>.</p><h4 id="Objective3"><a href="#Objective3" class="headerlink" title="Objective3:"></a>Objective3:</h4><p>Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason.</p><h2 id="Analyze"><a href="#Analyze" class="headerlink" title="Analyze:"></a>Analyze:</h2><h4 id="The-approach-used"><a href="#The-approach-used" class="headerlink" title="The approach used."></a>The approach used.</h4><p>We organized the requests from all the students based on their (enter_hour, public_hour) with the help of variables, respectively, n_pe_public and n_pe_quiet. These are represented as the maxmize number of people each regetangle block could contain in the graph below.</p><p><img src="https://wp1sqw.bn.files.1drv.com/y4mGlSqlxLGHhN5pyoGcH3iKswCkHuysM7gqvGAQngOErEEKi-Hv-f6xWD0fqTSnkNK68jTEcS-3uJ0IFAxRwJJRHD1ayVKXlGz63b4vLtN5XX8SYWNFLgGtBo9478yzbQE9DeF-trxhwcXutuXnuRUJyE4JeqavCYhFg3FhAwh3TobvqdG_epxR54zVTk4NVQxrn490NA8feKjUHj6n9_LTw?width=4638&amp;height=1625&amp;cropmode=none" alt="Diagram"></p><p>Regarding the opening time of the library, there are two variables called quiet_arrange and public_arrange in a form of tuples (enter_hour, public_hour) as an entry. Based on the graph above, every quiet(open_hour, quiet_hour) variable contains # of people staying on seat at certain time interval and the duration of his or her studying hours is illustrated as the length of each block. Same case for public area. After we synthesized all the cases of students from his or her entering times to leaving times, we could form a complete diagram and the left graph above is a snippet.</p><p>In general, we utilized a dynamic set determined by students’ entering time and the duration of studying in either quiet or public area during each time interval from 8 am to 9 pm to measure the seat arrangement. This dynamic dataset is called “visible_quiet”, a 3-dimensional set, with sets (o, enter_hour, quiet_hour). It means, for every time interval o(as 10:00 in above) starting from 8 am, the (open_hour, quiet_hour) should be counted once, which is shown as shaded blocks on the top right side. In each time interval, a decent amount of students will enter the library and the total number during that time will be calculated. For example, based on the graph above, quiet(“8”, “3”) records the number of students who enter the library at 8 am and stay for 3 hours. If another student comes at 10 am and has also studied for 3 hours, we should count both of them in the time interval from 10 am to 11 am (the shaded area). The sum of number of students that shaded blocks contains should be less or equal to a corresponding variable(called quiet_chairs in code). Similiar case would be applied to public case.</p><p>We also took the seat-switching situations as considerations. The number of students in quiet area in certain interval should be the sum of the number of current students, those who just arrive, and those who switch from the public area to the quiet area(named as switch_p2q in code). Same thing applies to the arrangement of the public area(in a variable called switch_q2p).</p><p>Our objective is to maximize the total efficiency. We realized the utilization of calculators, chargers and laptops will also exert significant effects on students’ efficiency. Considering that it was hard to calculate them with our original model, we splited the entire block into two stages demonstrated in two blocks in <a href="#o11">obj1</a>. The <a href="#o1s1">first stage</a> begin from the head of introduction and end at <a href="#end_o1">here</a>. Because we had them in the problem description part, we solved the <a href="#o1s2">second stage</a> and use this model to discover data in obj2. In the <a href="#o1s1">first stage</a>, the model is calculated by multiplying the base total efficiency coefficients with the number of hours students spend in each area. The base total efficiency coefficients depend on area and hours, so they are pre-calculated and stored in eff_quiet and eff_public in the code. We also considered the situation whether students switch areas or utilize equipments. For different scenarios, we multiplied hours with different coefficients. More details will be discussed in the section below.</p><p>For the <a href="#o1s2">second stage</a> of the problem, we employed some variables similar to ca_need_public, ca_need_quiet to represent the machines borrowed at pair (enter_hour, quiet_hour). We organized the needs for devices at first and set up them as an upper bound. The other procedures are similar to methods using in stage one. One difference is that we utilized some variableS for spliting, similar to ca_need_public_1, ca_need_public_2. They are used later for the objective function. Because the objective function has two variables with different conditions(quiet_arrange and switch_p2q) in each type(pblic or quiet) taking different final coefficient, we need to split the variable to represent those conditions. Because we try to maximizing the problem, the program will always fill the quiet_arrange first as it has a higher coefficient in general.</p><p>In terms of the number of equipments, we assumed that the requests for equipments should be greater than the number the library has. Given a simple example. If four students all require to use calculator but currently, the library only has 3 calculators available, we try to find a way to give the calculators to students in order to maximize the total efficiency.</p><h4 id="Optimization-model"><a href="#Optimization-model" class="headerlink" title="Optimization model"></a>Optimization model</h4><p>We first counted the total number of people in either public or private areas based on the avalibility. Then, we calculated the efficiency of both regular studying hour, switching situations, and, equipment check-out situations and attempt to maxmize the total efficiency. We finally displayed students who have been chosen to study in certain seats in certain time interval.</p><p>We simplified the representation so we only represented the quiet study room and calculator case.<br>In the model, we had those variables:</p><ul><li>let o to be a set of open hour from 8 to 21. </li><li>let q to be a set of people can stay in the quiet room, from 1 to 10. </li><li>let ty be the type of public object, it could be chat or project. </li><li>let qi be the set of original people record identity number, and cj be the category, like enter, hours, calculator</li><li>Let $Quiet_{ml}$ for $m\in qi, l\in cj$ represent the dataset. </li><li>let $sq_{ijk}$ for $i,j\in o, k\in q$ be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible.  For example, $s_{9jk}$ = {(8,2),(8,3),(8,4)…(8,10),(9,1),(9,2),(9,3)…(9,10)}  </li><li>let $sp_{lijk}$ for $l\in ty, i,j\in o, k\in q$ be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible.  For example, $s_{19jk}$ = {(8,2),(8,3),(8,4)…(8,6),(9,1),(9,2),(9,3)…(9,6)}  </li><li>let $E_{k}$ for $k\in q$ to be the Base total efficiency base vector on time k. </li><li>let $P2Q_{ljk}$ for $l\in ty, j\in o, k\in q$ to be people switch from public area to quiet area enter at hour j and stay for hours k. Same mechanism for $Q2P$</li><li>let variable $QC$ be the chairs should be in quiet room.</li><li>let variable $Q_{jk}$ for $j\in o, k\in q$ be the number of people accepted to the library to maximize total efficiency</li><li>let variable $CQ1_{jk}$ for $j\in o, k\in q$ be the number of calculator split for quiet area  accepted to the library to maximize total efficiency</li><li>let variable $CQ2_{jk}$ for $j\in o, k\in q$ be the number of calculator accepted to the library to maximize total efficiency</li><li>let $CF$ be the increment factor of efficiency of using calculator, let $SWPQ$ be the factor of efficiency of switch from public to quiet</li><li>Let $NPQ_{jk}$ for $j\in o, k\in q$ be the number of people requested to stay in the library. </li><li>Let $NCQ_{jk}$ for $j\in o, k\in q$ be the number of calculator requested to stay in the library.</li><li>Let $SQ_{m}$ for $m\in qi$ be a binary variable record which people is selected</li><li>Let $SQC_{m}$ for $m\in qi$ be a binary variable record which people has calculator</li></ul><script type="math/tex; mode=display">Max \sum_{k\in q}E_{k}^T(\sum_{j\in o}(Q_{jk}+CQ1_{jk}*CF+(\sum_{l\in ty}P2Q_{ljk}+CQ2_{jk}*CF)*SWPQ))</script><script type="math/tex; mode=display">\begin{align}\begin{split}s.t.\quad & CQ1_{jk} + CQ2_{jk} \le NCQ_{jk} && \forall j\in o,k\in q \\& Q_{jk} \le NPQ_{jk}&&\forall j\in o,k\in q\\& 1000\ge QC&\\& \sum_{j,k}Q_{jk}+\sum_{l,j,k}P2Q_{ljk}\le QC &&\forall i\in o, \forall Q_{jk}\in sq_{ijk}, \forall P2Q_{ljk}\in sp_{ijk} \\& \sum_{m\in qi} SQ_{m} = Q_{jk}&& \forall j\in o, k\in q,\forall m\in \{m | Quiet_{m"enter"}=j\\&&& \&Quiet_{m"hours"}=k\}\\& \sum_{m\in qi} SQC_{m} \ge CQ1_{jk} + CQ2_{jk} && \forall j\in o, k\in q,\forall m\in \{m | Quiet_{m"enter"}=j\\&&& \&Quiet_{m"hours"}=k\& Quiet_{m"Calculator"}=1\}\\& \sum_{j,k}(CQ1_{jk} + CQ2_{jk})\le 20 &&\forall i\in o, \forall CQ1_{jk}, CQ2_{jk}\in sq_{ijk} \\& CQ1_{jk} \le Q_{jk}+Q2P_{jk}&&\forall i\in o, k\in q\end{split}\end{align}</script><p>  Most of other formulas for the entire project is similiar to the methods using above, so we choose to not write them.</p><p>  For the solutions, see <a href="#p1">here</a> for solution of obj1, <a href="#p2">here</a> for solution of obj2, <a href="#p33">here</a> for solution of obj3</p><h4 id="Processing-of-the-solution"><a href="#Processing-of-the-solution" class="headerlink" title="Processing of the solution"></a>Processing of the solution</h4><p><br> <a href="#p1">processing for the first objective</a><br><img src="/2019/projects/College-library-optimization-problem/output_9_4.png" title="test"><br><br> <a href="#p2">processing for the second objective</a><br><img src="/2019/projects/College-library-optimization-problem/output_18_3.png" title="test"><br><br> <a href="#p33">processing for the third objective</a><br><img src="/2019/projects/College-library-optimization-problem/output_23_1.png" title="test"></p><h4 id="Some-brief-conclusion"><a href="#Some-brief-conclusion" class="headerlink" title="Some brief conclusion"></a>Some brief conclusion</h4><p><br>As shown in area below<br><br> <a href="#c1">Conclusion for the first objective</a><br>Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen.</p><p>For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it.</p><p><br> <a href="#c2">Conclusion for the second objective</a><br>As we mentioned in the problem, we provided the permission in each case. But it is not useful. </p><p>By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period.</p><p><br> <a href="#c31">Conclusion for the third objective</a><br>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><p><br> <a href="#c3">Conclusion for the entire objective</a><br>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><h4 id="Further-thoughts"><a href="#Further-thoughts" class="headerlink" title="Further thoughts:"></a>Further thoughts:</h4><p><br>Furthermore, there are lots of improvements that could be done. </p><ul><li><p>Since our model separates the public and quiet areas in our parameter, it is hard for us to simplify our model. In the future model, we could try to combine these two into one parameter to make it simplier.</p></li><li><p>The constraints, dealing ways might need to be improved. And there might be some small errors as there are too many equations. We checked them for multiple times, but it is hard to guarantee that every place is perfectly correct.</p></li><li><p>And the model could only make sense if they have the real data input. Right now, we only have fake data. </p></li><li><p>Solution is not unique(for selection of people). Maybe we don’t have to find which person should be given the permission. We could find the number of people we should accept in each case.</p></li><li><p>we always want to keep minimum change to what we setup in the previous submission, A lot of places could be improved actually. Like obj2, execute_load command would be better.</p></li><li><p>like what we discussed in <a href="#p3">obj3</a>, some more discoveries could be done, including if the library needs to buy more calculators or not.</p></li><li><p>And, not all people are on time in real case. In this problem, we assume data are collected from survey or somethimg. So, there is no person would have a time duration of 2:15. But in real case, this would happen. So, it would be helpful to invite error vectors to describe this and form the problem. </p></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p>Important startup of jupyter notebook interface:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.display <span class="keyword">import</span> display, HTML</span><br><span class="line">display(HTML(<span class="string">"&lt;style&gt;.container &#123; width:95% !important; &#125;&lt;/style&gt;"</span>))</span><br><span class="line"><span class="comment"># Load the gams extension</span></span><br><span class="line">%load_ext gams_magic</span><br><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><p><a id="o11"></a></p><h4 id="Objective1-1"><a href="#Objective1-1" class="headerlink" title="Objective1:"></a>Objective1:</h4><p>How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library?</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">%%gams </span><br><span class="line"><span class="comment">* initialize data</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$title</span> College library optimization problem     Katherine Fu &amp; Shaokang Jiang</span></span><br><span class="line"><span class="keyword">set</span> public_i, public_j, quiet_i, quiet_j, hours /<span class="number">1</span>*<span class="number">10</span>/<span class="comment">, public_hour(hours)</span> /<span class="number">1</span>*<span class="number">6</span>/<span class="comment">, quiet_hour(hours)</span> /<span class="number">1</span>*<span class="number">10</span>/<span class="comment">, enter_hour</span> /<span class="number">8</span>*<span class="number">20</span>/<span class="comment">, types</span> <span class="comment">"1:project 2:chatting"</span> /<span class="number">1</span>*<span class="number">2</span>/;</span><br><span class="line"><span class="keyword">alias</span>(enter_hour, o);</span><br><span class="line"><span class="keyword">parameter</span></span><br><span class="line">    Public(public_i,public_j),</span><br><span class="line">    Quiet(quiet_i,quiet_j)</span><br><span class="line">    n_pe_public(types, enter_hour, public_hour)</span><br><span class="line">    n_pe_quiet(enter_hour, quiet_hour)</span><br><span class="line">    eff_public(types, public_hour)</span><br><span class="line">    eff_quiet(quiet_hour);</span><br><span class="line"><span class="keyword">option</span> optcr = <span class="number">0</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line"><span class="keyword">scalar</span> total_limit /<span class="number">1000</span>/<span class="comment">, chat_low</span> /<span class="number">10</span>/<span class="comment">, q2p</span> <span class="comment">"switch efficiency factor"</span> /<span class="number">0.8</span>/<span class="comment">, p2q</span> <span class="comment">"switch efficiency factor"</span> /<span class="number">0.3</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">* dynamic set of visibility</span></span><br><span class="line"><span class="keyword">set</span> visible_public(o, enter_hour, public_hour) <span class="comment">"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it"</span></span><br><span class="line">    visible_quiet(o, enter_hour, quiet_hour) <span class="comment">"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it"</span>;</span><br><span class="line">visible_public(o, enter_hour, public_hour) = <span class="keyword">yes</span><span class="symbol">$</span>(<span class="keyword">ord</span>(o)&lt;<span class="keyword">ord</span>(enter_hour)+<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> <span class="keyword">ord</span>(o)&gt;=<span class="keyword">ord</span>(enter_hour));</span><br><span class="line">visible_quiet(o, enter_hour, quiet_hour) = <span class="keyword">yes</span><span class="symbol">$</span>(<span class="keyword">ord</span>(o)&lt;<span class="keyword">ord</span>(enter_hour)+<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> <span class="keyword">ord</span>(o)&gt;=<span class="keyword">ord</span>(enter_hour));</span><br><span class="line"></span><br><span class="line"><span class="comment">* calculate the base total efficiency for each (enter_hour, quiet_hour)</span></span><br><span class="line">eff_public(<span class="string">"1"</span>, public_hour) = (<span class="number">1.1</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&lt;=<span class="number">2</span>) + (<span class="number">1.2</span>+<span class="number">0.5</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&gt;<span class="number">2</span>);</span><br><span class="line">eff_public(<span class="string">"2"</span>, public_hour) = (<span class="number">0.12</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&lt;=<span class="number">4</span>) + (<span class="number">0.28</span>+<span class="number">0.05</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&gt;<span class="number">4</span>);</span><br><span class="line">eff_quiet(quiet_hour) = (<span class="keyword">ord</span>(quiet_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(quiet_hour)&lt;=<span class="number">5</span>) + (<span class="number">2</span>+<span class="number">0.6</span>*<span class="keyword">ord</span>(quiet_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(quiet_hour)&gt;<span class="number">5</span>);</span><br></pre></td></tr></table></figure><p><a id="o1s1"></a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="comment">* declare variables for first model to use</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span> public_chair <span class="comment">"# of chairs for public area"</span><span class="comment">, quiet_chair</span> <span class="comment">"# of chairs for quiet area"</span><span class="comment">,</span></span><br><span class="line">            public_arrange(types, enter_hour, public_hour) <span class="comment">"# of chairs for types for public area at hour enter_hour and stay at here for public_hour"</span><span class="comment">,</span></span><br><span class="line">            quiet_arrange(enter_hour, quiet_hour) <span class="comment">"# of chairs for quiet area at hour enter_hour and stay at here for quiet hour"</span></span><br><span class="line">            switch_q2p(enter_hour, quiet_hour) <span class="comment">"# of chairs switched from quiet area to public area"</span></span><br><span class="line">            switch_p2q(types, enter_hour, public_hour) <span class="comment">"# of chairs switched from public area to quiet area"</span>;</span><br><span class="line">public_chair.up = total_limit;</span><br><span class="line">quiet_chair.up = total_limit;</span><br><span class="line">public_arrange.up(types, enter_hour, public_hour) = total_limit;</span><br><span class="line">quiet_arrange.up(enter_hour, quiet_hour) = total_limit;</span><br><span class="line">switch_q2p.up(enter_hour, quiet_hour) = total_limit;</span><br><span class="line">switch_p2q.up(types, enter_hour, public_hour) = total_limit;</span><br><span class="line"><span class="keyword">free</span> <span class="keyword">variable</span> total_efficiency;</span><br><span class="line"><span class="keyword">binary</span> <span class="keyword">variable</span> select_public(public_i), select_quiet(quiet_i);</span><br><span class="line"></span><br><span class="line"><span class="comment">* calculate total number of people</span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line"></span><br><span class="line"><span class="keyword">equations</span> conn1 <span class="comment">"connection between public_chair and public_arrange and switch_q2p at every time"</span></span><br><span class="line">          conn2 <span class="comment">"connection between quiet_chair and quiet_arrange and switch_p2q"</span></span><br><span class="line">          objective <span class="comment">"Calculate the total efficiency"</span></span><br><span class="line">          limit <span class="comment">"limitation of total chairs"</span></span><br><span class="line">          people_public <span class="comment">"restriction of # of people in public area"</span></span><br><span class="line">          people_quiet <span class="comment">"restriction of # of people in quiet area"</span></span><br><span class="line">          selection_public <span class="comment">"people selected at public area"</span></span><br><span class="line">          selection_quiet <span class="comment">"people selected at quiet area"</span></span><br><span class="line">          chatting_lower <span class="comment">"Hold constraints for the lower limitation for chatting people"</span>;</span><br><span class="line"><span class="function"><span class="title">conn1</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), switch_q2p(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> public_chair;</span><br><span class="line"><span class="function"><span class="title">conn2</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) + <span class="keyword">sum</span>((types, enter_hour, public_hour), switch_p2q(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) <span class="symbol">=l=</span> quiet_chair;</span><br><span class="line"><span class="function"><span class="title">limit</span></span>..</span><br><span class="line">    total_limit <span class="symbol">=g=</span> public_chair + quiet_chair;</span><br><span class="line"><span class="function"><span class="title">objective</span></span>..</span><br><span class="line">    total_efficiency <span class="symbol">=e=</span> <span class="keyword">sum</span>((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)*eff_public(types, public_hour) + switch_p2q(types, enter_hour, public_hour)*eff_public(types, public_hour)*p2q) +</span><br><span class="line">                         <span class="keyword">sum</span>((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)*eff_quiet(quiet_hour) + switch_q2p(enter_hour, quiet_hour)*eff_quiet(quiet_hour)*q2p);</span><br><span class="line"><span class="function"><span class="title">people_public</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    public_arrange(types, enter_hour, public_hour) + switch_p2q(types, enter_hour, public_hour) <span class="symbol">=l=</span> n_pe_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">people_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour) <span class="symbol">=l=</span> n_pe_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour)), select_quiet(quiet_i)) <span class="symbol">=e=</span> quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_public</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour)), select_public(public_i)) <span class="symbol">=e=</span> switch_p2q(types, enter_hour, public_hour) + public_arrange(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">chatting_lower</span></span>..</span><br><span class="line">    <span class="keyword">sum</span>((enter_hour, public_hour), public_arrange(<span class="string">"2"</span>, enter_hour, public_hour)) <span class="symbol">=g=</span> chat_low;</span><br><span class="line"><span class="keyword">model</span> simple_obj1 /conn1, conn2, limit, objective, people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;</span><br><span class="line"><span class="keyword">solve</span> simple_obj1 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> run /<span class="number">1</span>*<span class="number">2</span>/<span class="comment">, room</span> /public, quiet/;</span><br><span class="line"><span class="keyword">parameter</span> selection_quiet_(run, quiet_i), selection_public_(run, public_i), chairs(run, room);</span><br><span class="line">selection_public_(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>9699.148</td>      <td>601</td>      <td>4403</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.038</td>    </tr>  </tbody></table><p><a id="o1s2"></a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="comment">* increment of scalar for each factor</span></span><br><span class="line"><span class="keyword">scalar</span> calculator_factor /<span class="number">0.2</span>/<span class="comment">, laptop_factor</span> /<span class="number">0.1</span>/<span class="comment">, charger_factor</span> /<span class="number">0.3</span>/<span class="comment">, calculators</span> /<span class="number">30</span>/<span class="comment">, laptops</span> /<span class="number">10</span>/<span class="comment">, chargers</span> /<span class="number">10</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">* represent the needs of each device at specific time.</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span> ca_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet(enter_hour, quiet_hour);</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"></span><br><span class="line"><span class="comment">* declaration for split variables</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span>                   </span><br><span class="line">                  ca_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  ca_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet_2(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet_2(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="comment">* ca_limit : limitation from total avaliable devices or limit concurrently exist object, ca_limit_quiet: limitation from calculator needs base</span></span><br><span class="line"><span class="keyword">equation</span> objective_refine, ca_limit_public, ca_limit_quiet, ch_limit_public, ch_limit_quiet, lap_limit_public, lap_limit_quiet,</span><br><span class="line">        selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet,</span><br><span class="line">        ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet;</span><br><span class="line"></span><br><span class="line"><span class="comment">* because we are maxmizing efficiency, so we only put calculate people to switch list if quiet_arrange is full</span></span><br><span class="line"><span class="function"><span class="title">objective_refine</span></span>..</span><br><span class="line">    total_efficiency <span class="symbol">=e=</span> <span class="keyword">sum</span>((types, enter_hour, public_hour), (public_arrange(types, enter_hour, public_hour)+ ca_need_public_1(types, enter_hour, public_hour)*calculator_factor + ch_need_public_1(types, enter_hour, public_hour)*charger_factor + lap_need_public_1(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)</span><br><span class="line">                                + (switch_p2q(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour)*calculator_factor + ch_need_public_2(types, enter_hour, public_hour)*charger_factor + lap_need_public_2(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)*p2q) +</span><br><span class="line">                         <span class="keyword">sum</span>((enter_hour, quiet_hour), (quiet_arrange(enter_hour, quiet_hour) + ca_need_quiet_1(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_1(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_1(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)</span><br><span class="line">                                + (switch_q2p(enter_hour, quiet_hour)+ ca_need_quiet_2(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_2(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_2(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)*q2p);</span><br><span class="line"><span class="comment">* this series of equations should be =g= because it is permitted that 4 people are permitted to come to the library but the library only have 3 calculators.</span></span><br><span class="line"><span class="function"><span class="title">selection_ca_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"Calculator"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> ca_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ca_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"Calculator"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> ca_need_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ch_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"charger"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> ch_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ch_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"charger"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> ch_need_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_la_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"laptop"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> lap_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_la_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"laptop"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> lap_need_quiet(enter_hour, quiet_hour);   </span><br><span class="line"><span class="function"><span class="title">ca_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), ca_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), ca_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> calculators;</span><br><span class="line"><span class="function"><span class="title">ch_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), ch_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), ch_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> chargers;    </span><br><span class="line"><span class="function"><span class="title">la_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), lap_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), lap_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> laptops;</span><br><span class="line"><span class="function"><span class="title">split_ca_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ca_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> ca_need_public_1(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_ca_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ca_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> ca_need_quiet_1(enter_hour, quiet_hour) + ca_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_ch_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ch_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> ch_need_public_1(types, enter_hour, public_hour) + ch_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_ch_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ch_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> ch_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_la_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    lap_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> lap_need_public_1(types, enter_hour, public_hour) + lap_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_la_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    lap_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> lap_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_limit_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ca_need_public_1(types, enter_hour, public_hour) + ch_need_public_1(types, enter_hour, public_hour) + lap_need_public_1(types, enter_hour, public_hour) <span class="symbol">=l=</span> public_arrange(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_limit_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ca_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_1(enter_hour, quiet_hour) <span class="symbol">=l=</span> quiet_arrange(enter_hour, quiet_hour);</span><br><span class="line"><span class="keyword">model</span> simple_obj2 /conn1, conn2, limit, objective_refine, selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet,</span><br><span class="line">        ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet,</span><br><span class="line">        people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line"></span><br><span class="line"><span class="comment">* save result in parameter</span></span><br><span class="line">selection_public_(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>9830.486</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.067</td>    </tr>  </tbody></table><p><a id="p1"></a></p><h5 id="Plot-result-at-area-below"><a href="#Plot-result-at-area-below" class="headerlink" title="Plot result at area below:"></a>Plot result at area below:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d chairs selection_public_ selection_quiet_</span><br><span class="line">display(chairs)</span><br><span class="line">chairs.set_index([<span class="string">'run'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line">fig,(ax0,ax1) = plt.subplots(ncols=<span class="number">2</span>,figsize=(<span class="number">14</span>,<span class="number">5</span>))</span><br><span class="line">val=chairs.value.unique()</span><br><span class="line">print(val)</span><br><span class="line">labels=[<span class="string">'public'</span>, <span class="string">'quiet'</span>]</span><br><span class="line">chairs.loc[<span class="string">"1"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax0.pie(val,autopct=<span class="string">'%1.2f'</span>,labels=labels)</span><br><span class="line">ax0.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax0.set_title(<span class="string">'The number of students without calculation of equipments'</span>);</span><br><span class="line">chairs.loc[<span class="string">"2"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax1.pie(val,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax1.set_title(<span class="string">'The number of students with calculation of equipments'</span>);</span><br><span class="line">display(selection_public_, selection_quiet_)</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>room</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>public</td>      <td>321.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>quiet</td>      <td>679.0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>public</td>      <td>321.0</td>    </tr>    <tr>      <td>3</td>      <td>2</td>      <td>quiet</td>      <td>679.0</td>    </tr>  </tbody></table><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>public_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2787</td>      <td>2</td>      <td>1922</td>      <td>1.0</td>    </tr>    <tr>      <td>2788</td>      <td>2</td>      <td>1923</td>      <td>1.0</td>    </tr>    <tr>      <td>2789</td>      <td>2</td>      <td>1924</td>      <td>1.0</td>    </tr>    <tr>      <td>2790</td>      <td>2</td>      <td>1925</td>      <td>1.0</td>    </tr>    <tr>      <td>2791</td>      <td>2</td>      <td>1926</td>      <td>1.0</td>    </tr>  </tbody></table><p>2792 rows × 3 columns</p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>quiet_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3597</td>      <td>2</td>      <td>1898</td>      <td>1.0</td>    </tr>    <tr>      <td>3598</td>      <td>2</td>      <td>1899</td>      <td>1.0</td>    </tr>    <tr>      <td>3599</td>      <td>2</td>      <td>1900</td>      <td>1.0</td>    </tr>    <tr>      <td>3600</td>      <td>2</td>      <td>1901</td>      <td>1.0</td>    </tr>    <tr>      <td>3601</td>      <td>2</td>      <td>1902</td>      <td>1.0</td>    </tr>  </tbody></table><p>3602 rows × 3 columns</p><img src="/2019/projects/College-library-optimization-problem/output_9_4.png" title="test"><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">solve</span> simple_obj1 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">selection_public_(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">selection_public_(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>704.900</td>      <td>601</td>      <td>4403</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.019</td>    </tr>    <tr>      <td>1</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>791.634</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.086</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d chairs</span><br><span class="line"></span><br><span class="line"><span class="comment">#chairs.set_index(['run'],inplace=True)</span></span><br><span class="line">display(chairs)</span><br><span class="line">fig,(ax0,ax1) = plt.subplots(ncols=<span class="number">2</span>,figsize=(<span class="number">14</span>,<span class="number">5</span>))</span><br><span class="line">val=chairs.loc[chairs.run == <span class="string">"2"</span>].value</span><br><span class="line">vals=chairs.loc[chairs.run == <span class="string">"1"</span>].value</span><br><span class="line"></span><br><span class="line">labels=[<span class="string">'public'</span>, <span class="string">'quiet'</span>]</span><br><span class="line">ax0.set_title(<span class="string">'The number of students  without calculation of equipments'</span>);</span><br><span class="line">ax0.pie(vals,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">chairs.loc[chairs.run == <span class="string">"2"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">chairs.loc[chairs.run == <span class="string">"1"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax1.pie(val,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax1.set_title(<span class="string">'The number of students with calculation of equipments'</span>);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>run</th>      <th>room</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>public</td>      <td>50.0</td>    </tr>    <tr>      <td>1</td>      <td>2</td>      <td>public</td>      <td>25.0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>quiet</td>      <td>25.0</td>    </tr>  </tbody></table><img src="/2019/projects/College-library-optimization-problem/output_11_1.png" title="test"><p><a id="c1"></a></p><h5 id="Conclusion-for-this-part"><a href="#Conclusion-for-this-part" class="headerlink" title="Conclusion for this part:"></a>Conclusion for this part:</h5><p>Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen.</p><p>For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it.</p><h4 id="Objective2-1"><a href="#Objective2-1" class="headerlink" title="Objective2:"></a>Objective2:</h4><p>More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">set</span> obj2 <span class="comment">"1:free 2:middle 3:busy"</span> /<span class="number">1</span>*<span class="number">3</span>/;</span><br><span class="line"><span class="keyword">parameter</span> problem2(obj2, room), selection_problem2_quiet(obj2,quiet_i),  selection_problem2_public(obj2,public_i);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-free.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>6809.384</td>      <td>2642</td>      <td>5873</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.05</td>    </tr>  </tbody></table><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-middle.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>8038.18</td>      <td>2642</td>      <td>6342</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.056</td>    </tr>  </tbody></table><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-busy.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"3"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"3"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"3"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"3"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>9830.486</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.066</td>    </tr>  </tbody></table><p><a id="p2"></a></p><h5 id="Plot-result-at-area-below-1"><a href="#Plot-result-at-area-below-1" class="headerlink" title="Plot result at area below:"></a>Plot result at area below:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d problem2 selection_problem2_quiet selection_problem2_public</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">display(selection_problem2_quiet, selection_problem2_public);</span><br><span class="line">display(problem2)</span><br><span class="line">data = np.array(problem2.loc[problem2.room==<span class="string">"public"</span>]).tolist()</span><br><span class="line">public = list()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    public.append(i[<span class="number">2</span>]);</span><br><span class="line">data = np.array(problem2.loc[problem2.room==<span class="string">"quiet"</span>]).tolist()</span><br><span class="line">quiet = list()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    quiet.append(i[<span class="number">2</span>]);</span><br><span class="line">x = [<span class="string">"free"</span>, <span class="string">"middle"</span>, <span class="string">"bussy"</span>]</span><br><span class="line">plt.plot(x, public, marker=<span class="string">'o'</span>, mec=<span class="string">'r'</span>, mfc=<span class="string">'w'</span>,label=<span class="string">"public"</span>)</span><br><span class="line">plt.plot(x, quiet, marker=<span class="string">'*'</span>, ms=<span class="number">10</span>,label=<span class="string">"quiet"</span>)</span><br><span class="line">plt.legend() </span><br><span class="line">plt.title(<span class="string">"Seat arrangement for different time"</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>obj2</th>      <th>quiet_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4620</td>      <td>3</td>      <td>1898</td>      <td>1.0</td>    </tr>    <tr>      <td>4621</td>      <td>3</td>      <td>1899</td>      <td>1.0</td>    </tr>    <tr>      <td>4622</td>      <td>3</td>      <td>1900</td>      <td>1.0</td>    </tr>    <tr>      <td>4623</td>      <td>3</td>      <td>1901</td>      <td>1.0</td>    </tr>    <tr>      <td>4624</td>      <td>3</td>      <td>1902</td>      <td>1.0</td>    </tr>  </tbody></table><p>4625 rows × 3 columns</p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>obj2</th>      <th>public_i</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1.0</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>3</td>      <td>1.0</td>    </tr>    <tr>      <td>3</td>      <td>1</td>      <td>4</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>5</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4603</td>      <td>3</td>      <td>1922</td>      <td>1.0</td>    </tr>    <tr>      <td>4604</td>      <td>3</td>      <td>1923</td>      <td>1.0</td>    </tr>    <tr>      <td>4605</td>      <td>3</td>      <td>1924</td>      <td>1.0</td>    </tr>    <tr>      <td>4606</td>      <td>3</td>      <td>1925</td>      <td>1.0</td>    </tr>    <tr>      <td>4607</td>      <td>3</td>      <td>1926</td>      <td>1.0</td>    </tr>  </tbody></table><p>4608 rows × 3 columns</p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>obj2</th>      <th>room</th>      <th>value</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>public</td>      <td>556.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>quiet</td>      <td>444.0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>public</td>      <td>453.0</td>    </tr>    <tr>      <td>3</td>      <td>2</td>      <td>quiet</td>      <td>547.0</td>    </tr>    <tr>      <td>4</td>      <td>3</td>      <td>public</td>      <td>321.0</td>    </tr>    <tr>      <td>5</td>      <td>3</td>      <td>quiet</td>      <td>679.0</td>    </tr>  </tbody></table><img src="/2019/projects/College-library-optimization-problem/output_18_3.png" title="test"><p><a id="c2"></a></p><h5 id="Conclusion-for-this-part-1"><a href="#Conclusion-for-this-part-1" class="headerlink" title="Conclusion for this part:"></a>Conclusion for this part:</h5><p>As we mentioned in the problem, we provided the permission in each case. But it is not useful. </p><p>By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period.</p><p><a id="p3"></a></p><h4 id="Objective3-1"><a href="#Objective3-1" class="headerlink" title="Objective3:"></a>Objective3:</h4><p>Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="keyword">set</span> limits /<span class="number">1</span>*<span class="number">200</span>/;</span><br><span class="line"><span class="keyword">parameter</span> n_result(limits);</span><br><span class="line"><span class="keyword">loop</span>(limits,</span><br><span class="line">     total_limit = <span class="keyword">ord</span>(limits)*<span class="number">10</span>;</span><br><span class="line">     <span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">     n_result(limits) = total_efficiency.l;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><table class="highlight1">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Solver Status</th>      <th>Model Status</th>      <th>Objective</th>      <th>#equ</th>      <th>#var</th>      <th>Model Type</th>      <th>Solver</th>      <th>Solver Time</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>165.596</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.11</td>    </tr>    <tr>      <td>1</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>331.180</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.089</td>    </tr>    <tr>      <td>2</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>488.794</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.084</td>    </tr>    <tr>      <td>3</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>642.634</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.085</td>    </tr>    <tr>      <td>4</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>791.634</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.085</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>195</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.055</td>    </tr>    <tr>      <td>196</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.054</td>    </tr>    <tr>      <td>197</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.055</td>    </tr>    <tr>      <td>198</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.054</td>    </tr>    <tr>      <td>199</td>      <td>Normal (1)</td>      <td>Optimal Global (1)</td>      <td>10790.158</td>      <td>2642</td>      <td>6977</td>      <td>MIP</td>      <td>CPLEX</td>      <td>0.051</td>    </tr>  </tbody></table></p><p></p><p>200 rows × 8 columns</p><br><a id="p33"></a><p></p><h5 id="Plot-result-area"><a href="#Plot-result-area" class="headerlink" title="Plot result area:"></a>Plot result area:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d n_result</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">ax = plt.gca()</span><br><span class="line">n_result.set_index([<span class="string">'value'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n_result[<span class="string">"limits"</span>]:</span><br><span class="line">    n_result.replace(to_replace = i, value = int(i)*<span class="number">10</span>, inplace=<span class="literal">True</span>) </span><br><span class="line">n_result.reset_index(inplace=<span class="literal">True</span>)</span><br><span class="line">n_result.plot(kind=<span class="string">'line'</span>,x=<span class="string">'limits'</span>,y=<span class="string">'value'</span>,ax=ax)</span><br></pre></td></tr></table></figure><img src="/2019/projects/College-library-optimization-problem/output_23_1.png" title="test"><p><a id="c31"></a></p><h5 id="Conclusion-for-this-part-2"><a href="#Conclusion-for-this-part-2" class="headerlink" title="Conclusion for this part"></a>Conclusion for this part</h5><p>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><p><a id="c3"></a></p><h5 id="Conclusion-for-this-project"><a href="#Conclusion-for-this-project" class="headerlink" title="Conclusion for this project:"></a>Conclusion for this project:</h5><p>In this project, we learned how to use gams and solve a near real case problem. We observe an optimized seat arrangement for library to use. We also see the difference between different time in one semester and the result could be used to guide seat arrangements. At last, we see that 1000 seats might be too small for this library and they need to buy more. </p><p>We spent a lot of time on this project and we learned a lot from it. We also observe that gams system is pretty simple and efficient compared to other language. In the future, we would like to use it for more times on optimization problem.</p>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAMS </tag>
            
            <tag> MIP </tag>
            
            <tag> CPLEX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common error while running EOSIO</title>
      <link href="/2019/common-run-eosio/"/>
      <url>/2019/common-run-eosio/</url>
      
        <content type="html"><![CDATA[<h3 id="Common-error-and-solution-during-running-and-building-connections-between-EOSIO-components"><a href="#Common-error-and-solution-during-running-and-building-connections-between-EOSIO-components" class="headerlink" title="Common error and solution during running and building connections between EOSIO components:"></a>Common error and solution during running and building connections between EOSIO components:</h3><blockquote><p>Error 3050000: Action validate exception<br>Error Details:<br>inline action’s authorizing actor eosio.ram does not exist</p></blockquote><p>Solution: Make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts. Otherwise this error will show up when creating block producer or voter. <a id="more"></a> For more details, see <a href="../EOSIO_local_network/#3">here</a> or <a href="https://developers.eos.io/eosio-nodeos/docs/bios-boot-sequence#section--1-7-create-important-system-accounts-" target="_blank" rel="noopener">here</a>. </p><blockquote><p>Error 3080001: Account using more than allotted RAM usage<br>Error Details:<br>account eosio.ram has insufficient ram; needs 2996 bytes has 0 bytes</p></blockquote><p>Solution: Basically, this error happens when some account has insufficient ram. It depends on the account type you are creating. </p><ul><li>If the account is eosio.<em>*</em>, then it is a system account. If this happens, then make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts.</li><li>If the account is an arbitrary name, then it is a user account(producer/worker). If this is the case, the common error is using wrong command to create new account. For account other than system account, it seems it is required to use  <code>cleos system newaccount [OPTIONS] creator name OwnerKey [ActiveKey]</code>.</li></ul><blockquote><p>Error 3120003: Locked wallet<br>Ensure that your wallet is unlocked before using it!<br>Error Details:<br>You don’t have any unlocked wallet!</p></blockquote><p>Solution: The wallet need to be unlocked before experiment. </p><blockquote><p>Error 3050001: Account name already exists<br>Error Details:<br>Cannot create account named bp1111111111, as that name is already taken</p></blockquote><p>Solution: Use another name.</p><blockquote><p>Error 3050003: eosio_assert_message assertion failure<br>Error Details:<br>assertion failure with message: cannot use transfer flag if delegating to self</p></blockquote><p>Solution: It seems —transfer tag for self transfer is for some old version of EOSIO. Remove it if error happens. Though the error happens, the command still get executed sometime. </p><blockquote><p>assertion failure with message: system contract must first be initialized</p></blockquote><p>Solution: Make sure <code>eosio.msig</code> is a privileged account and Initialize system account. To do those:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio setpriv <span class="string">'["eosio.msig", 1]'</span> -p eosio@active</span><br><span class="line"></span><br><span class="line">cleos push action eosio init <span class="string">'["0", "4,SYS"]'</span> -p eosio@active</span><br></pre></td></tr></table></figure><blockquote><p>Not producing block because I don’t have the private key for EOS5ks6trFhN8xz5mxaDAwQy7qJdjHhNwQbLca6wkYuRKwvGDUAPG</p></blockquote><p>Solution: This message happens when running the very first node in the network, who will produce the genesis block. Make sure the EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh is the same as the EOS_PUB_DEV_KEY in genesis.json. And EOS_PRIV_DEV_KEY is the private key of this public key. For those two files. genesis_start.sh is a file contain the information for the genesis block. genesis_start.sh is a file to start the very first node in the network. For more details, see <a href="../EOSIO_local_network/#Build-local-test-network">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Notes</title>
      <link href="/2019/Hexo-Notes/"/>
      <url>/2019/Hexo-Notes/</url>
      
        <content type="html"><![CDATA[<h3 id="Some-notes-for-Hexo"><a href="#Some-notes-for-Hexo" class="headerlink" title="Some notes for Hexo"></a>Some notes for Hexo</h3><p>HEXO is always case sensitive whiling redirecting pages and setting up file properties(yaml).</p><p>Hexo is not good for converting table to html format. The solution is to use html format table directly. </p><p>Yaml format space in the fron is two spaces instead of a tab or 4 spaces, they won’t work: e.g.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">website</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common error while building EOSIO</title>
      <link href="/2019/common-build-eosio/"/>
      <url>/2019/common-build-eosio/</url>
      
        <content type="html"><![CDATA[<h3 id="Common-error-and-solution-during-compiling-EOSIO-components"><a href="#Common-error-and-solution-during-compiling-EOSIO-components" class="headerlink" title="Common error and solution during compiling EOSIO components:"></a>Common error and solution during compiling EOSIO components:</h3><blockquote><p>Doesn’t have boost or boost library is lower than required.</p></blockquote><p>Solution: It seems the latest version of boost is not in the ubuntu package management right now. I compiled and installed it from source to solve this issue. I installed version 1.67. But the minimum version it requires is 1.57 (I remember).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O boost_1_67_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.67.0/boost_1_67_0.tar.gz/download</span><br><span class="line">tar xzvf boost_1_67_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_67_0/</span><br></pre></td></tr></table></figure><a id="more"></a><p>Then, get the required libraries and setup. The one required at here is icu for boost::regex. But I installed all of them in case they will be needed in some other places. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev libboost-all-dev</span><br><span class="line">./bootstrap.sh --prefix=/usr/</span><br></pre></td></tr></table></figure><p>Then, build it and install it:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./b2 <span class="comment"># Build it</span></span><br><span class="line">sudo ./b2 install <span class="comment"># install it</span></span><br></pre></td></tr></table></figure><blockquote><p>Add the installation prefix of “eosio” to CMAKE_PREFIX_PATH or set<br>  “eosio_DIR” to a directory containing one of the above files.  If “eosio”<br>  provides a separate development package or SDK, be sure it has been<br>  installed.</p></blockquote><p>Solution: Error happens while compiling EOSIO.contracts.</p><ol><li><p>Be sure EOS is compiled and installed from source instead of ubuntu package.</p></li><li><p>If the EOS is compiled and installed from source. You could find the place for this Cmake file easily. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> EOS_BUILD_PATH <span class="comment"># EOS_BUILD_PATH is the directory EOS was cloned to.</span></span><br><span class="line">find . -name <span class="string">"eosio-config.cmake"</span></span><br><span class="line"><span class="built_in">export</span> eosio_DIR=<span class="string">"PATH_FOUND"</span> <span class="comment"># PATH_FOUND is the path found up by the previous command</span></span><br></pre></td></tr></table></figure><p>The path is usually at  <code>EOS_BUILD_PATH/build/lib/cmake/eosio/</code>. And it is good to use absolute directory. </p><p>And then, do <code>./build.sh</code> again.</p></li></ol><blockquote><p>Doesn’t have llvm or doesn’t have required version of llvm while building eosio.cdt. </p></blockquote><p>Solution: llvm package is from another repository. So, add <code>--recursive</code> while git clone.</p><blockquote><p>Did install EOS by using the default installing shell but can not start the program by simply run nodeos from terminal.  </p></blockquote><p>Solution: I find this happens on ubuntu 18.04. Use the absolute path to start server instead. Usually, the nodeos program is at <code>EOSIO_BUILD_PATH/build/bin/nodeos</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build EOSIO local network</title>
      <link href="/2019/EOSIO_local_network/"/>
      <url>/2019/EOSIO_local_network/</url>
      
        <content type="html"><![CDATA[<h3 id="Some-experience-on-building-EOSIO-local-network"><a href="#Some-experience-on-building-EOSIO-local-network" class="headerlink" title="Some experience on building EOSIO local network"></a>Some experience on building EOSIO local network</h3><h4 id="Basic-info"><a href="#Basic-info" class="headerlink" title="Basic info"></a>Basic info</h4><p>EOSIO is an application based on proof of stake. I am going to discuss my experience on setting up the local test environment for EOSIO. The test version for EOS is 1.7 and test environment is Ubuntu 18.04.<br>The whole system is made up of three components in order to build local environment:</p><ul><li><p><strong>EOS</strong> - Main net. Basic communication </p></li><li><p><strong>EOS.CDT</strong> - Developer package. API for application</p></li><li><p><strong>EOS.CONTRACT</strong> - super user account setup. It store information about different user and send call to system, like create an voter account.</p></li></ul><p>Following is the basic network structure of EOSIO</p><a id="more"></a><ul><li><p>Only one <strong>super account</strong>. It produces blocks based on gensis.json. It can also interact with system to create accounts, register producers.</p></li><li><p>Multiple(21) <strong>block generators</strong>. They will produce(confirm) block once get enough vote</p></li><li><strong>Voter</strong>. It could vote producer.</li></ul><p>gensis.json is a json file contains the information for the system to produce gensis block. Its structure is as follows:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"initial_timestamp"</span>: <span class="string">"2018-12-05T08:55:11.000"</span>, </span><br><span class="line">  "initial_key": "EOS_PUB_DEV_KEY", 'Only the super account who has the private key relate to this key can produce block'</span><br><span class="line">  "initial_configuration": &#123;</span><br><span class="line">    ... </span><br><span class="line">    "target_block_cpu_usage_pct": 500, 'It doesn't like bitcoind, you could set up everything of the genesis block by yourself.'</span><br><span class="line">    "max_transaction_cpu_usage": 50000,</span><br><span class="line">    "min_transaction_cpu_usage": 100,</span><br><span class="line">    "max_transaction_lifetime": 3600,</span><br><span class="line">    "deferred_trx_expiration_window": 600,</span><br><span class="line">    "max_transaction_delay": 3888000,</span><br><span class="line">    "max_inline_action_size": 4096,</span><br><span class="line">    "max_inline_action_depth": 4,</span><br><span class="line">    "max_authority_depth": 6</span><br><span class="line">  &#125;,</span><br><span class="line">  "initial_chain_id": "0000000000000000000000000000000000000000000000000000000000000000"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For most things in the file is easy to understand. The server is clever, for the string in the json, the server will choose characters he thought it is correct. Confound server thought will be ignored.</p><h5 id="Build-amp-install"><a href="#Build-amp-install" class="headerlink" title="Build &amp; install"></a>Build &amp; install</h5><p>In order to setup a local test environment, EOS.CDT and EOS.CONTRACT have to be compiled on the local machine. Official said EOS is not required to compile locally. But during my test and some hint from <a href="https://github.com/EOSIO/eosio.contracts" target="_blank" rel="noopener">EOS.CONTRACT</a>. It seems it is required. Original official words as follows:</p><blockquote><ol><li><p>First, ensure that your eosio is compiled to the core symbol for the EOSIO blockchain that intend to deploy to.</p></li><li><p>Second, make sure that you have sudo make installed eosio.</p></li><li><p>Then just run the <code>build.sh</code> in the top directory to build all the contracts and the unit tests for these contracts. </p></li></ol><p>Before compile and run those stuff, make sure the computer has at least 40GB in your home directory and 8GB of memory.  </p></blockquote><p><em>To compile EOS locally, do the following:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/EOSIO/eos --recursive</span><br><span class="line"><span class="built_in">cd</span> eos/</span><br><span class="line">./scripts/eosio_build.sh</span><br></pre></td></tr></table></figure><p>It is also required to install this one into root. The build script is at scripts directory right now. And it may take up to 3 hours to build. It could be faster if you are using a multi-core computer.  </p><p>It is also recommended to install it. So that it will be easier to use in the future. Just do <code>./scripts/eosio_install.sh</code>. During my test on ubuntu 18.04. The script installed successfully. But I can not run it in the shell. </p><p><em>Then build <a href="https://github.com/EOSIO/eosio.cdt" target="_blank" rel="noopener">eosio.cdt</a>.</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/eosio/eosio.cdt</span><br><span class="line"><span class="built_in">cd</span> eosio.cdt</span><br><span class="line">./build.sh</span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>There should exist at least 10GB to compile this one.</p><p><em>Then build <a href="https://github.com/EOSIO/eosio.contracts" target="_blank" rel="noopener">eosio.contracts</a>.</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EOSIO/eosio.contracts.git</span><br><span class="line">cd eosio.contracts/</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure><p>The building process of eosio.cdt and eosio.contracts is nothing special but time consuming. It might take up to 2 hours to build. And it is impossible to build using multiple cores.</p><p>Some common error and solutions could be found at <a href="../common-build-eosio/">here</a>.</p><h5 id="Initialize"><a href="#Initialize" class="headerlink" title="Initialize"></a>Initialize</h5><p>You need to have an wallet in order to get start. You will have one by doing the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet create --to-console</span><br></pre></td></tr></table></figure><blockquote><p>There is no way to recover password, do remember it.</p></blockquote><p>When you have the password, you could play with cleos. You could use the following command to see full list of subcommand. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>Some useful subcommands are open, unlock, create_key, private_keys. Whenever you want to visit sensitive data, you need to provide the password. To prevent prompted by system, you could use —password to pass in your password.</p><p>Typically, you need to open wallet at first and then unlock to interact with wallet. After all interactions, it is good to lock them.</p><p><em>Batch initialize</em></p><p>The following are scripts might be helpful to initialize for the appropriate data folder and public key-private key pair for multiple(21) nodes.</p><p>To use it, you have to pass in the password as the first attribute</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet open</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 21 `</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span><span class="variable">$i</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cleos wallet unlock  --password <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 21)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">cleos wallet create_key</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cleos wallet private_keys  --password <span class="variable">$1</span>|grep <span class="string">"\""</span>&gt;list</span><br><span class="line"></span><br><span class="line">python3 a.py <span class="comment">#a.py will be discussed below</span></span><br><span class="line">cleos wallet lock</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>a.py is a python script which will export public-key and private key information into file in case it need to be used in the future. It is always required to have both information of public key and private key when starting a node. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file = open(<span class="string">"list"</span>, <span class="string">"r"</span>) </span><br><span class="line">file1 = open(<span class="string">"li_"</span>, <span class="string">"w"</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">li = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file: </span><br><span class="line">li.append(line.replace(<span class="string">'\"'</span>, <span class="string">''</span>).replace(<span class="string">','</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>))</span><br><span class="line">count+=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(count<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">file1.write(li[i])</span><br><span class="line">file.close()</span><br><span class="line">file1.close()</span><br></pre></td></tr></table></figure><blockquote><p>The key start with EOS and longer is <strong>public key</strong>, like EOS5CZwEpiweHHZpEdHYsU9Q1MEk5zTtqfrcg3TefBzTYG9xdw2gC</p><p>The key which is shorter is <strong>private key</strong>, like this: 5Jarc4qfsXqHcivfGc8qWYTGdQJ5CPy8NeyRjfceXopn9dy3hgR</p></blockquote><p><em>Batch clean</em></p><p>Those are some script that will remove everything. It will make the workspace(including wallet, work folder) be initialized.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line">rm -rf <span class="variable">$DATADIR</span>*;</span><br><span class="line"></span><br><span class="line">cleos wallet open</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">cleos wallet unlock --password <span class="variable">$1</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> a; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> a;</span><br><span class="line">cleos wallet remove_key <span class="variable">$a</span> --password <span class="variable">$1</span></span><br><span class="line"><span class="keyword">done</span> &lt; li_</span><br><span class="line">rm li_</span><br><span class="line">rm list</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">cleos wallet lock</span><br></pre></td></tr></table></figure><blockquote><p>It is good to clean every time after experiment, otherwise blocks generated will occupy too many space. It is 0.5s/blocks.</p></blockquote><h4 id="Procedure"><a href="#Procedure" class="headerlink" title="Procedure"></a>Procedure</h4><p>  <img alt="Basic procedure" src="https://f5q9jg.bn.files.1drv.com/y4mliL3MZo-_SK5igtd3BDqFS-YkT3YaOVmd-cUxFcdCJDQD0PMnvcbKsLs2SeJutQ9ho3B-tSWCjC_pRp3sAWLpUEFQ9X2_h7DL7Xp0N-NwGtkN1WAl_A7Hz83cpZA4EU4EqURUq9j3petzuFUL3vBssnsJuFLAKFsVaDZ34ymT1rcIMmphV2flpeIvGO7SZZsOCWXxtzZVPi4meg5XPGC5A?width=1280&height=720&cropmode=none" width="100%"> </p><p>This is the basic procedure. The voter account and block generator account are produced by one super account. Generally speaking, the basic idea is voter will vote the producer they like, block producer are connected together. During the runtime, the procedure is:</p><ul><li><p>Firstly, start producer nodes.</p></li><li><p>Next vote</p></li><li><p>When the block producer has enough votes, block producer will go to confirm blocks.</p></li></ul><p>After doing appropriate settings it should start to confirm blocks. I did’t test this part yet.</p><p>If you want or in some situation, you could link super account together like this, but only the one with appropriate public and private key could generate the block. More specifically, only the one has the private key of the public key in the gensis.json can produce block. Other super accounts nodes could only sync. </p><p>The whole structure like this:</p><p><img alt="Linked structure" src="https://fzq9jg.bn.files.1drv.com/y4mPFY4a8LfbnWohwk35HzA1vDHDQ-CjNYKvRaKxmvLyM40oaDZz6BuFXy6YlJcXsKQ2De1XGM0jRVjCprRnvAs9pD87cLG359wt-xDj-0FpR0TLY_zYwcO1IWDGJKiKQrwiWouefpY1KG5wjiHAUvCNmT1a13oBQedYAB82QLgwRfBw9TB35FMMrx0MCIgJPB2EZVFiBjwt4LeKLQH-g1Viw?width=1280&height=291&cropmode=none" width="100%"></p><p>You could use the following command to start multiple super account nodes from gensis status and form the structure shown above:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">password = <span class="string">""</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">password = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line">print(<span class="string">"Please include password"</span>)</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Generate gensis.json</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">file1 = open(<span class="string">"li_"</span>, <span class="string">"r"</span>)</span><br><span class="line">temp = file1.readline()</span><br><span class="line">initial_key = file1.readline()</span><br><span class="line">os.system(<span class="string">'rm -f genesis.json'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"genesis.json"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">    json.dump(&#123;<span class="string">'initial_timestamp'</span>:<span class="string">"2018-12-05T08:55:11.000"</span>, <span class="string">'initial_key'</span>: initial_key[:<span class="number">-1</span>], <span class="string">'initial_configuration'</span>:&#123;<span class="string">"max_block_net_usage"</span>: <span class="number">1048576</span>, <span class="string">"target_block_net_usage_pct"</span>: <span class="number">1000</span>, <span class="string">"max_transaction_net_usage"</span>: <span class="number">524288</span>, <span class="string">"base_per_transaction_net_usage"</span>: <span class="number">12</span>, <span class="string">"net_usage_leeway"</span>: <span class="number">500</span>, <span class="string">"context_free_discount_net_usage_num"</span>: <span class="number">20</span>, <span class="string">"context_free_discount_net_usage_den"</span>: <span class="number">100</span>, <span class="string">"max_block_cpu_usage"</span>: <span class="number">100000</span>, <span class="string">"target_block_cpu_usage_pct"</span>: <span class="number">500</span>, <span class="string">"max_transaction_cpu_usage"</span>: <span class="number">50000</span>, <span class="string">"min_transaction_cpu_usage"</span>: <span class="number">100</span>, <span class="string">"max_transaction_lifetime"</span>: <span class="number">3600</span>, <span class="string">"deferred_trx_expiration_window"</span>: <span class="number">600</span>, <span class="string">"max_transaction_delay"</span>: <span class="number">3888000</span>, <span class="string">"max_inline_action_size"</span>: <span class="number">4096</span>, <span class="string">"max_inline_action_depth"</span>: <span class="number">4</span>, <span class="string">"max_authority_depth"</span>: <span class="number">6</span> &#125;,  <span class="string">"initial_chain_id"</span>: <span class="string">"0000000000000000000000000000000000000000000000000000000000000000"</span>&#125;, outfile, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Start gensis</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">ini_port=<span class="number">9000</span></span><br><span class="line">currentport=ini_port</span><br><span class="line">sentstring=<span class="string">'./genesis_start.sh '</span>+<span class="string">'./blockchain'</span>+<span class="string">' '</span>+initial_key[:<span class="number">-1</span>]+<span class="string">' '</span>+temp[:<span class="number">-1</span>]+<span class="string">' '</span>+str(currentport)+<span class="string">' '</span>+str(currentport+<span class="number">100</span>)+<span class="string">' '</span>+str(currentport+<span class="number">101</span>)</span><br><span class="line">os.system(<span class="string">'echo Start gensis'</span>)</span><br><span class="line">os.system(sentstring)</span><br><span class="line">currentport+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">30</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">start nodes</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">22</span>):</span><br><span class="line">private_key = file1.readline()</span><br><span class="line">public_key = file1.readline()</span><br><span class="line">tosend = <span class="string">'./genesis_start.sh '</span>+<span class="string">'./blockchain'</span>+str(i)+<span class="string">' '</span>+public_key[:<span class="number">-1</span>]+<span class="string">' '</span>+private_key[:<span class="number">-1</span>]+<span class="string">' '</span>+str(currentport)+<span class="string">' '</span>+str(currentport+<span class="number">100</span>)+<span class="string">' '</span>+str(currentport+<span class="number">99</span>)</span><br><span class="line">os.system(<span class="string">'echo start node '</span>+ str(i))</span><br><span class="line">os.system(tosend)</span><br><span class="line">currentport+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>For this python code, it first generates the gensis.json. And then it starts nodes in some order(First gensis node, then other super accounts). All public key and private key used is based on the file generated previously. To use it, you have to put the password of the wallet as the first attribute pass in when you run the program. The script did so, in case it needs to deal with sensitive information.</p><p>The follow script is in a file called genesis_start.sh, which is called by the previous python program to start each node:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#$1--datadir $2--Public_key $3--Private_key $4--httpserver $5--p2plisten $6--peer_address</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ] &amp;&amp; [ <span class="variable">$2</span> ] &amp;&amp; [ <span class="variable">$3</span> ] &amp;&amp; [ <span class="variable">$4</span> ] &amp;&amp; [ <span class="variable">$5</span> ] &amp;&amp; [ <span class="variable">$6</span> ]; <span class="keyword">then</span></span><br><span class="line">DATADIR=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">nodeos \</span><br><span class="line">--genesis-json <span class="variable">$DATADIR</span><span class="string">"/../genesis.json"</span> \</span><br><span class="line">--signature-provider <span class="variable">$2</span>=KEY:<span class="variable">$3</span> \</span><br><span class="line">--plugin eosio::producer_plugin \</span><br><span class="line">--plugin eosio::chain_api_plugin \</span><br><span class="line">--plugin eosio::http_plugin \</span><br><span class="line">--plugin eosio::history_api_plugin \</span><br><span class="line">--data-dir <span class="variable">$DATADIR</span><span class="string">"/data"</span> \</span><br><span class="line">--blocks-dir <span class="variable">$DATADIR</span><span class="string">"/blocks"</span> \</span><br><span class="line">--config-dir <span class="variable">$DATADIR</span><span class="string">"/config"</span> \</span><br><span class="line">--producer-name eosio \</span><br><span class="line">--http-server-address 127.0.0.1:<span class="variable">$4</span> \</span><br><span class="line">--p2p-listen-endpoint 127.0.0.1:<span class="variable">$5</span> \</span><br><span class="line">--access-control-allow-origin=* \</span><br><span class="line">--contracts-console \</span><br><span class="line">--http-validate-host=<span class="literal">false</span> \</span><br><span class="line">--verbose-http-errors \</span><br><span class="line">--<span class="built_in">enable</span>-stale-production \</span><br><span class="line">--p2p-peer-address localhost:<span class="variable">$6</span> \</span><br><span class="line">&gt;&gt; <span class="variable">$DATADIR</span><span class="string">"/nodeos.log"</span> 2&gt;&amp;1 &amp; \</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$DATADIR</span><span class="string">"/eosd.pid"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>This script will start a new node by using information given by user and save the running result to file at the datadir given.. To use it manually, just use <code>./genesis_start.sh [datadir] [Public_key] [Private_key] [httpserver] [p2plisten] [peer_address]</code></p><blockquote><p>If you get an information of “This is not an executable file”. Just do <code>chmod 777 genesis_start.sh</code></p></blockquote><p>I think those scripts are still useful for the following reason:</p><ul><li>The producer has option about the super account node it reports. It could make the main node not too stressful when lots of submission happens(I guess). </li><li>By modifying them a little bit, they could also be used to generate multiple block producer and voters.</li></ul><p>And I find out only the linked structure will be accepted. It means multiple connections to one super account node is not permitted. More detailed, as the graph show below:<br>      <img alt="Multi conn not allowed" src="https://fzq8jg.bn.files.1drv.com/y4m9X87KWyMymAB7T60SBAoK0DvuSQsPDRoSqIYl1A-6crJca50nXk36T0G2crGK2PISAJLGzaM5Z-XAVcpQTMwARR8VuQpZlZwz5w7WTmuVQWaD8hEHEt2bmFVH0HJpP_gl5fWdfIaXHw-ZIE8RHQU2slcf3fPLgmnQGZMLvIX8TDnPBUVWLe-JCKBzQtCSqRasTyWT2AmMOPsiUweCl-C9A?width=1280&height=519&cropmode=none" width="100%"></p><blockquote><p>To make the system recognize an account is block producer, it is required to use regproducer like the following. Otherwise it is just a voter.</p></blockquote><h4 id="Build-local-test-network"><a href="#Build-local-test-network" class="headerlink" title="Build local test network"></a>Build local test network</h4><blockquote><p>Need to use the EOS (cleos and nodes) compiled from the previous steps. Maybe this is not required. But it seems that eosio.contract is related on eosio main program. The network can not be built when using the software from ubuntu package management on my machine. </p></blockquote><p>Basically, I follow up the guidance from <a href="https://medium.com/coinmonks/guide-to-eos-voting-simulation-4eb7a85bab44" target="_blank" rel="noopener">Guide to EOS voting simulation</a> and the official guidance <a href="https://developers.eos.io/eosio-nodeos/docs/bios-boot-sequence" target="_blank" rel="noopener">BIOS Boot Sequence</a>. Some places has been changed to fit the latest version of EOSIO.</p><p>Before start, you need to initialize wallet by taking the previous steps. And then create some new public and private key pairs. Just do <code>cleos wallet create_key</code>. If you want to see all key pairs, do <code>cleos wallet private_keys</code>. </p><p>Then, create genesis.json and the script used to start producing genesis block. </p><ul><li>Create genesis.json at a property directory. </li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"initial_timestamp"</span>: <span class="string">"2018-12-05T08:55:11.000"</span>,</span><br><span class="line">  <span class="attr">"initial_key"</span>: <span class="string">"EOS_PUB_DEV_KEY"</span>,</span><br><span class="line">  <span class="attr">"initial_configuration"</span>: &#123;</span><br><span class="line">    <span class="attr">"max_block_net_usage"</span>: <span class="number">1048576</span>,</span><br><span class="line">    <span class="attr">"target_block_net_usage_pct"</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="attr">"max_transaction_net_usage"</span>: <span class="number">524288</span>,</span><br><span class="line">    <span class="attr">"base_per_transaction_net_usage"</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">"net_usage_leeway"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"context_free_discount_net_usage_num"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">"context_free_discount_net_usage_den"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"max_block_cpu_usage"</span>: <span class="number">100000</span>,</span><br><span class="line">    <span class="attr">"target_block_cpu_usage_pct"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"max_transaction_cpu_usage"</span>: <span class="number">50000</span>,</span><br><span class="line">    <span class="attr">"min_transaction_cpu_usage"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"max_transaction_lifetime"</span>: <span class="number">3600</span>,</span><br><span class="line">    <span class="attr">"deferred_trx_expiration_window"</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">"max_transaction_delay"</span>: <span class="number">3888000</span>,</span><br><span class="line">    <span class="attr">"max_inline_action_size"</span>: <span class="number">4096</span>,</span><br><span class="line">    <span class="attr">"max_inline_action_depth"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"max_authority_depth"</span>: <span class="number">6</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"initial_chain_id"</span>: <span class="string">"0000000000000000000000000000000000000000000000000000000000000000"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Then, create the script used to start the first node and save it as genesis_start.sh. </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir -p <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">nodeos \</span><br><span class="line">--genesis-json <span class="variable">$DATADIR</span><span class="string">"/../genesis.json"</span> \</span><br><span class="line">--signature-provider EOS_PUB_DEV_KEY=KEY:EOS_PRIV_DEV_KEY \</span><br><span class="line">--plugin eosio::producer_plugin \</span><br><span class="line">--plugin eosio::chain_api_plugin \</span><br><span class="line">--plugin eosio::http_plugin \</span><br><span class="line">--plugin eosio::history_api_plugin \</span><br><span class="line">--plugin eosio::history_plugin \</span><br><span class="line">--data-dir <span class="variable">$DATADIR</span><span class="string">"/data"</span> \</span><br><span class="line">--blocks-dir <span class="variable">$DATADIR</span><span class="string">"/blocks"</span> \</span><br><span class="line">--config-dir <span class="variable">$DATADIR</span><span class="string">"/config"</span> \</span><br><span class="line">--producer-name eosio \</span><br><span class="line">--http-server-address 127.0.0.1:8888 \</span><br><span class="line">--p2p-listen-endpoint 127.0.0.1:9010 \</span><br><span class="line">--access-control-allow-origin=* \</span><br><span class="line">--contracts-console \</span><br><span class="line">--http-validate-host=<span class="literal">false</span> \</span><br><span class="line">--verbose-http-errors \</span><br><span class="line">--<span class="built_in">enable</span>-stale-production \</span><br><span class="line">--p2p-peer-address localhost:9011 \</span><br><span class="line">--p2p-peer-address localhost:9012 \</span><br><span class="line">--p2p-peer-address localhost:9013 \</span><br><span class="line">&gt;&gt; <span class="variable">$DATADIR</span><span class="string">"/nodeos.log"</span> 2&gt;&amp;1 &amp; \</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$DATADIR</span><span class="string">"/eosd.pid"</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: The EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh should be the same as the EOS_PUB_DEV_KEY in genesis.json. EOS_PRIV_DEV_KEY is the private key of this public key. Otherwise, you will get the error Not producing block because I don’t have the private key for EOS_PUB_DEV_KEY</p></blockquote><ol><li><strong>Start the first node</strong></li></ol><p>This tutorial is based on v4.2.0, with one node for bios and two nodes as block producers. First start the bios node:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gensis_start.sh</span><br></pre></td></tr></table></figure><ol><li><strong>Deploy</strong> <code>eosio.bios</code> <strong>contract to</strong> <code>eosio</code> <strong>account.</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio build/contracts/eosio.bios</span><br></pre></td></tr></table></figure><p><div id="3"></div></p><ol><li><strong>Create necessary accounts.</strong></li></ol><p>The list of accounts required is provided by official:</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; eosio.bpay</span><br><span class="line">&gt; eosio.msig</span><br><span class="line">&gt; eosio.names</span><br><span class="line">&gt; eosio.ram</span><br><span class="line">&gt; eosio.ramfee</span><br><span class="line">&gt; eosio.saving</span><br><span class="line">&gt; eosio.stake</span><br><span class="line">&gt; eosio.token</span><br><span class="line">&gt; eosio.vpay</span><br><span class="line">&gt; eosio.rex</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>Use <code>create account</code> command to create each of them:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos create account eosio eosio.*** EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br></pre></td></tr></table></figure><ol><li><strong>Set the</strong> <code>eosio.token</code> <strong>contract</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio.token eos/build/contracts/eosio.token</span><br></pre></td></tr></table></figure><blockquote><p>The eosio.token used should be at the build directory which contains file eosio.token.wasm, otherwise wrong message will be invoked.</p></blockquote><ol><li><strong>set the</strong> <code>eosio.msig</code> <strong>contract</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos create account eosio eosio.msig EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br><span class="line">cleos <span class="built_in">set</span> contract eosio.msig eos/build/contracts/eosio.msig</span><br></pre></td></tr></table></figure><blockquote><p>The eosio.msig used should be at the build directory which contains file eosio.msig.wasm, otherwise wrong message will be invoked.</p></blockquote><ol><li><strong>Create and allocate token</strong></li></ol><p>We create and issue 1,000,000,000.0000 tokens and name it ‘SYS’. Then issue to <code>eosio</code> account.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio.token create <span class="string">'&#123;"issuer":"eosio", "maximum_supply": "1000000000.0000 SYS", "can_freeze": 0, "can_recall": 0, "can_whitelist": 0&#125;'</span> -p eosio.token</span><br><span class="line">cleos push action eosio.token issue <span class="string">'&#123;"to":"eosio","quantity":"1000000000.0000 SYS","memo":"issue"&#125;'</span> -p eosio</span><br></pre></td></tr></table></figure><p>To check the balance and stats</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos get currency balance eosio.token eosio</span><br><span class="line">cleos get currency stats eosio.token <span class="string">'SYS'</span></span><br></pre></td></tr></table></figure><ol><li><strong>Set</strong> <code>eosio.system</code> <strong>contract to</strong> <code>eosio</code></li></ol><p>After setting <code>eosio.system</code> contract we will be able to stake our accounts.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio eos/build/contracts/eosio.system</span><br></pre></td></tr></table></figure><p>Then stake tokens and expand the network. <code>cleos</code> stakes 8 KB of RAM on account creation, paid by the account creator.</p><ol><li><strong>Make</strong> <code>eosio.msig</code> <strong>a privileged account and Initialize system account</strong> </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio setpriv <span class="string">'["eosio.msig", 1]'</span> -p eosio@active</span><br><span class="line"></span><br><span class="line">cleos push action eosio init <span class="string">'["0", "4,SYS"]'</span> -p eosio@active</span><br></pre></td></tr></table></figure><blockquote><p>The command initializes the <code>system</code> account with code zero (needed at initialization time)  and <code>SYS</code> token with precision 4; precision can range from [0 .. 18]. </p></blockquote><ol><li><strong>Create accounts for BPs:</strong> <code>bp1111111111</code> <strong>and</strong> <code>bp2222222222</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system newaccount eosio bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS <span class="string">'1000000.0000 SYS'</span> --stake-net <span class="string">'1000000.0000 SYS'</span> --stake-cpu <span class="string">'1000000.0000 SYS'</span></span><br></pre></td></tr></table></figure><ol><li><strong>Register BPs</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system regproducer bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br></pre></td></tr></table></figure><p>Similarly register <code>bp2222222222</code>. To check producers:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system listproducers</span><br></pre></td></tr></table></figure><p>To start the two producer nodes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodeos -e --genesis-json path/to/genesis.json --producer-name bp1111111111 --private-key <span class="string">'[ "EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo","5K7EY...Hi8Uy61wU1o" ]'</span> --http-server-address 127.0.0.1:8889 --p2plisten-endpoint 127.0.0.1:9877 --p2p-peer-address bios_node_ip:port --plugin eosio::producer_plugin --plugin eosio::chain_api_plugin --plugin eosio::net_api_plugin</span><br></pre></td></tr></table></figure><ol><li><strong>Create voters accounts:</strong> <code>voter1111111</code><strong>,</strong> <code>voter2222222</code><strong>,</strong> <code>voter3333333</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system newaccount eosio voter1111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS <span class="string">'50.0000 SYS'</span> --stake-net <span class="string">'50.0000 SYS'</span> --stake-cpu <span class="string">'50.0000 SYS'</span></span><br></pre></td></tr></table></figure><ol><li><strong>Issue tokens to voters</strong></li></ol><p>Transfer 100,000,000 SYS to each voter.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio.token transfer <span class="string">'["eosio", "voter1111111","100000000.0000 SYS","vote"]'</span> -p eosio</span><br></pre></td></tr></table></figure><p>Check the balance</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos get currency balance eosio.token voter1111111</span><br></pre></td></tr></table></figure><ol><li><strong>Delegate bandwidth</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system delegatebw voter1111111 voter1111111 <span class="string">"50000000.0000 SYS"</span> <span class="string">"50000000.0000 SYS"</span></span><br></pre></td></tr></table></figure><blockquote><p>Sometime, the program will tell you failed. But the command successes actually. You could redo <code>cleos get currency balance eosio.token voter1111111</code> to check if this command take effect or not.</p></blockquote><ol><li><strong>Vote</strong></li></ol><p>Voting for producers can begin as accounts are staked and producers are registered.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system voteproducer prods voter1111111 bp1111111111 bp2222222222</span><br></pre></td></tr></table></figure><p>After 15% of the available votes have been voted, block producers will begin producing. In this case we need 150,000,000 votes.</p><ul><li><strong>Check votes:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos system listproducers </span><br><span class="line">cleos get table eosio eosio voters</span><br></pre></td></tr></table></figure><p>Some error and solutions I found is at <a href="../common-run-eosio/">here</a>. </p><h4 id="Special-notice"><a href="#Special-notice" class="headerlink" title="Special notice"></a>Special notice</h4><ul><li>EOS.CONTRACT is based on locally compiled EOS. </li><li>To compile EOS locally, it has to use git clone to clone it from github. You can not download from source and compile.</li><li>The compilation requires lots of space. It is good to remain 40GB of disk and 8GB of memory. It also takes around 3 hours to compile.</li><li>They can only be compiled at the current user’s home directory. </li></ul>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build Bitcoin local network</title>
      <link href="/2019/Bitcoin_local_network/"/>
      <url>/2019/Bitcoin_local_network/</url>
      
        <content type="html"><![CDATA[<h3 id="Some-experience-on-building-Bitcoin-local-network"><a href="#Some-experience-on-building-Bitcoin-local-network" class="headerlink" title="Some experience on building Bitcoin local network"></a>Some experience on building Bitcoin local network</h3><h4 id="Basic-info"><a href="#Basic-info" class="headerlink" title="Basic info"></a>Basic info</h4><p>Bitcoin is an client based on proof of work(POW). </p><p>Bitcoin core is a client of official bitcoin network. After some tests, I find the local network for bitcoin is good for testing wallet application but hard for testing mining function.  In this page, I am going to discuss some experience of mine on building the local test environment for bitcoin core. </p><h5 id="Compile-amp-Installation"><a href="#Compile-amp-Installation" class="headerlink" title="Compile &amp; Installation"></a>Compile &amp; Installation</h5><a id="more"></a><p>For ubuntu, just do:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev libqrencode-dev </span><br><span class="line">git <span class="built_in">clone</span> https://github.com/bitcoin/bitcoin.git</span><br><span class="line"><span class="built_in">cd</span> bitcoin</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install <span class="comment"># optional</span></span><br></pre></td></tr></table></figure><p>For other system, official has a page at <a href="https://github.com/bitcoin/bitcoin/tree/master/doc" target="_blank" rel="noopener">here</a> described how to build and install.</p><p>Bitcoin core contains three different networks, mainnet, regtest and testnet. The difference of those three networks are as follows:</p><h5 id="Mainnet"><a href="#Mainnet" class="headerlink" title="Mainnet"></a>Mainnet</h5><blockquote><p>The original and <strong>main network</strong> for Bitcoin transactions, where satoshis have <strong>real economic value.</strong>     </p></blockquote><p>  As we could see above, mainnet is the main network of bitcoin core. It has the <strong>real economic value</strong>, which means it has lots of restriction. And it make me hard to implement it locally. On the main net, I tried lots of different ways, including connect it with a virtual network, do not connect with network and change some source code. But none of them successfully build a local network. </p><p><em>To start a node under main net, just do: (The default port is 8444/8443)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind</span><br></pre></td></tr></table></figure><p><em>To use rpc to communicate, do the following: (datadir should exist at first)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/A/ -pid=<span class="variable">$HOME</span>/A/.pid -debug -daemon <span class="comment">#-daemon for running in background -debug to get detailed output</span></span><br></pre></td></tr></table></figure><p>In some old version, password and username can not be the same.</p><p><em>To connect to a specific node, use -connect tag.</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -connect=127.0.0.1:17592 -datadir=<span class="variable">$HOME</span>/A/ -pid=<span class="variable">$HOME</span>/A/.pid -debug -daemon</span><br></pre></td></tr></table></figure><p>-reindex-chainstate(Rebuild chain state from the currently indexed blocks ) and -reindex(Rebuild chain state and block index from the blk*.dat files on disk ) might be helpful some time. If need them, just add them to the end of the startup code</p><p><em>Use the following code to start 5 nodes and connect them together under main net:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. To check them:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"~/test/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A B C D E</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span><span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir -p <span class="variable">$DATADIR</span><span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>If you want to restart a new test or changed the version of bitcoind running on the machine(from high version to low version). You have to delete the datadir: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"~/test/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A B C D E</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$DATADIR</span><span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">  rm -rf <span class="variable">$DATADIR</span><span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>To get info from any node by using rpc command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><p><strong>bitcoin-cli</strong> is just a communication tool. So, you could use the same command to communicate with different nodes in different model(mainnet, testnet, regtest). </p><p>Moreover, you could also use it to communicate with other project’s node forked from bitcoind, like litecoind.</p><h5 id="Regtest"><a href="#Regtest" class="headerlink" title="Regtest"></a>Regtest</h5><blockquote><p>A local testing environment in which developers can almost instantly <strong>generate blocks on demand</strong> for testing events, and can create private satoshis with no real-world value.</p></blockquote><p><strong>generate blocks on demand</strong> means it is not real case. It is fake mining. An easy example is it produce block quick and producer doesn’t get award they should have. Another example is the normal case should have nonce 0-0xfffff. But it only have nonce 0-4 for every block. So, it is a good tool to test transaction and wallet application locally.</p><p><em>To start a node under regtest, just do: (The default port is 18444/18443)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -regtest</span><br></pre></td></tr></table></figure><p>The other commands like whatever at the first part of main net. Just add the -regtest tag to the program.</p><p><em>Use the following code to start 5 nodes and connect them together under regtest:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -regtest -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. See the former part for the way to do those procedure       </p><p>Though it is possible to use command represented before, the official recommend to use this one:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><h5 id="Testnet"><a href="#Testnet" class="headerlink" title="Testnet"></a>Testnet</h5><blockquote><p>A global testing environment in which developers can obtain and spend satoshis that have <strong>no real-world value</strong> on a network that is <strong>very similar</strong> to the Bitcoin mainnet.</p></blockquote><p><strong>very similar</strong> means it is likely to be the same as the main net. <strong>no real-world value</strong> means you could get some points free online.    </p><p>By comparing with mainnet, it seems there is restriction on the height on the testnet, which means difficulty has restriction. Right now, it is at the version 3. Its version could be changed by developer, but it is hardcoded. Difficulty does change when the height being higher and higher. And most things are similar to mainnet. It also has the same restrictions as the main net. So, testnet is best for testing transaction application and wallet application.</p><p>To start a node under testnet, just do: (The default port is 18444/18443)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -testnet</span><br></pre></td></tr></table></figure><p>The other commands like whatever at the first part of main net. Just add the -testnet tag to the program.   </p><p>Use the following code to start 5 nodes and connect them together under testnet:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -testnet -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. See the former part for the way to do those procedure</p><p>Though it is possible to use command represented before, the official recommend to use this one:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -testnet -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><h5 id="Version-difference"><a href="#Version-difference" class="headerlink" title="Version difference"></a>Version difference</h5><p>  <img alt="Version difference" src="https://h59ygg.bn.files.1drv.com/y4mi5rh-SwSuFKvGvOs_EIQFjXefs1P_ViKroareW_mtIrjAE_zF4160tywav8iK4hgNfGuu87DXGP4gD-kvkFTxi-TEMXjXHcxSQaudMBhQf7KfoHV6hv_MWClF6czkxt7jwKQA7AOQbSCR1YwEcVX9ouTRmH6CKA26mAayQXnIK7O04Yt9A1dl0sg4AKKvcZWvg7l9DqK0QSD7f1gzZbGJw?width=1280&height=720&cropmode=none" width="100%"></p><p>The bubble is the separator of different version. Litecoind is forked out from bitcoind since 0.16.3. The methods talked above, getblocktemplate, is only for mainnet or testnet. For the regtest net, there is only one method, generate or generatetoaddress. <strong>0.17.9</strong> remove wallet functions like listaccounts. It also remove generate function. To confirm a block on regtest, use generatetoaddress instead.</p><h5 id="To-connect-nodes"><a href="#To-connect-nodes" class="headerlink" title="To connect nodes"></a>To connect nodes</h5><p><img alt="Basic structure" src="https://fpqpjg.bn.files.1drv.com/y4mXqpE6NGGZOHb58ocVVjMxMYZ_UM-D9IWy5CWPwqGXHIxRYk7nQncfdf9We3Cf9nva_kWx6fiKELZzbgUqH1sxr0Mx5Byu_B33dIyiULR7wPMQgOkcrM6_wu_YTadEZxndBs_y5RyS5G2YlE6tpQ9HhZqG_DNxtftVvErHpzPV1ELwiJ0UKya-ie1pfjjKuozoag40X8sMsNgaZY2nbXVgA?width=1280&height=720&cropmode=none" width="100%"></p><p>This graph is the basic way to connect nodes. The miner is always separate with the main net. Loop connection is permitted but not required. In order to start using mining feature(getblocktemplate). Be sure to have at least two nodes connected. Actually, there are more restriction than this. </p><h4 id="To-confirm-a-block"><a href="#To-confirm-a-block" class="headerlink" title="To confirm a block"></a>To confirm a block</h4><p>  <img alt="Structure to mine" src="https://fp8bjw.bn.files.1drv.com/y4mdRutIlghFFflWeN_puKMs_4LpZsI8wk9IWOQ3lhXixvxVuoO6OK3VeBB4TNLaFIdGO0NIGJVmFkyZxVoxhpYvoHo3USjmB1n3R3EsLAOaopAUvz5nVWqFp1ojkL-zWeeWDRsff0cVx8HcvXMF21RFXsgw9ez4re7vUudQKVeyELWlfOGycyNM56xibsw9NgcEbO5uwRSgJPXllE_qW_4dg?width=1280&height=720&cropmode=none" width="100%"></p><p><strong>Bitcoin core full node</strong> is the client start by bitcoind by using command in the previous section.</p><p>Above is the basic structure for mining(confirm a block). If no other things happen, one block will be completely confirmed 100 blocks later. The confirm interval is 100 blocks.</p><p><strong>Getblocktemplate</strong> is a method which will return the following structure as a return result as a json for the miner to use, which contains information miner need. The structure looks like this:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"result"</span>:&#123;</span><br><span class="line">      <span class="attr">"capabilities"</span>:[<span class="string">"proposal"</span>],</span><br><span class="line">      ...</span><br><span class="line">      "previousblockhash":"756c7b16ef069c782fe6faf9e393483821261206fe110d409c11fbc4a0b927b0",</span><br><span class="line">      "transactions":[], 'Transactions information could be used for next block'</span><br><span class="line">      "coinbaseaux":&#123;"flags":""&#125;, 'miner will use this and the nest value to build coinbase'</span><br><span class="line">      "coinbasevalue":5000000000, 'bonus people have'</span><br><span class="line">      "longpollid":"756c7b16ef069c782fe6faf9e393...06fe110d409c11fbc4a0b927b02", 'bitcoind technique'</span><br><span class="line">      "target":"7fffff0000000000000000000000000000000000000000000000000000000000", </span><br><span class="line">      "mintime":1550614864,</span><br><span class="line">      "noncerange":"00000000ffffffff",</span><br><span class="line">  ...</span><br><span class="line">      "bits":"207fffff",</span><br><span class="line">      "height":4,</span><br><span class="line">      ...</span><br><span class="line">   &#125;,</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>After version <strong>0.17.9</strong>. You have to attach the argument segwit in order to get a return. Their official said this is safer. In order to attach argument, it is recommend to use curl:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user 123 --data-binary <span class="string">'&#123;"id": 1, "method": "getblocktemplate", "params": [&#123;"rules": ["segwit"], "capabilities": ["coinbasetxn", "workid", "coinbase/append"]&#125;]&#125;'</span> -H <span class="string">'content-type: text/plain;'</span> http://127.0.0.1:16592/</span><br></pre></td></tr></table></figure></p><p><strong>Miners</strong> are softwares used for mining</p><p>If you are using Miner software, then you don’t have to understand what getblocktemplate get. Miner software will handle them. But you have to make sure the Getblocktemplate method is working and coinbasevalue exist and it is not 0.</p><blockquote><p>To make the coinbasevalue exist and it is not 0, it might be helpful to make sure <a href="https://github.com/bitcoin/libblkmaker" target="_blank" rel="noopener">libblkmaker</a>compile successfully. Because there is some library dependence required. And Getblocktemplate never tell you what is the dependence and the main bitcoin core could compile without it. Maybe there are some better ways. But I fix every dependences by compile libblkmaker. I think it is because they use the same dependence at somewhere. But some people also say bitcoin’s getblocktemplate relay on libblkmaker. </p></blockquote><p>There are two official recommend and commonly used miner. <a href="https://bitcointalk.org/?topic=877081" target="_blank" rel="noopener">BFGMiner</a> and <a href="https://bitcointalk.org/?topic=877081" target="_blank" rel="noopener">Cgminer</a>. </p><p><em>To start solo mining by using <strong>BFGMiner</strong>:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bfgminer -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to <span class="string">"PUBLIC_ADDRESS"</span> --coinbase-sig <span class="string">"rig1: This is Joe's block!"</span> --net-delay</span><br></pre></td></tr></table></figure><p>—coinbase-sig is for comments, it is not required</p><p>—net-delay is to make it don’t communicate with server too frequently.</p><p>You could use -S to specify hardware you want to use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bfgminer -S opencl:auto -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to <span class="string">"PUBLIC_ADDRESS"</span></span><br></pre></td></tr></table></figure><p><em>To start solo mining by using <strong>Cgminer</strong>:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgminer -o http://localhost:8332 -u username -p password --btc-address PUBLIC_ADDRESS</span><br></pre></td></tr></table></figure><p>This is from the official website, I did’t test it. It requires to use FPGA and ASIC miner.</p><p>If you want to build a miner from scratch, official do provide some instructions at their <a href="https://en.bitcoin.it/wiki/Getblocktemplate#For_developers" target="_blank" rel="noopener">website</a></p><p>Actually, if you just want to build a miner application, most of people choose to make their application based on the <a href="https://github.com/bitcoin/libblkmaker" target="_blank" rel="noopener">libblkmaker</a> official provided.</p><h4 id="Special-note"><a href="#Special-note" class="headerlink" title="Special note"></a>Special note</h4><ol><li>In order to simulate a real network case that lots of transaction happens every second, you could use the following code:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 1000)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 sendtoaddress <span class="string">"PUBLIC_ADDRESS"</span> 0.0001</span><br><span class="line">  sleep 2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ol><li><p>Build Path should be correct. If you change the path of compiled file, you have to reconfigure and recompile before install or do other implementation.<br>Bitcoind is not friendly for mining locally</p></li><li><p>For mainnet and testnet, they set up some restriction. So getblocktemplate never works. The coding for getblocktemplate is in <a href="https://github.com/bitcoin/bitcoin/blob/adc55dbac5b521d6c9df58d1d69075e6abf0116f/src/rpc/mining.cpp#L292" target="_blank" rel="noopener">mining.cpp</a> Maybe I need to look through source in order to check where is the real restriction. But I guess they setup multiple restrictions. One I found is at <a href="https://github.com/bitcoin/bitcoin/blob/f5a623eb66c81d9d7b11206d574430af0127546d/src/chainparams.cpp" target="_blank" rel="noopener">chainparams.cpp</a>. It is also a direction to try to delete as many information as it could to see if it works.</p></li><li>In bitcoind, Genesis block and its information, including time interval, is hard coded, even for genesis block.</li><li>Bitcoid is easy to compile. But it will occupy 3GB space on disk after compilation. And it takes around an hour to compile. To compile it, their official <a href="https://github.com/bitcoin/bitcoin/tree/f5a623eb66c81d9d7b11206d574430af0127546d/doc" target="_blank" rel="noopener">website</a> described it clearly. </li></ol>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> Bitcoin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bitcoin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Website for CS425 project</title>
      <link href="/2019/projects/Website%20for%20CS425%20project/"/>
      <url>/2019/projects/Website%20for%20CS425%20project/</url>
      
        <content type="html"><![CDATA[<h3 id="Reservation-system-website-application-deployed"><a href="#Reservation-system-website-application-deployed" class="headerlink" title="Reservation system website application deployed"></a>Reservation system website application deployed</h3><p>The website made by me for my CS425 project has been deployed and works normally at <a href="https://cs425a.azurewebsites.net" target="_blank" rel="noopener">This Website</a>. In webpage browser is at bottom.</p><p>Source code is at <a href="https://github.com/ShaokangJiang/CS425-project/blob/master/README.md" target="_blank" rel="noopener">My Github Page</a></p><p>This is a website made by using SQL as database and <a href="https://materializecss.com/" target="_blank" rel="noopener">Material Theme</a> as layout. </p><h4 id="Test-account-information"><a href="#Test-account-information" class="headerlink" title="Test account information:"></a>Test account information:</h4><a id="more"></a><table class="highlight1">      <thead>    <tr>        <td>id</td>        <td>priority</td>        <td>password</td>        <td>Name</td>    </tr>    </thead>    <tr>        <td>1</td>        <td>admin</td>        <td>123456</td>        <td></td>    </tr>    <tr>        <td>28</td>        <td>patient</td>        <td>456789</td>        <td>Rebecca Torres</td>    </tr>    <tr>        <td>29</td>        <td>scheduler</td>        <td>789456</td>        <td></td>    </tr>    <tr>        <td>30</td>        <td>medical staff</td>        <td>123789</td>        <td></td>    </tr></table><h4 id="Basic-functions"><a href="#Basic-functions" class="headerlink" title="Basic functions:"></a>Basic functions:</h4><h5 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h5><p>The application must provide a login portal for user to login. The application will validate the user credentials and privileges. For this project you are only required to provide the implementation of managers. </p><h5 id="Privileges"><a href="#Privileges" class="headerlink" title="Privileges"></a>Privileges</h5><p>1- Users with admin privileges can do the following: </p><p>​    a. Schedule an appointment </p><p>​    b. Create new patient </p><p>​    c. Create a new user account </p><p>​    d. Access the business reporting</p><p>2- Users with Doctor/Staff privileges can do the following:</p><p>​    a. View and update patient record</p><p>​    b. Create an Order</p><p>​    c. View calendar and schedule appointment with medical staff</p><p>3- Users with Patient privileges can do the following:</p><p>​    a. View the orders</p><p>​    b. View bills</p><p>4- Users with Scheduler privileges can do the following:</p><p>​    a. View the orders</p><p>​    b. View bills</p><p>​    c. View calendar and schedule appointment with medical staff</p><h5 id="Order-transaction"><a href="#Order-transaction" class="headerlink" title="Order transaction"></a>Order transaction</h5><p>Doctors can order diagnostics for a patient, once the diagnostics are completed and results are available. The system gets updated by medical staff. </p><h5 id="Reporting-and-analytics"><a href="#Reporting-and-analytics" class="headerlink" title="Reporting and analytics"></a>Reporting and analytics</h5><p>The admin will have the capability of running business analytics reports that will help them monitor business operations. </p><p>• Total revenue from all diagnostic</p><p>• Total revenue from each doctor visit </p><p>• Allow patient to view their bills, appointment and medical record</p><p>In webpage demo:</p><iframe src="https://cs425a.azurewebsites.net" width="100%" height="500"></iframe>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selection_normal</title>
      <link href="/2018/selection/Selection-normal/"/>
      <url>/2018/selection/Selection-normal/</url>
      
        <content type="html"><![CDATA[<h2 id="德克萨斯奥斯丁"><a href="#德克萨斯奥斯丁" class="headerlink" title="德克萨斯奥斯丁"></a>德克萨斯奥斯丁</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目"><a href="#项目" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语"><a href="#英语" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE"><a href="#GRE" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="哥伦比亚大学"><a href="#哥伦比亚大学" class="headerlink" title="哥伦比亚大学"></a>哥伦比亚大学</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-1"><a href="#项目-1" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-1"><a href="#英语-1" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-1"><a href="#GRE-1" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="哈弗"><a href="#哈弗" class="headerlink" title="哈弗"></a>哈弗</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-2"><a href="#项目-2" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-2"><a href="#英语-2" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-2"><a href="#GRE-2" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="普渡"><a href="#普渡" class="headerlink" title="普渡"></a>普渡</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-3"><a href="#项目-3" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-3"><a href="#英语-3" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-3"><a href="#GRE-3" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="南加州"><a href="#南加州" class="headerlink" title="南加州"></a>南加州</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-4"><a href="#项目-4" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-4"><a href="#英语-4" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-4"><a href="#GRE-4" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="马里兰"><a href="#马里兰" class="headerlink" title="马里兰"></a>马里兰</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-5"><a href="#项目-5" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-5"><a href="#英语-5" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-5"><a href="#GRE-5" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="加州圣地亚哥"><a href="#加州圣地亚哥" class="headerlink" title="加州圣地亚哥"></a>加州圣地亚哥</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-6"><a href="#项目-6" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-6"><a href="#英语-6" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-6"><a href="#GRE-6" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="耶鲁"><a href="#耶鲁" class="headerlink" title="耶鲁"></a>耶鲁</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-7"><a href="#项目-7" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-7"><a href="#英语-7" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-7"><a href="#GRE-7" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul>]]></content>
      
      
      <categories>
          
          <category> selection </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Selection_Important</title>
      <link href="/2018/selection/Selection-Important/"/>
      <url>/2018/selection/Selection-Important/</url>
      
        <content type="html"><![CDATA[<h2 id="华盛顿大学"><a href="#华盛顿大学" class="headerlink" title="华盛顿大学"></a><a href="https://www.cs.washington.edu/" target="_blank" rel="noopener">华盛顿大学</a></h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>December 15</th><th>Start:</th><th>September 1</th></tr></thead><tbody><tr><td>Dept:</td><td>Paul G. Allen School of Computer Science</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td><a href="mailto:uwgrad@uw.edu" target="_blank" rel="noopener">uwgrad@uw.edu</a></td></tr><tr><td>Application:</td><td><a href="https://webapps.grad.uw.edu/applForAdmiss/newUserProfile.aspx?cookieCheck=true" target="_blank" rel="noopener">https://webapps.grad.uw.edu/applForAdmiss/newUserProfile.aspx?cookieCheck=true</a></td><td>Description:</td><td>www.cs.washington.edu/academics/phd</td></tr></tbody></table></div><a id="more"></a><h3 id="项目"><a href="#项目" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link: <a href="https://www.cs.washington.edu/academics" target="_blank" rel="noopener">https://www.cs.washington.edu/academics</a></li></ul><blockquote><p>The PMP is a part-time, evening program leading to a Master’s Degree in Computer Science &amp; Engineering that is designed with the schedule and needs of working professionals in mind. </p></blockquote><p><mark>Professional 为part-time和夜校，下面要求是phd的</mark></p><p>申请者多</p><blockquote><p>Each year, we receive applications from approximately 2,000 prospective graduate students, from around the globe, for roughly 50 positions. </p></blockquote><p>关系介绍：入学前无需确认导师，但不反对</p><blockquote><p>All new grads are assigned a temporary faculty advisor based on availability, potential, funding, and several other factors. The student and advisor do not have to become “permanent” fixtures in each other’s career until after the student’s Qualifying examination.</p><p>If you are interested in finding out how to improve your application for a certain field or advisor, you are better-off contacting graduate students as they can be more frank with their recent experience of the process, and give more relevant advice than faculty and staff.</p></blockquote><h3 id="英语-Not-Required"><a href="#英语-Not-Required" class="headerlink" title="英语 - Not Required"></a>英语 - Not Required</h3><ul><li>Link: <a href="https://grad.uw.edu/policies-procedures/graduate-school-memoranda/memo-8-graduate-school-english-language-proficiency-requirements/" target="_blank" rel="noopener">https://grad.uw.edu/policies-procedures/graduate-school-memoranda/memo-8-graduate-school-english-language-proficiency-requirements/</a></li><li><a href="https://grad.uw.edu/policies-procedures/graduate-school-memoranda/memo-15-conditions-of-appointment-for-tas-who-are-not-native-speakers-of-english/" target="_blank" rel="noopener">https://grad.uw.edu/policies-procedures/graduate-school-memoranda/memo-15-conditions-of-appointment-for-tas-who-are-not-native-speakers-of-english/</a></li></ul><p>TA 要求: waived</p><blockquote><p>Hold a bachelor’s degree from a regionally accredited institution in the United States, or hold a bachelor’s degree from an institution in Australia, the Bahamas, Canada, Ireland, Jamaica, Kenya, New Zealand, Singapore, Trinidad and Tobago, or the United Kingdom, where English is the medium of instruction. While enrolled at the degree-granting school, the student must be in residence on campus. (Note: A master’s degree does not satisfy this requirement).</p></blockquote><p>General admission req: waived </p><blockquote><p>Proficiency can be demonstrated in one of the following five ways:</p><ol><li>A bachelor’s, master’s, or doctoral degree from a regionally accredited institution located in the United States and where English is the medium of instruction.</li></ol></blockquote><h3 id="GRE-Optional"><a href="#GRE-Optional" class="headerlink" title="GRE - Optional"></a>GRE - Optional</h3><ul><li>Link: <a href="https://www.cs.washington.edu/academics/phd/admissions/required-materials" target="_blank" rel="noopener">https://www.cs.washington.edu/academics/phd/admissions/required-materials</a></li></ul><blockquote><p>In response to current restrictions created by the COVID-19 health crisis, the Paul G. Allen School of Computer Science &amp; Engineering will temporarily waive the Graduate Records Examination (GRE) requirement for Ph.D. admissions during the 2020-21 academic year. For the Ph.D. program this means that reporting GRE scores will be optional for those applying to start in Autumn 2021.</p><p>The average GRE scores of recent applicants were: Verbal 83% (including international applicants), Quantitative 93%, and Analytical 61%.</p></blockquote><h2 id="加州伯克利"><a href="#加州伯克利" class="headerlink" title="加州伯克利"></a><a href="https://grad.berkeley.edu/" target="_blank" rel="noopener">加州伯克利</a></h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>December 8, 2020</th><th>Start:</th><th>September 15, 2020</th></tr></thead><tbody><tr><td>Dept:</td><td>EECS(electric engineering and cs)</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td><a href="https://gradapp.berkeley.edu/apply/" target="_blank" rel="noopener">https://gradapp.berkeley.edu/apply/</a></td><td>Description:</td><td><a href="https://eecs.berkeley.edu/academics/graduate/research-programs/admissions" target="_blank" rel="noopener">https://eecs.berkeley.edu/academics/graduate/research-programs/admissions</a></td></tr></tbody></table></div><h3 id="项目-1"><a href="#项目-1" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link: <a href="https://eecs.berkeley.edu/academics/graduate/research-programs/admissions" target="_blank" rel="noopener">https://eecs.berkeley.edu/academics/graduate/research-programs/admissions</a></li></ul><p><strong>需要选择方向</strong></p><blockquote><p>You can apply for the M.S., M.S./Ph.D., or Ph.D. program in either <strong>Electrical Engineering (EECS)</strong> or <strong>Computer Science (CS)</strong>. <mark>To apply you will need to choose a division.</mark> The table below shows which specialization areas fall under the EE division, under the CS division, and under both.</p><p><strong>Please note that on the official Grad Division application page </strong>EE is referred to as Electrical Engineering and Computer Sciences (EECS)<strong> and </strong>CS is referred to as Computer Science (CS)**. EE applicants must make sure to apply to EECS, and CS applicants make sure to apply to CS.</p></blockquote><p><strong>方向列表：</strong></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/AI/" target="_blank" rel="noopener">Artificial Intelligence (AI)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/DBMS/" target="_blank" rel="noopener">Database Management Systems (DBMS)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/EDUC/" target="_blank" rel="noopener">Education (EDUC)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/GR/" target="_blank" rel="noopener">Graphics (GR)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/HCI/" target="_blank" rel="noopener">Human-Computer Interaction (HCI)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/OSNT/" target="_blank" rel="noopener">Operating Systems &amp; Networking (OSNT)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/PS/" target="_blank" rel="noopener">Programming Systems (PS)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/SCI/" target="_blank" rel="noopener">Scientific Computing (SCI)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/SEC/" target="_blank" rel="noopener">Security (SEC)</a></p><p><a href="https://www2.eecs.berkeley.edu/Research/Areas/THY/" target="_blank" rel="noopener">Theory (THY)</a></p><p><strong>master招收较少人，若想读博，推荐申请硕博连读</strong></p><blockquote><p><em>The Master of Science (M.S.) Only program is a very small research program for exceptional applicants with research experience. Applicants should consider applying to the MS/PhD program, since there are very few students in the M.S. only program.</em></p><p>The Master of Science (M.S.) Only program is a very small research program for exceptional applicants with research experience. The M.S. leads to a Ph.D. or a career in industrial R&amp;D.  If you’re sure that you want to continue on for a Berkeley Ph.D., you should consider applying to the MS/PhD program, since we admit so few people for the M.S. only, and you’ll have to apply again to add the Ph.D.</p></blockquote><p><strong>硕博连读 - 正常</strong></p><p><strong>Focus:</strong> Research preparation for the PhD.</p><p>A full program for those who know they would like to pursue a Ph.D at Berkeley.</p><p><strong>仅博士要求极高</strong></p><blockquote><p>A Ph.D. in EECS combines coursework and original research with exceptional faculty mentoring to prepare students for a career in academia or industry.</p></blockquote><p> <strong>前期无需与校内导师联系</strong></p><blockquote><p>Do I need to contact faculty or establish an advisor before I apply?</p><p>No, you do not need to contact faulty or establish an advisor in order to apply. Instead, on the application, you will list faculty members who you would like to work with should you be admitted to our graduate program. You can view the list of all our <a href="https://www2.eecs.berkeley.edu/Faculty/Lists/list.html?_ga=2.213989719.1553762658.1534270986-1924378834.1534270986" target="_blank" rel="noopener">current faculty</a> or you can view the faculty associated with each <a href="https://www2.eecs.berkeley.edu/Research/Areas/?_ga=2.118592841.1553762658.1534270986-1924378834.1534270986" target="_blank" rel="noopener">research area</a>.</p></blockquote><p><strong>方向应该可以变更，至少大方向（CS-&gt;EE）可以变更</strong></p><blockquote><p>Can graduate students in the EECS Department change their program division?</p><p>Students who wish to change their program division (from CS to EE or vice-versa) can petition to do so with approval from an appropriate faculty advisor. Please note that newly admitted students must wait until they start their graduate program to submit this petition.</p></blockquote><h3 id="英语-Not-Required-1"><a href="#英语-Not-Required-1" class="headerlink" title="英语 - Not Required"></a>英语 - Not Required</h3><ul><li>Link: <a href="https://eecs.berkeley.edu/academics/graduate/research-programs/admissions" target="_blank" rel="noopener">https://eecs.berkeley.edu/academics/graduate/research-programs/admissions</a></li><li><a href="https://grad.berkeley.edu/admissions/requirements/#4_3" target="_blank" rel="noopener">https://grad.berkeley.edu/admissions/requirements/#4_3</a></li></ul><blockquote><p>If you received or are a candidate to receive a degree from an institution <strong>outside the United States</strong>, please see <a href="http://www.grad.berkeley.edu/admissions/admis_require.shtml#4_2" target="_blank" rel="noopener">Minimum Degree Requirements for International Applicants</a> and <a href="http://www.grad.berkeley.edu/admissions/admis_require.shtml#4_3" target="_blank" rel="noopener">Evidence of English Language Proficiency</a>.</p><p>Have completed a basic or advanced degree at an institution, in the United States or a United States institution abroad, where the language of instruction is English and the institution is accredited by one of the United States’ regional accrediting agencies.</p></blockquote><h3 id="GRE-Not-Required"><a href="#GRE-Not-Required" class="headerlink" title="GRE - Not Required"></a>GRE - Not Required</h3><ul><li>Link: <a href="https://eecs.berkeley.edu/academics/graduate/research-programs/admissions" target="_blank" rel="noopener">https://eecs.berkeley.edu/academics/graduate/research-programs/admissions</a></li><li><a href="https://grad.berkeley.edu/program/computer-science/" target="_blank" rel="noopener">https://grad.berkeley.edu/program/computer-science/</a></li></ul><blockquote><p>The <strong>General Test of the Graduate Record Examination (GRE)</strong>. We do not have minimum or cutoff GRE test scores. Please see the <a href="http://www.grad.berkeley.edu/admissions/admis_require.shtml" target="_blank" rel="noopener">Admission Requirements</a> page for more information. UPDATE as of August 2020: Due to Covid 19 testing difficulties, the GRE is not required for Fall 2021 admits. However, you are welcome to include the exam in your portfolio.</p><p>Required Tests: <strong>GRE Required: No</strong></p></blockquote><h4 id="Special-notes"><a href="#Special-notes" class="headerlink" title="Special notes:"></a>Special notes:</h4><p>Though the quantitative section will be of most interest to our committee, any score below the 35th percentile on the verbal section of the GRE will be of concern.</p><h2 id="MIT"><a href="#MIT" class="headerlink" title="MIT"></a><a href="https://www.eecs.mit.edu/" target="_blank" rel="noopener">MIT</a></h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>December 15</th><th>Start:</th><th>September 15</th></tr></thead><tbody><tr><td>Dept:</td><td>Electrical Engineering and Computer Science</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td><a href="https://gradapply.mit.edu/eecs/apply/login/" target="_blank" rel="noopener">https://gradapply.mit.edu/eecs/apply/login/</a></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-2"><a href="#项目-2" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><p>CS于此，因为其本科提供CS</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE"><a href="#GRE" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h3 id="Computational-science-and-Engineering"><a href="#Computational-science-and-Engineering" class="headerlink" title="Computational science and Engineering"></a>Computational science and Engineering</h3><p>非CS亲儿子</p><h2 id="卡内基梅隆"><a href="#卡内基梅隆" class="headerlink" title="卡内基梅隆"></a>卡内基梅隆</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-3"><a href="#项目-3" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-1"><a href="#英语-1" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-1"><a href="#GRE-1" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="斯坦福"><a href="#斯坦福" class="headerlink" title="斯坦福"></a>斯坦福</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-4"><a href="#项目-4" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-2"><a href="#英语-2" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-2"><a href="#GRE-2" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="伊利诺伊香槟"><a href="#伊利诺伊香槟" class="headerlink" title="伊利诺伊香槟"></a>伊利诺伊香槟</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-5"><a href="#项目-5" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-3"><a href="#英语-3" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-3"><a href="#GRE-3" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul><h2 id="UCLA"><a href="#UCLA" class="headerlink" title="UCLA"></a>UCLA</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td></td><td>Description:</td></tr></tbody></table></div><h3 id="项目-6"><a href="#项目-6" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link:</li></ul><h3 id="英语-4"><a href="#英语-4" class="headerlink" title="英语:"></a>英语:</h3><ul><li>Link:</li></ul><h3 id="GRE-4"><a href="#GRE-4" class="headerlink" title="GRE:"></a>GRE:</h3><ul><li>Link:</li></ul>]]></content>
      
      
      <categories>
          
          <category> selection </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Selection_ExImportant</title>
      <link href="/2018/selection/Selection-ExImportant/"/>
      <url>/2018/selection/Selection-ExImportant/</url>
      
        <content type="html"><![CDATA[<h2 id="UWmadison"><a href="#UWmadison" class="headerlink" title="UWmadison"></a>UWmadison</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>December 15</th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td><a href="https://cdis.wisc.edu/" target="_blank" rel="noopener">School of Computer, Data &amp; Information Sciences</a></td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td><a href="mailto:admissions@cs.wisc.edu" target="_blank" rel="noopener">admissions@cs.wisc.edu</a></td></tr><tr><td>Application:</td><td><a href="https://apply.grad.wisc.edu/Account/Login?nonetid=true" target="_blank" rel="noopener">apply</a></td><td>Description:</td><td><a href="https://www.cs.wisc.edu/graduate/ms-and-phd-program/" target="_blank" rel="noopener">des</a></td></tr></tbody></table></div><h3 id="项目"><a href="#项目" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link: <a href="https://www.cs.wisc.edu/graduate/ms-and-phd-program/" target="_blank" rel="noopener">TRADITIONAL MS AND PHD PROGRAM</a></li></ul><a id="more"></a><h3 id="英语-Not-required"><a href="#英语-Not-required" class="headerlink" title="英语 - Not required"></a>英语 - Not required</h3><ul><li>Link: <a href="https://www.cs.wisc.edu/graduate/ms-and-phd-program/" target="_blank" rel="noopener">https://www.cs.wisc.edu/graduate/ms-and-phd-program/</a></li></ul><blockquote><p>An applicant whose native language is not English, or whose undergraduate instruction was not in English, must provide an English proficiency test score. IELTS or TOEFL are acceptable. See the <a href="http://grad.wisc.edu/admissions/requirements" target="_blank" rel="noopener">Graduate School requirements</a> for more details.</p></blockquote><h3 id="GRE-Recommend-Not-required"><a href="#GRE-Recommend-Not-required" class="headerlink" title="GRE: - Recommend(Not required)"></a>GRE: - Recommend(Not required)</h3><ul><li>Link: <a href="https://www.cs.wisc.edu/graduate/ms-and-phd-program/" target="_blank" rel="noopener">https://www.cs.wisc.edu/graduate/ms-and-phd-program/</a></li></ul><blockquote><p>We recommend that all applicants take the <a href="https://www.ets.org/gre" target="_blank" rel="noopener">Graduate Record Examination (GRE)</a>, offered by the <a href="https://www.ets.org/" target="_blank" rel="noopener">Educational Testing Service (ETS)</a>, and request that ETS send the scores to UW–Madison, institution code 1846. However, we do not require GRE scores at this time due to difficulties related to COVID. If you plan to send GRE scores to us, please note that processing of scores takes up to six weeks, so you’ll need to take the test by December 1.</p></blockquote><h2 id="佐治亚理工"><a href="#佐治亚理工" class="headerlink" title="佐治亚理工"></a><a href="https://www.gatech.edu/" target="_blank" rel="noopener">佐治亚理工</a></h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>Feb. 1</th><th>Start:</th><th>September 21, 2020</th></tr></thead><tbody><tr><td>Dept:</td><td>School of cs /college of computing</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td><a href="https://www.grad.gatech.edu/apply-now" target="_blank" rel="noopener">https://www.grad.gatech.edu/apply-now</a></td><td>Description:</td><td><a href="https://www.cc.gatech.edu/academics/degree-programs/masters/computer-science/admissionreqs" target="_blank" rel="noopener">https://www.cc.gatech.edu/academics/degree-programs/masters/computer-science/admissionreqs</a></td></tr></tbody></table></div><h3 id="项目-1"><a href="#项目-1" class="headerlink" title="项目:"></a>项目:</h3><ul><li><p><a href="http://www.cc.gatech.edu/master-science-information-security" target="_blank" rel="noopener">Master of Science in Cybersecurity</a> — Offered by School of cs</p></li><li><p><a href="http://www.cc.gatech.edu/master-science-human-computer-interaction" target="_blank" rel="noopener">Master of Science in Human-Computer Interaction</a></p></li><li><p><a href="https://www.cc.gatech.edu/master-science-bioengineering" target="_blank" rel="noopener">Master of Science in Bioengineering</a></p></li><li><p><a href="https://www.cc.gatech.edu/academics/degree-programs/academics/degree-programs/masters/computational-science-engineering" target="_blank" rel="noopener">Master of Science in Computational Science and Engineering</a></p></li><li><p><a href="http://www.cc.gatech.edu/master-science-analytics" target="_blank" rel="noopener">Master of Science in Analytics</a></p></li><li><p><a href="https://www.ic.gatech.edu/academics/master-science-robotics" target="_blank" rel="noopener">Master of Science in Robotics</a></p></li><li><p>Link: <a href="https://www.cc.gatech.edu/future/masters/mscs" target="_blank" rel="noopener">https://www.cc.gatech.edu/future/masters/mscs</a></p></li></ul><p>Master of Science in Computer Science: 可以选择方向，选择Thesis Option即可</p><blockquote><p>The Master of Science in Computer Science (M.S. CS) program is a terminal degree program designed to prepare students for more highly productive careers in industry.</p><p><strong>Program Options</strong></p><p>程序选项</p><p>Students may choose from one of the following three options in pursuing the M.S. CS.</p><p>学生可以从以下三种选择中选择一种来攻读硕士学位。</p><p><strong>Course Option</strong></p><p>课程选择</p><ul><li>30 hours of course work (no M.S. project or thesis hours) 30小时的课程(没有硕士课程或论文)</li><li>Total course credit hours required: 30 所需课程学分总数: 30</li><li>Minimum CS/CSE course credit hours: 24 最低学分: 24小时</li><li>Minimum CS/CSE course credit hours at the graduate (6000-8000) level: 24 毕业生(6000-8000)最低 CS/CSE 课程学分: 24</li><li>Minimum total credit hours at the 6000-8000 level: 24 最低总学分6000-8000:24</li></ul><p><strong>Project Option</strong></p><p>项目方案</p><ul><li>21 hours of course work and a 9-hour project. The student must obtain advance approval of the project proposal by the faculty advisor and M.S. CS coordinator. See your academic advisor for more information. 21小时的课程和9小时的作业。学生必须事先获得教师顾问和 M.S.CS 协调员的项目建议书的批准。更多信息请咨询你的学术顾问</li><li>Total credit hours required: 30 学分总数: 30</li><li>M.S. CS project hours (CS 6999): 9 M.S.CS 项目时间(cs6999) : 9</li><li>Total course credit hours: 21 课程学分总计: 21</li><li>Minimum CS/CSE course hours required: 15<em> 最低学时要求: 15 </em></li><li>Minimum CS/CSE course credit hours at the graduate (6000-8000) level: 15<em> 毕业生(6000-8000)最低 CS/CSE 课程学分: 15 </em></li></ul><p><strong>Thesis Option</strong></p><p>论文选择</p><ul><li>18 hours of course work and a 12-hour thesis. The student must obtain advance approval of the thesis proposal by the faculty advisor and MSCS coordinator. See your academic advisor for more information about the thesis process. 18小时的课程和12小时的论文。学生必须事先获得教师导师和 MSCS 协调员的论文提案的批准。有关论文过程的更多信息，请咨询你的学术顾问</li><li>Total credit hours required: 30 学分总数: 30</li><li>M.S. CS thesis hours (CS 7000): 12 理学硕士学位论文时间(cs7000) : 12</li><li>Minimum CS/CSE course hours required: 15<em> 最低学时要求: 15 </em></li><li>Minimum CS/CSE course credit hours at the graduate (6000-8000) level: 15<em> 毕业生(6000-8000)最低 CS/CSE 课程学分: 15 </em></li></ul><p><strong>Specializations</strong></p><p>专业化</p><p>Students in the M.S. CS program choose from 11 areas of specialization. This allows students to better customize their degree program. To find out which courses are required for each specialization, <a href="https://www.cc.gatech.edu/ms-cs-specializations" target="_blank" rel="noopener">visit our M.S. CS Specializations page to explore the possibilities.</a> </p><p>计算机科学硕士课程的学生可以从11个专业领域中选择。这使得学生可以更好地定制自己的学位课程。要找出每个专业需要哪些课程，请访问我们的 M.S.CS 专业化页面来探索这些可能性。</p></blockquote><h3 id="英语-Not-Required"><a href="#英语-Not-Required" class="headerlink" title="英语 - Not Required"></a>英语 - Not Required</h3><ul><li>Link: <a href="https://www.cc.gatech.edu/academics/degree-programs/masters/computer-science/admissionreqs" target="_blank" rel="noopener">https://www.cc.gatech.edu/academics/degree-programs/masters/computer-science/admissionreqs</a></li></ul><blockquote><p>The Test of English as a Foreign Language (TOEFL) is required for candidates from non-English speaking countries who have not studied in the United States for at least one year.</p></blockquote><h3 id="GRE-Not-Required"><a href="#GRE-Not-Required" class="headerlink" title="GRE - Not Required"></a>GRE - Not Required</h3><ul><li>Link: <a href="https://www.cc.gatech.edu/academics/degree-programs/masters/computer-science/admissionreqs" target="_blank" rel="noopener">https://www.cc.gatech.edu/academics/degree-programs/masters/computer-science/admissionreqs</a></li></ul><blockquote><p>Scores from the general Graduate Record Examination (GRE) are required. Applicant scores are expected to be at least 153 in the Verbal, 155 in the Quantitative, and 3.0 in the Analytical sections for the MS program.</p></blockquote><p>Updated 09/15/2020:</p><blockquote><p>Scores from the general Graduate Record Examination (GRE) are not required for Fall 2021 only. All other applications expect scores to be at least 153 in the Verbal, 155 in the Quantitative, and 3.0 in the Analytical sections for the MS program.</p></blockquote><h2 id="加州理工"><a href="#加州理工" class="headerlink" title="加州理工"></a><a href="https://www.caltech.edu/" target="_blank" rel="noopener">加州理工</a></h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>December 15</th><th>Start:</th><th>October 2020</th></tr></thead><tbody><tr><td>Dept:</td><td>Department of computing + mathematical sciences</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td><a href="mailto:admissions@cs.wisc.edu" target="_blank" rel="noopener">mlopezcms.caltech.edu</a></td></tr><tr><td>Application:</td><td><a href="https://www.applyweb.com/caltgapp/index.ftl" target="_blank" rel="noopener">https://www.applyweb.com/caltgapp/index.ftl</a></td><td>Description:</td><td><a href="https://cms.caltech.edu/academics/grad" target="_blank" rel="noopener">https://cms.caltech.edu/academics/grad</a></td></tr></tbody></table></div><p><mark>There is no terminal M.S. degree in Computer Science. </mark></p><h3 id="项目-2"><a href="#项目-2" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link: <a href="http://cloudfront.eas.caltech.edu/cms/documents/2018-grad-orientation.pdf" target="_blank" rel="noopener">http://cloudfront.eas.caltech.edu/cms/documents/2018-grad-orientation.pdf</a></li></ul><p>ACM: Applied &amp; Computational Mathematics </p><p>CS: Computer Science </p><p>CDS: Control &amp; Dynamical Systems </p><p>CMS: Computing &amp; Mathematical Sciences</p><blockquote><p>If you’re unsure about which program is best for you, please feel free to apply to multiple programs. Also, note that it is possible to switch between programs once you arrive to Caltech. That said, each program has a specific goal. The ACM and CS programs are somewhat traditional PhD programs in Applied Math and Computer Science, while the CDS, and CMS programs are unique interdisciplinary programs meant to appeal to students interested in emerging areas at the boundaries of computing and mathematics. For example, our flagship program, the CMS program, is a unique, new program that provides students with a cross-cutting perspective on optimization, algorithms, learning, statistics, and networks.</p></blockquote><h3 id="英语-Not-require"><a href="#英语-Not-require" class="headerlink" title="英语 - Not require"></a>英语 - Not require</h3><ul><li>Link: <a href="http://www.gradoffice.caltech.edu/admissions/checklist" target="_blank" rel="noopener">http://www.gradoffice.caltech.edu/admissions/checklist</a></li></ul><p>Not require</p><h3 id="GRE-Conflict"><a href="#GRE-Conflict" class="headerlink" title="GRE - Conflict"></a>GRE - Conflict</h3><ul><li>Link: <a href="https://cms.caltech.edu/academics/grad" target="_blank" rel="noopener">https://cms.caltech.edu/academics/grad</a></li></ul><p>Required proof - 从院校网站 - 201907更新</p><blockquote><p>Yes. GRE scores are required, with a subject test of the student’s choice strongly recommended. It is strongly recommended that applicants take the GRE in September to allow enough time for Caltech to receive the scores by December. </p><img src="/2018/selection/Selection-ExImportant/caltech_compare.png" title="test"><p><img src="/home/shaokang/Desktop/selection/caltech_compare.png" alt></p></blockquote><ul><li>Link: <a href="http://www.gradoffice.caltech.edu/admissions/checklist" target="_blank" rel="noopener">http://www.gradoffice.caltech.edu/admissions/checklist</a></li></ul><p>Not Required proof - 从学校网站 - 2020 3月更新</p><blockquote><p>GRE tests (general and advanced subject) are not required and in most options scores will not be considered for admission. (Revised Mar 2020)</p></blockquote><h2 id="康奈尔"><a href="#康奈尔" class="headerlink" title="康奈尔"></a><a href="https://www.cs.cornell.edu/" target="_blank" rel="noopener">康奈尔</a></h2><div class="table-container"><table><thead><tr><th>DDL:</th><th>January 1st</th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td>computer science</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td><a href="mailto:cs-ms@cornell.edu?subject=MS Webpage Inquiry" target="_blank" rel="noopener">cs-ms@cornell.edu</a></td></tr><tr><td>Application:</td><td><a href="https://gradschool.cornell.edu/admissions/apply/apply-now/" target="_blank" rel="noopener">https://gradschool.cornell.edu/admissions/apply/apply-now/</a></td><td>Description:</td><td><a href="https://www.cs.cornell.edu/ms/admissions" target="_blank" rel="noopener">https://www.cs.cornell.edu/ms/admissions</a></td></tr></tbody></table></div><h3 id="项目-3"><a href="#项目-3" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link: <a href="https://www.cs.cornell.edu/ms/admissions/applicant-faq" target="_blank" rel="noopener">https://www.cs.cornell.edu/ms/admissions/applicant-faq</a></li></ul><p>MS招生规模极小</p><blockquote><p>However, the MS program only admits students who have excelled as undergraduate TAs and who have a demonstrated propensity for independent research. Compared to the MEng program (about 100 students) the MS program is much smaller. There will typically be about 10-15 MS students at any one time; meaning admitting a class size of 7-8 students per year.</p></blockquote><p>MS和PHD完全分开，分开申请：</p><blockquote><p>The CS MS is <strong>not</strong> considered a stepping stone to the Cornell CS PhD program. Undergraduates who are interested in PhD work at Cornell are better off applying to that program directly. However, we are aware that there will be MS students who discover after a semester or two that what they really want is a PhD. By taking rigorous courses and writing a strong Master’s thesis it is possible to put together a strong PhD application during the second year of study as an MS student.</p><p>Students who apply to our PhD program but are denied admission are welcome to apply to either the MS or MENG programs as long as that program is still accepting applications. Please check your second choice program deadlines since often they are similar to our program. Please email the <a href="mailto:cs-ms@cornell.edu" target="_blank" rel="noopener">MS program</a> to request that your application be reviewed by the PhD Program.</p></blockquote><h3 id="英语-Conflict"><a href="#英语-Conflict" class="headerlink" title="英语 - Conflict"></a>英语 - Conflict</h3><ul><li>Link: <a href="https://www.cs.cornell.edu/ms/admissions" target="_blank" rel="noopener">https://www.cs.cornell.edu/ms/admissions</a></li></ul><blockquote><p>Non-native English speakers are required to take the TOEFL or IELTS. TOEFL Scores on the Writing, Listening, and Reading components must be 24 or higher and 28 or higher for the Speaking component. IELTS scores must be 7.0 or higher.</p></blockquote><p><mark>此处有问题：学校层面可以waive，cs未说他们waive条件</mark></p><h3 id="GRE-Recommend"><a href="#GRE-Recommend" class="headerlink" title="GRE - Recommend"></a>GRE - Recommend</h3><ul><li>Link: <a href="https://www.cs.cornell.edu/ms/admissions" target="_blank" rel="noopener">https://www.cs.cornell.edu/ms/admissions</a></li></ul><blockquote><p>It is recommended that all applicants (except current Cornell undergraduates) take the GRE general test. </p></blockquote><h3 id="Other-req"><a href="#Other-req" class="headerlink" title="Other req:"></a>Other req:</h3><p>(b) three letters of recommendation including at least one that addresses expository skills and the ability to work in a classroom setting, and (c) an essay that explains how the degree program and the anticipated thesis area resonates with your career plans. </p><h3 id="PHD"><a href="#PHD" class="headerlink" title="PHD"></a>PHD</h3><ul><li>Link: <a href="https://www.cs.cornell.edu/phd/admissions#application" target="_blank" rel="noopener">https://www.cs.cornell.edu/phd/admissions#application</a></li><li>DDL: December 15th</li></ul><p>GRE is recommended but not required. TOEFL can be waived. </p><p>Any additional materials beyond those above, such as research paper manuscripts, may be uploaded to the online application system as “writing samples”. </p><h2 id="普林斯顿"><a href="#普林斯顿" class="headerlink" title="普林斯顿"></a>普林斯顿</h2><div class="table-container"><table><thead><tr><th>DDL:</th><th><strong>December 15, 2020</strong></th><th>Start:</th><th></th></tr></thead><tbody><tr><td>Dept:</td><td>Dept of CS</td><td></td><td></td></tr><tr><td>Full name:</td><td></td><td>Contact:</td><td></td></tr><tr><td>Application:</td><td><a href="https://gradschool.princeton.edu/admission/applying-princeton/apply" target="_blank" rel="noopener">https://gradschool.princeton.edu/admission/applying-princeton/apply</a></td><td>Description:</td><td><a href="https://gradschool.princeton.edu/admission/applying-princeton/apply" target="_blank" rel="noopener">https://gradschool.princeton.edu/admission/applying-princeton/apply</a></td></tr></tbody></table></div><h3 id="项目-4"><a href="#项目-4" class="headerlink" title="项目:"></a>项目:</h3><ul><li>Link: <a href="https://www.cs.princeton.edu/grad/degrees" target="_blank" rel="noopener">https://www.cs.princeton.edu/grad/degrees</a></li></ul><p>Ph.D. 5 years, M.S.E. 2 years</p><p>Applicants are required to select a <strong>subplan</strong> when applying. 未找到subplan定义</p><p>研究生是Master of Science in Engeneering, 但由CS培养，在第一学期末选择论文方向即可。不可直接对接PHD，需重新申请</p><blockquote><img src="/2018/selection/Selection-ExImportant/screencapture-www-cs-princeton-edu-grad-degrees-1600267279438.png" title="test"><p><img src="/home/shaokang/Desktop/selection/screencapture-www-cs-princeton-edu-grad-degrees-1600267279438.png" alt></p></blockquote><h3 id="英语-Not-Required-1"><a href="#英语-Not-Required-1" class="headerlink" title="英语 - Not Required"></a>英语 - Not Required</h3><ul><li>Link: </li></ul><blockquote><p>All international applicants whose native language is not English and who have not received their complete undergraduate education in a college or university where English is the native language, must submit scores from either TOEFL or IELTS. </p></blockquote><h3 id="GRE-Optional"><a href="#GRE-Optional" class="headerlink" title="GRE - Optional"></a>GRE - Optional</h3><ul><li>Link: <a href="https://www.cs.princeton.edu/grad/admissions-requirements" target="_blank" rel="noopener">https://www.cs.princeton.edu/grad/admissions-requirements</a></li></ul><blockquote><p>The GRE general exam is optional for the December 15, 2020 application deadline. The exam should be taken no later than October (paper-based) or December (computer-based). Our school code is 2672. No department code is required.</p></blockquote><ul><li>Link: <a href="https://gradschool.princeton.edu/prerequisite-tests" target="_blank" rel="noopener">https://gradschool.princeton.edu/prerequisite-tests</a></li><li><a href="https://gradschool.princeton.edu/gre-requirements-department" target="_blank" rel="noopener">https://gradschool.princeton.edu/gre-requirements-department</a></li></ul><blockquote><p><strong>Optional/Not Required:</strong> Applicants are not required to submit GRE scores as part of the application requirements for the department or program to which they are applying. If scores are submitted by an applicant, they may be reviewed as part of the admission review process. Applicants who do not submit scores will not be put at a disadvantage.  </p><p>Optional/Not required (Changed for fall 2021)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> selection </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Website for CS100 project</title>
      <link href="/2017/projects/Website%20for%20CS100%20project/"/>
      <url>/2017/projects/Website%20for%20CS100%20project/</url>
      
        <content type="html"><![CDATA[<h3 id="Hatefate-website-application-deployed"><a href="#Hatefate-website-application-deployed" class="headerlink" title="Hatefate website application deployed"></a>Hatefate website application deployed</h3><p>The website made by me for my CS100 project has been deployed and works normally at <a href="https://hatefate.azurewebsites.net" target="_blank" rel="noopener">This Website</a>. In webpage browser is at bottom.</p><p>Source code is at <a href="https://github.com/ShaokangJiang/CS100Website" target="_blank" rel="noopener">This Github Page</a></p><p>This is a website made by using SQL as database and <a href="https://materializecss.com/" target="_blank" rel="noopener">Material Theme</a> as layout. </p><p>Function included: login via email, login via account name, register, reset password via email, set your favorites, and find people who has the same favorites as you. </p><p>Due to the reason that the domain(huangsk100.me) was expired. This website is for demo only right now. For testing, test account information is as follows:<a id="more"></a> </p><table class="highlight1">    <tr>        <td>Username</td>        <td>Password</td>        <td>Email</td>    </tr>    <tr>        <td>test</td>        <td>123456</td>        <td>123456@example.com</td>    </tr>    <tr>        <td>test01</td>        <td>123456</td>        <td>test01@example.com</td>    </tr>    <tr>        <td>test02</td>        <td>123456</td>        <td>test02@example.com</td>    </tr></table><p>Here is the map for this website:Some functions didn’t implement. </p><p><img src="https://github.com/ShaokangJiang/CS100Website/raw/master/wesite%20(2" alt=" ">.png)</p><p>The in-browser demo:</p><iframe src="https://hatefate.azurewebsites.net" width="100%" height="500"></iframe>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
