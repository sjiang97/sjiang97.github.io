<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Actively updating</title>
      <link href="/2021/Actively-updating/"/>
      <url>/2021/Actively-updating/</url>
      
        <content type="html"><![CDATA[<p>This website is actively updating, assuming more stuff coming out recently.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Financial organization phone app - stage 2</title>
      <link href="/2021/projects/Financial-organization-phone-app-stage-2/"/>
      <url>/2021/projects/Financial-organization-phone-app-stage-2/</url>
      
        <content type="html"><![CDATA[<p>In addition to <a href="https://shaokang.ga/2020/Financial-organization-phone-application/">Stage 1 of this app</a>, Stage 2 is a voice interaction app based on locally trained natural language processing model by using <a href="https://github.com/axa-group/nlp.js/" target="_blank" rel="noopener">Nlp.js</a> and voice recognition by using ibm waston cloud. Due to compatibility, limitation in testing, privacy issue, the published version only contain chat feature using which user is able to add items to their lists. Chat robot will communicate with user in multiple rounds and extract related information to add to the existed lists. This app is built on Expo managed workflow and thus has cross-platform support. The future published version will integrate Tensorflow and using float32array to run locally train and run voice recognition. Dark and light theme is following user’s system default. This app is done solely on me. More details come below:</p><a id="more"></a><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><p>In addition to <a href="https://shaokang.ga/2020/Financial-organization-phone-application/">Stage 1 of this app</a>, just click add float button and select the mic sign. After waiting a moment,</p><h3 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h3><p>Click <a href="https://github.com/ShaokangJiang/CapitalTwo-Financial" target="_blank" rel="noopener">here</a> for source code.</p><p>Click <a href="https://expo.io/@huangsk100/projects/CapitalTwo-Financial" target="_blank" rel="noopener">here</a> for an expo runable version</p><p><a href="#">Download Apk for android</a></p><p><a href="#">Download for ios</a></p><h3 id="compile-from-source"><a class="markdownIt-Anchor" href="#compile-from-source"></a> Compile from source</h3><p>To compile and run locally:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ShaokangJiang/CapitalTwo-Financial.git</span><br><span class="line"><span class="built_in">cd</span> CapitalTwo-Financial</span><br><span class="line">npm install</span><br><span class="line">expo install</span><br><span class="line">expo start</span><br></pre></td></tr></table></figure><p>And use our phone to scan the QR code on screen.</p><h3 id="entity-extraction"><a class="markdownIt-Anchor" href="#entity-extraction"></a> Entity extraction</h3><p>Entity information, like amount, title, etc, are extracted from the communication between you and the machine. Because of the benefit of locally trained model, the specific spending and expense categories are added as enum and thus able to be extracted as well. User just need to answer questions machine asked, and everything would be on set. Detailed syntax to do this:</p><p>Future version might contain store name extraction based on context.</p><h3 id="future-stages"><a class="markdownIt-Anchor" href="#future-stages"></a> Future stages</h3>]]></content>
      
      
      <categories>
          
          <category> Expo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Simple Chat App</title>
      <link href="/2021/projects/Simple-Chat-App/"/>
      <url>/2021/projects/Simple-Chat-App/</url>
      
        <content type="html"><![CDATA[<p>This is an robot chat app based on locally trained natural language processing model by using <a href="https://github.com/axa-group/nlp.js/" target="_blank" rel="noopener">Nlp.js</a>. It could answer questions in different situations and is able to run and answer questions based on context totally locally. Due to the limitation of the local dataset, it can only understand a limited number of phrase. It is still a good app to chat with. In each run, you can also choose to save history chat or not and choose to extract entity information or not. So, it is also a good app to see what a phrase will happen in react native version of Nlp.js in expo. Dark and light theme is following user’s system default. This app is done solely by me.</p><a id="more"></a><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><p>Turn on the switcher to enable and show the extracted information, Press save button to save communication, which will be loaded by app in your next initiation.</p><h3 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h3><p>Click <a href="https://github.com/ShaokangJiang/Chat-Interface" target="_blank" rel="noopener">here</a> for source code.</p><p>Click <a href="https://expo.io/@huangsk100/projects/Chat-Interface" target="_blank" rel="noopener">here</a> for an expo runable version.</p><p><a href="#">Download Apk for android</a></p><p><a href="#">Download for ios</a></p><h3 id="compile-from-source"><a class="markdownIt-Anchor" href="#compile-from-source"></a> Compile from source</h3><p>To compile and run locally:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ShaokangJiang/Chat-Interface.git</span><br><span class="line"><span class="built_in">cd</span> CapitalTwo-Financial</span><br><span class="line">npm install</span><br><span class="line">expo install</span><br><span class="line">expo start</span><br></pre></td></tr></table></figure><p>And use our phone to scan the QR code on screen.</p><h3 id="information-extract"><a class="markdownIt-Anchor" href="#information-extract"></a> Information Extract</h3>]]></content>
      
      
      <categories>
          
          <category> Expo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nlp.js in Expo usage</title>
      <link href="/2021/Nlp-js-in-Expo-usage/"/>
      <url>/2021/Nlp-js-in-Expo-usage/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Publication for Financial website</title>
      <link href="/2020/projects/Publication-of-Financial-website/"/>
      <url>/2020/projects/Publication-of-Financial-website/</url>
      
        <content type="html"><![CDATA[<p>This is a serverless web application. By utilizing <a href="https://workers.cloudflare.com/" target="_blank" rel="noopener">Cloudflare worker</a>, similar to edge computing, and personal effort, a constraint distributed structure with fast response time and availability is produced. The making of Financial website is actually led by me. The core part, including design, connection between different components, Devop structures, lots of coding, are done by me. Other people’s attribution, including contribution on knowledge passage content, useful tools, quiz generation and verification, are also important. We follow up the Business Agility and use JIRA to do weekly jobs and finish this product in 8 weeks. This is the product being produced based on <a href="https://shaokang.ga/2020/Capstone-prooject-design-specification-v0-1/">Design specification by me</a>, most parts stay the same as design. The website contains knowledge from cross area and utilize knowledge including data representation, prediction, interactive design, interacting with phone app. More details regarding to benefits and incomparable feature could be saw below:</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>a dialog flow app</title>
      <link href="/2020/a-dialog-flow-app/"/>
      <url>/2020/a-dialog-flow-app/</url>
      
        <content type="html"><![CDATA[<p>And I will discuss personal thinkings about dialogflow at last.</p><p>This is a course assignment done solely by me.</p><a id="more"></a><p>The entire source code:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; WebhookClient &#125; = <span class="built_in">require</span>(<span class="string">'dialogflow-fulfillment'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">'node-fetch'</span>)</span><br><span class="line"><span class="keyword">const</span> base64 = <span class="built_in">require</span>(<span class="string">'base-64'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> username = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> password = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> token = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> products;</span><br><span class="line"><span class="keyword">let</span> filtered;</span><br><span class="line"></span><br><span class="line">USE_LOCAL_ENDPOINT = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// set this flag to true if you want to use a local endpoint</span></span><br><span class="line"><span class="comment">// set this flag to false if you want to use the online endpoint</span></span><br><span class="line">ENDPOINT_URL = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> (USE_LOCAL_ENDPOINT) &#123;</span><br><span class="line">  ENDPOINT_URL = <span class="string">"http://127.0.0.1:5000"</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  ENDPOINT_URL = <span class="string">"https://mysqlcs639.cs.wisc.edu"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fetch(ENDPOINT_URL + <span class="string">'/products'</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json()).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> data.products) &#123;</span><br><span class="line">    fetch(ENDPOINT_URL + <span class="string">'/products/'</span> + i.id + <span class="string">"/tags"</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json()).then(<span class="function"><span class="params">data1</span> =&gt;</span> &#123;</span><br><span class="line">      i[<span class="string">"tags"</span>] = data1.tags;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  products = data</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">navigation</span>(<span class="params">back, dialogflow, page</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> request;</span><br><span class="line">  <span class="keyword">if</span> (page === <span class="literal">null</span>) &#123;</span><br><span class="line">    request = &#123;</span><br><span class="line">      method: <span class="string">'PUT'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;,</span><br><span class="line">      body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="string">"back"</span>: back,</span><br><span class="line">        <span class="string">"dialogflowUpdated"</span>: dialogflow</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    request = &#123;</span><br><span class="line">      method: <span class="string">'PUT'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;,</span><br><span class="line">      body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="string">"back"</span>: back,</span><br><span class="line">        <span class="string">"dialogflowUpdated"</span>: dialogflow,</span><br><span class="line">        <span class="string">"page"</span>: <span class="string">"/"</span> + page</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> serverReturn1 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application'</span>, request)</span><br><span class="line">  <span class="keyword">const</span> serverResponse1 = <span class="keyword">await</span> serverReturn1.json()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getToken</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> request = &#123;</span><br><span class="line">    method: <span class="string">'GET'</span>,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">      <span class="string">'Authorization'</span>: <span class="string">'Basic '</span> + base64.encode(username + <span class="string">':'</span> + password)</span><br><span class="line">    &#125;,</span><br><span class="line">    redirect: <span class="string">'follow'</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> serverReturn = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/login'</span>, request)</span><br><span class="line">  <span class="keyword">if</span> (serverReturn.ok) &#123;</span><br><span class="line">    <span class="keyword">const</span> serverResponse = <span class="keyword">await</span> serverReturn.json()</span><br><span class="line">    token = serverResponse.token</span><br><span class="line"></span><br><span class="line">    request = &#123;</span><br><span class="line">      method: <span class="string">'PUT'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;,</span><br><span class="line">      body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="string">"back"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"dialogflowUpdated"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"page"</span>: <span class="string">"/"</span> + username</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> serverReturn2 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/messages'</span>, &#123;</span><br><span class="line">      method: <span class="string">'DELETE'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    serverReturn2.json()</span><br><span class="line"></span><br><span class="line">    addUserMessage(message);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> serverReturn1 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application'</span>, request)</span><br><span class="line">    <span class="keyword">const</span> serverResponse1 = <span class="keyword">await</span> serverReturn1.json()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//console.log(products)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    username = <span class="string">""</span>;</span><br><span class="line">    password = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">addUserMessage</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> serverReturn2 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/messages'</span>, &#123;</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">      <span class="string">'x-access-token'</span>: token</span><br><span class="line">    &#125;,</span><br><span class="line">    body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">      <span class="string">"isUser"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"date"</span>: <span class="keyword">new</span> <span class="built_in">Date</span>().toISOString(),</span><br><span class="line">      <span class="string">"text"</span>: user</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> serverReturn2.json()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">addAgentMessage</span>(<span class="params">agent</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> serverReturn2 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/messages'</span>, &#123;</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">      <span class="string">'x-access-token'</span>: token</span><br><span class="line">    &#125;,</span><br><span class="line">    body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">      <span class="string">"isUser"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"date"</span>: <span class="keyword">new</span> <span class="built_in">Date</span>().toISOString(),</span><br><span class="line">      <span class="string">"text"</span>: agent</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> serverReturn2.json()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; res.send(<span class="string">'online'</span>))</span><br><span class="line">app.post(<span class="string">'/'</span>, express.json(), (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> agent = <span class="keyword">new</span> WebhookClient(&#123; <span class="attr">request</span>: req, <span class="attr">response</span>: res &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">welcome</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    agent.add(<span class="string">'Webhook works!'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(ENDPOINT_URL)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//console.log(products.products[0].tags);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) !== <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line">      agent.add(<span class="string">"You have logged in as "</span> + username);</span><br><span class="line">      <span class="keyword">await</span> addAgentMessage(<span class="string">"You have logged in as "</span> + username);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// You need to set this from `username` entity that you declare in DialogFlow</span></span><br><span class="line">    username = agent.parameters.username;</span><br><span class="line">    <span class="comment">// You need to set this from password entity that you declare in DialogFlow</span></span><br><span class="line">    password = agent.parameters.password;</span><br><span class="line">    <span class="keyword">await</span> getToken(agent.query);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      agent.add(<span class="string">"login failed, try again with login"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Successfully logged in as "</span> + username);</span><br><span class="line">      addAgentMessage(<span class="string">"Successfully logged in as "</span> + username);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">loginStatus</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">Math</span>.random() &gt; <span class="number">0.5</span>)</span><br><span class="line">        agent.add(<span class="string">"You are not logged in. "</span>);</span><br><span class="line">      <span class="keyword">else</span> agent.add(<span class="string">"Please log in at first"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">Math</span>.random() &lt; <span class="number">0.3</span>) &#123;</span><br><span class="line">        agent.add(<span class="string">"You are "</span> + username);</span><br><span class="line">        <span class="keyword">await</span> addAgentMessage(<span class="string">"You are "</span> + username);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">Math</span>.random() &lt; <span class="number">0.6</span>) &#123;</span><br><span class="line">        agent.add(<span class="string">"You username is "</span> + username);</span><br><span class="line">        <span class="keyword">await</span> addAgentMessage(<span class="string">"You username is "</span> + username);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        agent.add(<span class="string">"Hello, "</span> + username);</span><br><span class="line">        <span class="keyword">await</span> addAgentMessage(<span class="string">"Hello, "</span> + username);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">queryCategories</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(agent.parameters.category);</span></span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line">    <span class="keyword">await</span> navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/"</span> + agent.parameters.category);</span><br><span class="line">    filtered = [];</span><br><span class="line">    <span class="keyword">let</span> k = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> products.products) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i.category.localeCompare(agent.parameters.category) === <span class="number">0</span>) &#123;</span><br><span class="line">        filtered.push(i);</span><br><span class="line">        k.push(i.name)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    agent.add(<span class="string">"I found "</span> + k.length === <span class="number">0</span> ? <span class="string">"nothing"</span> : k.toString() + <span class="string">" belongs to "</span> + agent.parameters.category)</span><br><span class="line">    addAgentMessage(<span class="string">"I found "</span> + k.length === <span class="number">0</span> ? <span class="string">"nothing"</span> : k.toString() + <span class="string">" belongs to "</span> + agent.parameters.category);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">filterTags</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/tags/'</span> + agent.parameters.tags, &#123;</span><br><span class="line">      method: <span class="string">'POST'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">await</span> serve.json()</span><br><span class="line">    <span class="keyword">if</span> (serve.ok) &#123;</span><br><span class="line">      <span class="keyword">let</span> k = <span class="string">" "</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> filtered) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i.tags.indexOf(agent.parameters.tags) !== <span class="number">-1</span>) &#123;</span><br><span class="line">          k += i.name + <span class="string">", "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      agent.add(<span class="string">"Successfully add tag "</span> + agent.parameters.tags + <span class="string">", filtered items: "</span> + k)<span class="comment">//need filter and return something here</span></span><br><span class="line">      addAgentMessage(<span class="string">"Successfully add tag "</span> + agent.parameters.tags + <span class="string">", filtered items: "</span> + k)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Unknown problem happened"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Unknown problem happened"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">clearTags</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query)</span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/tags'</span>, &#123;</span><br><span class="line">      method: <span class="string">'DELETE'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">await</span> serve.json()</span><br><span class="line">    <span class="keyword">if</span> (serve.ok) &#123;</span><br><span class="line">      <span class="keyword">let</span> k = <span class="string">" "</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> filtered) &#123;</span><br><span class="line">        k += i.name + <span class="string">", "</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      agent.add(<span class="string">"Successfully cleared all tags filters, current items are "</span> + k)</span><br><span class="line">      addAgentMessage(<span class="string">"Successfully cleared all tags filters, current items are "</span> + k)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Unknown problem happened"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Unknown problem happened"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">queryCategoryTag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query)</span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/tags'</span>, &#123;</span><br><span class="line">      method: <span class="string">'DELETE'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">await</span> serve.json()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (serve.ok) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">await</span> navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/"</span> + agent.parameters.category);</span><br><span class="line">      filtered = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> products.products) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i.category.localeCompare(agent.parameters.category) === <span class="number">0</span>) &#123;</span><br><span class="line">          filtered.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> serve1 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/tags/'</span> + agent.parameters.tags, &#123;</span><br><span class="line">        method: <span class="string">'POST'</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          <span class="string">'x-access-token'</span>: token</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">await</span> serve1.json()</span><br><span class="line">      <span class="keyword">if</span> (serve1.ok) &#123;</span><br><span class="line">        <span class="keyword">let</span> k = <span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> filtered) &#123;</span><br><span class="line">          <span class="keyword">if</span> (i.tags.indexOf(agent.parameters.tags) !== <span class="number">-1</span>) &#123;</span><br><span class="line">            k += i.name + <span class="string">", "</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        agent.add(<span class="string">"Successfully add tag "</span> + agent.parameters.tags + <span class="string">", filtered items: "</span> + k)<span class="comment">//need filter and return something here</span></span><br><span class="line">        addAgentMessage(<span class="string">"Successfully add tag "</span> + agent.parameters.tags + <span class="string">", filtered items: "</span> + k)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        agent.add(<span class="string">"Unknown problem happened"</span>);</span><br><span class="line">        addAgentMessage(<span class="string">"Unknown problem happened"</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Unknown problem happened"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Unknown problem happened"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">goBack</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query)</span><br><span class="line">    <span class="keyword">await</span> navigation(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">null</span>);</span><br><span class="line">    agent.add(<span class="string">"Go back successfully"</span>);</span><br><span class="line">    <span class="keyword">await</span> addAgentMessage(<span class="string">"Go back successfully"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">productRating</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> id;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> products.products) &#123;</span><br><span class="line">      <span class="keyword">if</span> (agent.parameters.product.indexOf(i.name) !== <span class="number">-1</span>) &#123;</span><br><span class="line">        id = i.id;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/products/'</span> + id + <span class="string">"/reviews"</span>)</span><br><span class="line">    <span class="keyword">let</span> reviews = <span class="keyword">await</span> serve.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (reviews.reviews.length !== <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//review exist</span></span><br><span class="line">      <span class="keyword">let</span> reviewText = [];</span><br><span class="line">      <span class="keyword">let</span> rating = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> reviews.reviews) &#123;</span><br><span class="line">        rating += i.stars;</span><br><span class="line">        <span class="keyword">if</span> (i.text.localeCompare(<span class="string">"&lt;Product Review Text&gt;"</span>) !== <span class="number">0</span>) &#123;</span><br><span class="line">          reviewText.push(<span class="string">"Title: "</span> + i.title)</span><br><span class="line">          reviewText.push(<span class="string">"Text: "</span> + i.text)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      agent.add(<span class="string">"This items has the average rating of "</span> + (rating / reviews.reviews.length).toFixed(<span class="number">2</span>) + <span class="string">". It also contains comments of the following: "</span> + reviewText.toString())</span><br><span class="line">      addAgentMessage(<span class="string">"This items has the average rating of "</span> + (rating / reviews.reviews.length).toFixed(<span class="number">2</span>) + <span class="string">". It also contains comments of the following: "</span> + reviewText.toString())</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Review do not exist"</span>)</span><br><span class="line">      addAgentMessage(<span class="string">"Review do not exist"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">viewProduct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> id;</span><br><span class="line">    <span class="keyword">let</span> catego;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> products.products) &#123;</span><br><span class="line">      <span class="keyword">if</span> (agent.parameters.product.toLocaleLowerCase().indexOf(i.name.toLocaleLowerCase()) !== <span class="number">-1</span>) &#123;</span><br><span class="line">        id = i.id;</span><br><span class="line">        catego = i.category;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/products/'</span> + id + <span class="string">"/reviews"</span>)</span><br><span class="line">    <span class="keyword">let</span> reviews = <span class="keyword">await</span> serve.json()</span><br><span class="line"></span><br><span class="line">    navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/"</span> + catego + <span class="string">"/products/"</span> + id)</span><br><span class="line">    agent.add(<span class="string">"Navigate you to "</span> + agent.parameters.product + <span class="string">"page"</span>)</span><br><span class="line">    addAgentMessage(<span class="string">"Navigate you to "</span> + agent.parameters.product + <span class="string">"page"</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">addProduct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> id = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (agent.parameters.product.localeCompare(<span class="string">""</span>) === <span class="number">0</span> || agent.parameters.product.toLocaleLowerCase().indexOf(<span class="string">"product"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="comment">//get info from page</span></span><br><span class="line">      <span class="keyword">const</span> serverReturn2 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/'</span>, &#123;</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          <span class="string">'x-access-token'</span>: token</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//page field</span></span><br><span class="line">      <span class="keyword">let</span> result = <span class="keyword">await</span> serverReturn2.json()</span><br><span class="line">      result = result.page.split(<span class="string">"/"</span>);</span><br><span class="line">      <span class="keyword">if</span> (result.length &gt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (result[result.length - <span class="number">2</span>].localeCompare(<span class="string">"products"</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="comment">//normal add</span></span><br><span class="line">          id = <span class="built_in">parseInt</span>(result[result.length - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          agent.add(<span class="string">"You are not in a product page"</span>);</span><br><span class="line">          addAgentMessage(<span class="string">"You are not in a product page"</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        agent.add(<span class="string">"You are not in a product page"</span>);</span><br><span class="line">        addAgentMessage(<span class="string">"You are not in a product page"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> toFind = agent.parameters.product.toLocaleLowerCase();</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> products.products) &#123;</span><br><span class="line">        <span class="keyword">let</span> tocompare = i.name.toLocaleLowerCase();</span><br><span class="line">        <span class="keyword">if</span> (toFind.indexOf(tocompare) !== <span class="number">-1</span>) &#123;</span><br><span class="line">          id = i.id;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (id === <span class="literal">null</span>) &#123;</span><br><span class="line">      agent.add(<span class="string">"Product name has problem"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Product name has problem"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//adding</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/products/'</span> + id, &#123;</span><br><span class="line">      method: <span class="string">'POST'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//page field</span></span><br><span class="line">    <span class="keyword">await</span> serve.json()</span><br><span class="line">    <span class="keyword">if</span> (serve.ok) &#123;</span><br><span class="line">      agent.add(<span class="string">"Successfully added 1 of "</span> + agent.parameters.product + <span class="string">" to your cart"</span>)</span><br><span class="line">      addAgentMessage(<span class="string">"Successfully added 1 of "</span> + agent.parameters.product + <span class="string">" to your cart"</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Failed with server problem"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Failed with server problem"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanCart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/products/'</span>, &#123;</span><br><span class="line">      method: <span class="string">'DELETE'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> serve.json()</span><br><span class="line">    <span class="keyword">if</span> (serve.ok) &#123;</span><br><span class="line">      agent.add(<span class="string">"Successfully cleaned your cart"</span>)</span><br><span class="line">      addAgentMessage(<span class="string">"Successfully cleaned your cart"</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Failed with server problem"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Failed with server problem"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">removeProduct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> id = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> products.products) &#123;</span><br><span class="line">      <span class="keyword">if</span> (agent.parameters.product.toLocaleLowerCase().indexOf(i.name.toLocaleLowerCase()) !== <span class="number">-1</span>) &#123;</span><br><span class="line">        id = i.id;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (id === <span class="literal">null</span>) &#123;</span><br><span class="line">      agent.add(<span class="string">"Product name has problem"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Product name has problem"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/products/'</span> + id, &#123;</span><br><span class="line">      method: <span class="string">'DELETE'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> serve.json()</span><br><span class="line">    <span class="keyword">if</span> (serve.ok) &#123;</span><br><span class="line">      agent.add(<span class="string">"Successfully removed 1 of "</span> + agent.parameters.product + <span class="string">" from your cart"</span>)</span><br><span class="line">      addAgentMessage(<span class="string">"Successfully removed 1 of "</span> + agent.parameters.product + <span class="string">" from your cart"</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      agent.add(<span class="string">"Failed with server problem"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Failed with server problem"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//use indexof for home at here, confirm can be directed only when viewCartDone = 1</span></span><br><span class="line">  <span class="comment">//   - `/&lt;username&gt;/cart` // Cart</span></span><br><span class="line">  <span class="comment">// - `/&lt;username&gt;/cart-review` // Cart Review</span></span><br><span class="line">  <span class="comment">// - `/&lt;username&gt;/cart-confirmed` </span></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">navigatePage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> findContent = agent.parameters.pages.toLocaleLowerCase();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"home"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      navigation(<span class="literal">false</span>, <span class="literal">true</span>, username)</span><br><span class="line">      agent.add(<span class="string">"Navigating you to home..."</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Navigating you to home..."</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"review"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/cart-review"</span>)</span><br><span class="line">      agent.add(<span class="string">"Navigating you to cart-review..."</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Navigating you to cart-review..."</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"confirm"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> serverReturn2 = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/'</span>, &#123;</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          <span class="string">'x-access-token'</span>: token</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//page field</span></span><br><span class="line">      <span class="keyword">let</span> result = <span class="keyword">await</span> serverReturn2.json()</span><br><span class="line">      result = result.page.split(<span class="string">"/"</span>);</span><br><span class="line">      <span class="keyword">if</span> (result.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (result[result.length - <span class="number">1</span>].localeCompare(<span class="string">"cart-review"</span>) === <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">          navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/cart-confirmed"</span>)</span><br><span class="line">          agent.add(<span class="string">"Navigating you to cart-confirmed..."</span>);</span><br><span class="line">          addAgentMessage(<span class="string">"Navigating you to cart-confirmed..."</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          agent.add(<span class="string">"You are not in a cart review page"</span>);</span><br><span class="line">          addAgentMessage(<span class="string">"You are not in a cart review page"</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        agent.add(<span class="string">"You are not in a cart review page"</span>);</span><br><span class="line">        addAgentMessage(<span class="string">"You are not in a cart review page"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"cart"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/cart"</span>)</span><br><span class="line">      agent.add(<span class="string">"Navigating you to cart..."</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Navigating you to cart..."</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">cartInfo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token.localeCompare(<span class="string">""</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//ensure user is logged in</span></span><br><span class="line">      agent.add(<span class="string">"Invalid visit, please login first"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> addUserMessage(agent.query);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> serve = <span class="keyword">await</span> fetch(ENDPOINT_URL + <span class="string">'/application/products/'</span>, &#123;</span><br><span class="line">      method: <span class="string">'GET'</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'x-access-token'</span>: token</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cart = <span class="keyword">await</span> serve.json();</span><br><span class="line">    cart = cart.products;</span><br><span class="line">    navigation(<span class="literal">false</span>, <span class="literal">true</span>, username + <span class="string">"/cart"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> findContent = agent.parameters.cartInformation.toLocaleLowerCase();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"number"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> k = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">        k += i.count;</span><br><span class="line">      &#125;</span><br><span class="line">      agent.add(<span class="string">"You have "</span> + k + <span class="string">" items in your cart"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"You have "</span> + k + <span class="string">" items in your cart"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"cost"</span>) !== <span class="number">-1</span> || findContent.indexOf(<span class="string">"price"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> k = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">        k += i.count * i.price;</span><br><span class="line">      &#125;</span><br><span class="line">      agent.add(<span class="string">"Total price is "</span> + k.toFixed(<span class="number">2</span>) + <span class="string">" in your cart"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"Total price is "</span> + k.toFixed(<span class="number">2</span>) + <span class="string">" in your cart"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"type"</span>) !== <span class="number">-1</span>) &#123;<span class="comment">//assume to be category</span></span><br><span class="line">      <span class="keyword">let</span> k = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">        <span class="keyword">if</span> (k.indexOf(i.category) === <span class="number">-1</span>) &#123;</span><br><span class="line">          k.push(i.category);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      agent.add(<span class="string">"You have items belong to the following categories "</span> + k.length === <span class="number">0</span> ? <span class="string">"nothing"</span> : k.toString() + <span class="string">" in your cart"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"You have items belong to the following categories "</span> + k.length === <span class="number">0</span> ? <span class="string">"nothing"</span> : k.toString() + <span class="string">" in your cart"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (findContent.indexOf(<span class="string">"item"</span>) !== <span class="number">-1</span>) &#123;<span class="comment">//assume to be items name + count</span></span><br><span class="line">      <span class="keyword">let</span> k = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">        k.push(i.count + <span class="string">" of "</span> + i.name);</span><br><span class="line">      &#125;</span><br><span class="line">      agent.add(<span class="string">"You have items "</span> + k.length === <span class="number">0</span> ? <span class="string">"nothing"</span> : k.toString() + <span class="string">" in your cart"</span>);</span><br><span class="line">      addAgentMessage(<span class="string">"You have items "</span> + k.length === <span class="number">0</span> ? <span class="string">"nothing"</span> : k.toString() + <span class="string">" in your cart"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//entering default, all info</span></span><br><span class="line">    <span class="keyword">let</span> toSend = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">let</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">      k += i.count;</span><br><span class="line">    &#125;</span><br><span class="line">    toSend += <span class="string">"You have "</span> + k + <span class="string">" items in your cart "</span>;</span><br><span class="line"></span><br><span class="line">    k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">      k += i.count * i.price;</span><br><span class="line">    &#125;</span><br><span class="line">    toSend += <span class="string">"Total price is "</span> + k.toFixed(<span class="number">2</span>) + <span class="string">" in your cart "</span>;</span><br><span class="line"></span><br><span class="line">    k = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">      <span class="keyword">if</span> (k.indexOf(i.category) === <span class="number">-1</span>) &#123;</span><br><span class="line">        k.push(i.category);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    toSend += <span class="string">"You have items belong to the following categories "</span> + k.toString() + <span class="string">" in your cart"</span>;</span><br><span class="line"></span><br><span class="line">    k = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> cart) &#123;</span><br><span class="line">      k.push(i.count + <span class="string">" of "</span> + i.name);</span><br><span class="line">    &#125;</span><br><span class="line">    toSend += <span class="string">"You have items "</span> + k.toString() + <span class="string">" in your cart"</span>;</span><br><span class="line"></span><br><span class="line">    agent.add(toSend);</span><br><span class="line">    addAgentMessage(toSend);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> intentMap = <span class="keyword">new</span> <span class="built_in">Map</span>()</span><br><span class="line">  intentMap.set(<span class="string">'Default Welcome Intent'</span>, welcome)</span><br><span class="line">  <span class="comment">// You will need to declare this `Login` content in DialogFlow to make this work</span></span><br><span class="line"></span><br><span class="line">  intentMap.set(<span class="string">'LoginStatus'</span>, loginStatus)</span><br><span class="line">  intentMap.set(<span class="string">'login'</span>, login)</span><br><span class="line">  intentMap.set(<span class="string">'queryCategories'</span>, queryCategories)</span><br><span class="line">  intentMap.set(<span class="string">'filterTags'</span>, filterTags)</span><br><span class="line">  intentMap.set(<span class="string">'clearTags'</span>, clearTags)</span><br><span class="line">  intentMap.set(<span class="string">'queryCategoryTag'</span>, queryCategoryTag)</span><br><span class="line">  intentMap.set(<span class="string">'goBack'</span>, goBack)</span><br><span class="line">  intentMap.set(<span class="string">'productRating'</span>, productRating)</span><br><span class="line">  intentMap.set(<span class="string">'viewProduct'</span>, viewProduct)</span><br><span class="line">  intentMap.set(<span class="string">'addProduct'</span>, addProduct)</span><br><span class="line">  intentMap.set(<span class="string">'cleanCart'</span>, cleanCart)</span><br><span class="line">  intentMap.set(<span class="string">'removeProduct'</span>, removeProduct)</span><br><span class="line">  intentMap.set(<span class="string">'removeProduct'</span>, removeProduct)</span><br><span class="line">  intentMap.set(<span class="string">'navigatePage'</span>, navigatePage)</span><br><span class="line">  intentMap.set(<span class="string">'cartInfo'</span>, cartInfo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  agent.handleRequest(intentMap)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(process.env.PORT || <span class="number">8080</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Build Cloudflare worker with endpoint</title>
      <link href="/2020/Build-Cloudflare-worker-with-endpoint/"/>
      <url>/2020/Build-Cloudflare-worker-with-endpoint/</url>
      
        <content type="html"><![CDATA[<p>Cloudflare worker is a serverless application based on v9 engine. The structure is a little bit different than the Node.js. Endpoints is familiar to most people in developing. But this seems to be different on worker. And it is useful especially when different services is running in the same worker. This one will show how to integrate traditional endpoint feature on cloudflare worker to likely have a fake endpoint handler.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Financial organization phone app - stage 1</title>
      <link href="/2020/Financial-organization-phone-application/"/>
      <url>/2020/Financial-organization-phone-application/</url>
      
        <content type="html"><![CDATA[<p>This is an app provide a easy to use interface to help user organize their spendings/earning and see a summary and guidance by visiting yearly budgeting tool on capitaltwo’s tools page, which will generate those results based on user’s history spending and provide user guidance about their future spending. User is able to provide an importance level to each future spending to guide system which item should be fulfilled at first. System will also intelligently detect user’s past earning and spending and ensure user’s future spending/earning include those fixed monthly/bi-monthly income/expense. Everything is done locally without risk of leaking privacy information. The stage 1 of the app provide a wonderful, easy to use interface and basic functionality, together with cross platform support, including android, ios. More details is in below. Dark and light theme is following user’s system default. This app is done solely by me.</p><a id="more"></a><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><p>Select past date for your spent or income, and select the future date for the stuff you planned. Expense and Income in a future date consider as whatever you plan to do or have, in a past date will be considered as whatever you have done. If an expense or income have a high occurence ratio, like exist &gt;50%, future income and expense will be calculated based on this. So, do not add recurring expense or income in a future date as they will be considered as extra income/plan to buy(like wishlist). And the order of expense category will be used to fulfill this wishlist in order.</p><p><strong>Categories:</strong> Expense is orderable, order is the importancec level, Income are all important</p><h3 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h3><p>Click <a href="https://github.com/CapitalTwo/CapitalTwo-Financial" target="_blank" rel="noopener">here</a> for source code.</p><p>Click <a href="https://expo.io/@huangsk100/projects/CapitalTwo-Financial" target="_blank" rel="noopener">here</a> for an expo runable version.</p><p><a href="https://github.com/CapitalTwo/CapitalTwo-Financial/releases/download/0.1.0/CapitalTwo-Financial-android.apk" target="_blank" rel="noopener">Download Apk for android</a></p><p><a href="https://github.com/CapitalTwo/CapitalTwo-Financial/releases/download/0.1.0/CapitalTwo-Financial-ios.tar.gz" target="_blank" rel="noopener">Download for ios</a></p><h3 id="compile-from-source"><a class="markdownIt-Anchor" href="#compile-from-source"></a> Compile from source</h3><p>To compile and run locally:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/CapitalTwo/CapitalTwo-Financial.git</span><br><span class="line"><span class="built_in">cd</span> CapitalTwo-Financial</span><br><span class="line">npm install</span><br><span class="line">expo install</span><br><span class="line">expo start</span><br></pre></td></tr></table></figure><p>And use our phone to scan the QR code on screen.</p><h3 id="span-classcard-titleyearly-budgeting-toolspan"><a class="markdownIt-Anchor" href="#span-classcard-titleyearly-budgeting-toolspan"></a> <span class="card-title">Yearly Budgeting Tool</span></h3><p>This Budgeting tools allows you to create a spending plan for your money and see your past spending more interactively, it ensures that you will have enough money for your top priorities which you can assign in the app. Budget plan will also keep you out of debt or help you work your<br>way out of debt if you currently in debt. Starting by adding some information in the next page.</p><h4 id="methods-behind-this"><a class="markdownIt-Anchor" href="#methods-behind-this"></a> Methods behind this</h4><p>User could type their money on each category or item with an importance level associated to it. With those information, we will solve it by using an optimization rules. User could choose either optimizing saving or optimizing consuming (maybe another word at here).</p><p>User will have choices to indicate if this is a one time purchase or not, like wishlist. Then we will make a plan to tell user when would be the best time to buy it. And in order to achieve this goal, what they should do in each month.</p><p>In this category, we will consider the saved money will be used in some low-risk investment, like 0.036 APR. The report generated would be the item should be bought at that month.</p><p>We could support up to 100 level of priority, but priority of 1 is the essential stuff, like housing, foods. Snacks might be in a lower priority.</p><h6 id="optimize-saving"><a class="markdownIt-Anchor" href="#optimize-saving"></a> Optimize saving</h6><blockquote><p>This is the method the website is using, though small modification is made basedd on this description. The website will calculate your history spending and get a expected income and expense in your future spending. But the core part of calculation is this.</p></blockquote><p>This process doesn’t require optimization, thought it could be used to reach this purpose. But it might be as easy as loop through the list and select all components that have a priority level of 1. Sample methods as below:</p><img src="/2020/Financial-organization-phone-application/alg1.png"><h6 id="optimize-consume"><a class="markdownIt-Anchor" href="#optimize-consume"></a> Optimize consume</h6><p>Define variables: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The amount of money that needs to be spent in different categories i in month j.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">L</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The priority level associate with each spending category, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>. It is the reverse of the original list done by user. Like for high priority stuff, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">L</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> will be high</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">I_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07847em">I</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07847em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The anticipated money in in each month.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The money available at the end of month J.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The binary selector to indicate this category should be selected or not in the month j.</p><p>A – The one month rate of buying some low-risk investment product.</p><p>O – Set including one time purchase, like wait list.</p><p>R – Set including repeating purchase.</p><p>Formula:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mtext><mi mathvariant="normal">M</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">z</mi><mi mathvariant="normal">e</mi><mtext> </mtext></mtext></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>R</mi><mo>∪</mo><mi>O</mi></mrow></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi></mrow><mrow><mn>1</mn><mn>2</mn></mrow></msubsup><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">t</mi><mtext> </mtext><mi mathvariant="normal">t</mi><mi mathvariant="normal">o</mi></mtext></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>n</mi></mrow></msubsup><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≤</mo><mi>A</mi><msub><mi>T</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>I</mi><mi>j</mi></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><msub><mi>T</mi><mrow><mi>j</mi></mrow></msub><mo>=</mo><mi>A</mi><msub><mi>T</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>n</mi></mrow></msubsup><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>+</mo><msub><mi>I</mi><mi>j</mi></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>O</mi></mrow></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi></mrow><mrow><mn>1</mn><mn>2</mn></mrow></msubsup><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>R</mi></mrow></msubsup><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn><mspace width="1em"></mspace><mi mathvariant="normal">∀</mi><mi>j</mi><mo>∈</mo><mo>{</mo><mn>1</mn><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mn>1</mn><mn>2</mn><mo>}</mo></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned} &amp; \text{Maxmize } &amp; \sum_{i}^{R\cup O}\sum_{j}^{12}L_{ij}S_{ij} \\ &amp; \text{Subject to} &amp; \sum_{i}^{n}P_{ij}S_{ij}\le AT_{j-1}+I_j \\ &amp; &amp; T_{j} = AT_{j-1} - \sum_{i}^{n}P_{ij}S_{ij} +I_j \\ &amp; &amp; \sum_{i}^{O}\sum_{j}^{12}S_{ij} = 1 \\ &amp; &amp; \sum_{i}^{R}S_{ij} = 1 \quad \forall j\in \{1...12\} \\ \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:8.5741815em"></span><span class="strut bottom" style="height:16.648363em;vertical-align:-8.0741815em"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-6.7458455em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:-3.6806714999999994em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:-.7516054999999988em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:2.3543995000000013em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:5.596512500000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:7.7141815em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-6.7458455em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">M</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">z</span><span class="mord mathrm">e</span><span class="mord mspace"> </span></span></span></span><span style="top:-3.6806714999999994em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">S</span><span class="mord mathrm">u</span><span class="mord mathrm">b</span><span class="mord mathrm">j</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span><span class="mord mathrm">t</span><span class="mord mspace"> </span><span class="mord mathrm">t</span><span class="mord mathrm">o</span></span></span></span><span style="top:-.7516054999999988em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span style="top:2.3543995000000013em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span style="top:5.596512500000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="arraycolsep" style="width:2em"></span><span class="col-align-r"><span class="vlist"><span style="top:-6.7458455em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.00773em">R</span><span class="mbin">∪</span><span class="mord mathit" style="margin-right:.02778em">O</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span style="top:-.000005000000000254801em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000005em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">L</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:-3.6806714999999994em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">≤</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:.07847em">I</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07847em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:-.7516054999999988em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:.07847em">I</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07847em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:2.3543995000000013em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.02778em">O</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span style="top:-.000005000000000254801em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000005em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span><span style="top:5.596512500000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.00773em">R</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mord mspace quad"></span><span class="mord mathrm">∀</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mopen">{</span><span class="mord mathrm">1</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">1</span><span class="mord mathrm">2</span><span class="mclose">}</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span></span></span></span></p><p>Though optimization might give us the optimal solution in complex cases, but it is also acceptable to use normal methods as shown below.</p><img src="/2020/Financial-organization-phone-application/alg2.png"><h3 id="next-stage"><a class="markdownIt-Anchor" href="#next-stage"></a> Next Stage</h3><p>By considering non-stable testing, the current version is the stable version and compatible to multiple different platforms. The future version of this app will contains future stuff, such as locally voice interaction to add stuff with local trained Natural language processing. And local trained command to handle nearly all functions this app is able to do.</p><p><a href="https://shaokang.ga/2021/projects/Financial-organization-phone-app-stage-2/">Stage two</a> is nearly published now, which is a stable and compatible to multiple different platforms version that user is able to add items using chats.</p>]]></content>
      
      
      <categories>
          
          <category> Expo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Sample interactive page</title>
      <link href="/2020/Sample-interactive-page/"/>
      <url>/2020/Sample-interactive-page/</url>
      
        <content type="html"><![CDATA[<p>Markdown is based on html, so whatever html have markdown can have, <a href="https://developer.mozilla.org/en-US/docs/web/html/element/iframe" target="_blank" rel="noopener"><code>&lt;iframe&gt;</code></a> is the most common one. I will show some example by using iframe below:</p><a id="more"></a><h3 id="map"><a class="markdownIt-Anchor" href="#map"></a> Map</h3><p>Use the following code to embedded a map:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"inlineFrameExample"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">title</span>=<span class="string">"Inline Frame Example"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">"100%"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">"500"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"https://www.openstreetmap.org/export/embed.html?bbox=-0.004017949104309083%2C51.47612752641776%2C0.00030577182769775396%2C51.478569861898606&amp;layer=mapnik"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Appearance:</p><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="500" src="https://www.openstreetmap.org/export/embed.html?bbox=-0.004017949104309083%2C51.47612752641776%2C0.00030577182769775396%2C51.478569861898606&layer=mapnik"></iframe><h3 id="youtube"><a class="markdownIt-Anchor" href="#youtube"></a> Youtube</h3><p>Use the following code to embedded a youtube, other video platform would have similar function. This is an example for <a href="https://www.youtube.com/watch?v=W6NZfCO5SIk" target="_blank" rel="noopener">JavaScript Tutorial for Beginners: Learn JavaScript in 1 Hour</a> :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"550"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/W6NZfCO5SIk"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">allow</span>=<span class="string">"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/Sample-interactive-page/youtube.gif" title="youtube"><p>Appearance:</p><iframe width="100%" height="550" src="https://www.youtube.com/embed/W6NZfCO5SIk" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="document"><a class="markdownIt-Anchor" href="#document"></a> Document</h3><p>Use the following code to embedded a microsoft document (you may get the link through your onedrive panel -&gt; Embed in your personal onedrive, other version/driver should have similar function). The following code would embed our schedule:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"500"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">src</span>=<span class="string">"https://onedrive.live.com/embed?resid=C4FE7ED776152B7%21179112&amp;authkey=%21AIBpqBFVsOqASe0&amp;em=2&amp;wdAllowInteractivity=False&amp;wdInConfigurator=True"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Appearance:</p><iframe width="100%" height="500" frameborder="0" scrolling="no" src="https://onedrive.live.com/embed?resid=C4FE7ED776152B7%21179112&authkey=%21AIBpqBFVsOqASe0&em=2&wdAllowInteractivity=False&wdInConfigurator=True"></iframe><h3 id="games"><a class="markdownIt-Anchor" href="#games"></a> Games</h3><p>To be more creative, you can even embedded some games, such as the following 3D games by using glitch using this code: Below code is for project <a href="https://github.com/aframevr/a-blast" target="_blank" rel="noopener">a-blast</a>. You may create your own on glitch or just on any website server and embed to here.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"500"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">src</span>=<span class="string">"https://aframe.io/a-blast/"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Appearance:</p><iframe width="100%" height="500" frameborder="0" scrolling="no" src="https://aframe.io/a-blast/"></iframe><h3 id="conslusion"><a class="markdownIt-Anchor" href="#conslusion"></a> Conslusion</h3><p>As markdown is based on html, there are much more areas could be explored. Be creative.</p>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Capstone project design specification</title>
      <link href="/2020/Capstone-prooject-design-specification-v0-1/"/>
      <url>/2020/Capstone-prooject-design-specification-v0-1/</url>
      
        <content type="html"><![CDATA[<p>This is a project done for capital one to teach college students about financial stuff. Below is the design specification and schedule done by me that the entire group follows at last, including tools in using, website structure. Refer to the Publication of Financial website to know the final product of this website. This app is done solely by me with improvement advice from group members. This design contains my experience from multiple sources in the past few years, the final product is intended to be a well-performances, useful, containing academic value product.<a id="more"></a></p><h1 id="general-idea"><a class="markdownIt-Anchor" href="#general-idea"></a> General idea</h1><h2 id="some-basic-agreement"><a class="markdownIt-Anchor" href="#some-basic-agreement"></a> Some basic agreement</h2><ul><li>The entire project would be a nearly serverless application, except some fundamental database part</li><li>Consistent of design: The theme for the entire project is using Material Design.</li><li>All quizzes come from a question bank. So less collision would happen.</li><li>User Login credential will be saved in local cache place temporary.</li><li>Majority of repeating code works should be done by programs</li><li>Privacy is a big issue, no part should integrate into collecting privacy information.</li></ul><h2 id="tools-recommend"><a class="markdownIt-Anchor" href="#tools-recommend"></a> Tools recommend</h2><p>The percentage stands for the percentage of work required. Following percetage is measured base on my experience. Written part is a little bit heavy as I do not like writting.</p><h5 id="markdown30"><a class="markdownIt-Anchor" href="#markdown30"></a> Markdown(30%)</h5><p>This might be the core part of the entire project. It contains the knowledge passage(3 points*10 topics=30 passages) we are going to provide to user. This part might also include some part of quiz questions design and the words in the homepage(our group description). If nobody knows Markdown, then Microsoft doc would be a good substitution but the entire work will be increased as we need to convert it to markdown. And it is also not good for keeping your copyright. Google doc is not really compatible with it, so it is not recommended.</p><h5 id="json20"><a class="markdownIt-Anchor" href="#json20"></a> JSON(20%)</h5><p>Quiz questions(30 passages*80 Questions/passage = 2400 Questions) and answers should be in JSON format. Do not be shocked by the quiz questions part, we could also generate some, see in part [quiz]. But this is still a large amount of work.</p><h5 id="javascript12"><a class="markdownIt-Anchor" href="#javascript12"></a> Javascript(12%)</h5><p>This will be needed in the stock simulation, the loan calculation, etc. It will calculate information provided and return user with the result.</p><h5 id="html7"><a class="markdownIt-Anchor" href="#html7"></a> HTML(7%)</h5><p>This part will include the page design of stock simulation, the loan calculation, etc.</p><h5 id="css1"><a class="markdownIt-Anchor" href="#css1"></a> CSS(1%)</h5><p>This part won’t need a lot of time. We might customize some CSS, but majority part of CSS comes from MaterilizeCss. Or other pre-defined library.</p><h5 id="javapythonjavascriptcc17"><a class="markdownIt-Anchor" href="#javapythonjavascriptcc17"></a> Java/Python/Javascript/C/C++(17%)</h5><p>This part include the work on the worker size, including providing different types of questions. The way of providing questions will be discussed in part [quiz]. In worker, you could select the language you want. But I would like to recommend Javascript. Because the other language will require you to use assembly to load code. You can read more at <a href="https://blog.cloudflare.com/webassembly-on-cloudflare-workers/" target="_blank" rel="noopener">here</a></p><h5 id="ejs6"><a class="markdownIt-Anchor" href="#ejs6"></a> Ejs(6%)</h5><p>ejs, a.k.a effective javascript, is the code that will be used to generate our knowledge passage. We have some pre-defined structure, but we do need to modify them to meet our needs. This part might take some time. Since I am not pretty familiar with it, 6% is just a rough estimate. But it won’t take too long because we only need to do some small modifications.</p><h5 id="microsoft-powerpointgoogle-slides2"><a class="markdownIt-Anchor" href="#microsoft-powerpointgoogle-slides2"></a> Microsoft Powerpoint/Google Slides(2%):</h5><p>We need to do some presentations throughout this semester. I prefre to use Powerpoint as it has some wonderful functions. But Google slide is also acceptable.</p><h5 id="csv2"><a class="markdownIt-Anchor" href="#csv2"></a> CSV(2%)</h5><p>Organize and report the data of stocks in stock simulation tool. We need 8 stocks*10 groups = 80 data pieces. See [stock] for more details.</p><h5 id="google-spreadsheetmicrosoft-excel1"><a class="markdownIt-Anchor" href="#google-spreadsheetmicrosoft-excel1"></a> Google Spreadsheet/Microsoft Excel(1%)</h5><p>Organize pass code, quiz code information.</p><h5 id="other2"><a class="markdownIt-Anchor" href="#other2"></a> Other(2%)</h5><p>In case I forget anything. And we do need time to design and choose right color, picture for each part in the website.</p><h5 id="statistic"><a class="markdownIt-Anchor" href="#statistic"></a> Statistic</h5><p>New(29%) Old(71%)</p><h2 id="techniquesoftware-recommend"><a class="markdownIt-Anchor" href="#techniquesoftware-recommend"></a> Technique/Software recommend</h2><p>Description comes from their official or wikipedia. Each paragraph title is clickable, it will bring you to a description page or download page. For most of programs, we do not need to install.</p><h5 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h5><p>A fast, simple &amp; powerful blog framework. Hexo is a fast, simple &amp; powerful blog framework powered by Node.js.</p><h5 id="cloudflare-worker"><a class="markdownIt-Anchor" href="#cloudflare-worker"></a> <a href="https://www.cloudflare.com/en-in/products/cloudflare-workers/" target="_blank" rel="noopener">Cloudflare Worker</a></h5><p>Cloudflare Workers lets developers deploy serverless JavaScript applications on Cloudflare’s global cloud network, where they are seamlessly scalable and closer to end users. Based on the Service Workers API, Workers receive events for every HTTP (S) request made to an application.</p><h5 id="gitpages"><a class="markdownIt-Anchor" href="#gitpages"></a> <a href="https://pages.github.com/" target="_blank" rel="noopener">Gitpages</a></h5><p>GitHub Pages are public webpages hosted and easily published through GitHub.</p><h5 id="typora"><a class="markdownIt-Anchor" href="#typora"></a> <a href="https://typora.io/" target="_blank" rel="noopener">Typora</a></h5><p>Typora allows you to manage your files easily, providing both file tree panel and articles (file list) side panel, allows you to manage your files easily. Organize your files your way, including putting in sync services, like Dropbox or iCloud.</p><h5 id="microsoft-powerpoint"><a class="markdownIt-Anchor" href="#microsoft-powerpoint"></a> <a href="https://www.microsoft.com/en-us/microsoft-365/powerpoint" target="_blank" rel="noopener">Microsoft Powerpoint</a></h5><p>Microsoft PowerPoint empowers you to create clean slide presentations and intricate pitch decks and gives you a powerful presentation maker to tell your story.</p><h5 id="cloudflare-cdn"><a class="markdownIt-Anchor" href="#cloudflare-cdn"></a> <a href="https://www.cloudflare.com/cdn/" target="_blank" rel="noopener">Cloudflare CDN</a></h5><p>The Cloudflare CDN is an content delivery network that uses next-gen tech to deliver a fast, reliable, CDN services.</p><h5 id="github-release"><a class="markdownIt-Anchor" href="#github-release"></a> <a href="https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#releases" target="_blank" rel="noopener">Github Release</a></h5><p>Releases are deployable software iterations you can package and make available for a wider audience to download and use.</p><h5 id="htmljs-pages"><a class="markdownIt-Anchor" href="#htmljs-pages"></a> <a href="https://en.wikipedia.org/wiki/HTML" target="_blank" rel="noopener">HTML+JS pages</a></h5><p>HTML is the standard markup language for Web pages. JavaScript, often abbreviated as JS, is a programming language that conforms to the ECMAScript specification.</p><h5 id="visual-studio-code"><a class="markdownIt-Anchor" href="#visual-studio-code"></a> <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">visual studio code</a></h5><p>Visual Studio Code is a code editor redefined and optimized for building and debugging modern web and cloud applications.</p><h5 id="livesever"><a class="markdownIt-Anchor" href="#livesever"></a> <a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer" target="_blank" rel="noopener">Livesever</a></h5><p>Launch a development local Server with live reload feature for static &amp; dynamic pages on visual studio code.</p><h5 id="git"><a class="markdownIt-Anchor" href="#git"></a> <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></h5><p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git is easy to learn and has a tiny footprint with lightning fast performance .</p><h5 id="notepad"><a class="markdownIt-Anchor" href="#notepad"></a> <a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">Notepad++</a></h5><p>Notepad++ is a free (as in “free speech” and also as in “free beer”) source code editor and Notepad replacement that supports several languages. Running in the MS Windows environment, its use is governed by GNU General Public License.</p><h5 id="google-spreadsheet"><a class="markdownIt-Anchor" href="#google-spreadsheet"></a> <a href="https://www.google.com/sheets/about/" target="_blank" rel="noopener">Google Spreadsheet</a></h5><p>Google Sheets is a spreadsheet program included as part of a free, web-based software office suite offered by Google within its Google Drive service.</p><h5 id="microsoft-excel"><a class="markdownIt-Anchor" href="#microsoft-excel"></a> <a href="https://www.microsoft.com/en-us/microsoft-365/excel" target="_blank" rel="noopener">Microsoft Excel</a></h5><p>Microsoft Excel is a spreadsheet developed by Microsoft for Windows, macOS, Android and iOS. It features calculation, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications.</p><blockquote><p>Hexo is actually based on Node.js. So, Node.js technically should be included.</p></blockquote><p>Different library in jvascript will be discussed in each section.</p><h2 id="suggest-roles"><a class="markdownIt-Anchor" href="#suggest-roles"></a> Suggest roles</h2><p>This part just states we need those role. It doesn’t mean each one take one job of this. We should work on each part together.</p><ul><li><p>Writer</p></li><li><p>Worker script</p></li><li><p>Designer</p></li><li><p>Speaker</p></li><li><p>Tool Implement</p></li></ul><h1 id="knowledge-passage"><a class="markdownIt-Anchor" href="#knowledge-passage"></a> Knowledge Passage</h1><h5 id="host"><a class="markdownIt-Anchor" href="#host"></a> Host</h5><p>This page will be hosted at a subsite, at <a href="http://knowledge.capitaltwo.ga" target="_blank" rel="noopener">knowledge.capitaltwo.ga</a>. Structure will be determined by Hexo + Material-X theme.</p><h5 id="naming-rule"><a class="markdownIt-Anchor" href="#naming-rule"></a> Naming rule</h5><p>The name of each passage file should be in words with dash in the middle between each two words. No white space or special character is permitted. For example, <code>How_to_do.md</code> is valid, <code>How to do.md</code> is not valid.</p><p>Final format of most of knowledge passage would be in Markdown format with valid yaml formatter. Each passage will be in one file. Each file have a yaml formatter.</p><h5 id="yaml-formatter"><a class="markdownIt-Anchor" href="#yaml-formatter"></a> yaml Formatter</h5><p>It likes a key value pair dictionary, each passage should at least have the following fields.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">parentTitle:</span> <span class="string">Crypto</span> <span class="comment">#parent title of this page, might be useful</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Tell</span> <span class="string">us</span> <span class="string">who</span> <span class="string">you</span> <span class="string">interviewed</span> <span class="comment">#Title or topic of this page, like intro to crypto, part 1</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">dev</span> <span class="comment">#The category, like cypto</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span> <span class="comment">#True means including menu</span></span><br><span class="line"><span class="attr">body:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">article</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">comments</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="bullet">-09</span><span class="bullet">-30</span> <span class="number">11</span><span class="string">:53:46</span></span><br><span class="line"><span class="attr">top:</span></span><br><span class="line"><span class="attr">keywords:</span> </span><br><span class="line"><span class="bullet">  -</span> <span class="string">Design</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Development</span> <span class="comment">#The category, like cypto</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment">#Tags, like primaey level, seondary level, or other good tag.</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Design</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p><span>Notice</span> Keys are caase sensitive. And three dash line in the front and the end should be included. In Typora, you can just type <code>—</code> and press <code>enter</code> to enter the front matter typing mode. In this mode, dash line in the front and the end should <strong>NOT</strong> be included as typora will do that for you.</p><h5 id="main-passage"><a class="markdownIt-Anchor" href="#main-passage"></a> Main Passage</h5><p>Main Passage will be in Markdown format. For the best experience of converting and user experience, Markdown is the best. Though Microsoft word and google doc is acceptable.</p><p>A short reference to useful command:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### aa &lt;!--Title, one more # means a lower level title--&gt;</span></span><br><span class="line"><span class="bullet">- </span>aa <span class="xml"><span class="comment">&lt;!--Unordered list--&gt;</span></span></span><br><span class="line"><span class="bullet">1. </span>aa <span class="xml"><span class="comment">&lt;!--ordered list--&gt;</span></span></span><br><span class="line">[<span class="string">something</span>](<span class="link">link</span>) <span class="xml"><span class="comment">&lt;!--Links --&gt;</span></span></span><br><span class="line">![](link) <span class="xml"><span class="comment">&lt;!--images, links required to be online source. Good imagebed would be Onedrive--&gt;</span></span></span><br><span class="line"><span class="code">`code`</span> <span class="xml"><span class="comment">&lt;!--Small field keyword highlighting--&gt;</span></span></span><br><span class="line"><span class="strong">**text**</span> <span class="xml"><span class="comment">&lt;!--Make text bold--&gt;</span></span></span><br><span class="line"><span class="emphasis">*text*</span> <span class="xml"><span class="comment">&lt;!--Make text in italian--&gt;</span></span></span><br><span class="line"><span class="quote">&gt; Reference &lt;!--Do a reference, large quota--&gt;</span></span><br></pre></td></tr></table></figure><p>You can also utilize HTML code in each markdown file to create multi-media document, just put HTML code to markdown file, then it will work, some common codes:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://docs.google.com/forms/d/e/1FAIpQLSeIQZNBcicL01lptHL_VDwL5u9KR6iDYFNE-ElCjMQ88VDBDQ/viewform?usp=sf_link"</span> <span class="attr">title</span>=<span class="string">"Questionnaires"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"450 pixels"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">mark</span>&gt;</span> <span class="comment">&lt;!--To highlight some words--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="quiz-reference"><a class="markdownIt-Anchor" href="#quiz-reference"></a> Quiz Reference</h2><p>If this passage is associated with a quiz, usually this is always true, you need also to include a unique quizpart code. It will be passed to quiz part. Each passage should have a unique code. The code doesn’t necessary to make sense in their word meaning. It could be a random word. I recommend for a higher security by using aes, which will be discussed in pointing system at [pointsys]. But it is not required at here. Because user might want to use the quiz without finishing the reading requirement.</p><p>To include a quizepart code, add following field to previous yaml:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">quizepart:</span> <span class="string">XXX</span> <span class="comment">#The quiz part code</span></span><br></pre></td></tr></table></figure><p>Except including those stuff, you also need to put the quizpart field to a shared google sheet/ Microsoft Excel.</p><h2 id="pointing-system"><a class="markdownIt-Anchor" href="#pointing-system"></a> Pointing System</h2><p>If this passage require user to finish a previous chapter, you then need to include the following field:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">password:</span> <span class="string">XXX</span> <span class="comment">#The encryption password.</span></span><br></pre></td></tr></table></figure><p>Except including those stuff, you also need to specify a securitynumber in a shared google sheet/ Microsoft Excel, which will be used to verificate user activity. And you also need to put the password field to this document.</p><h5 id="method-behind-this-finish-one-study"><a class="markdownIt-Anchor" href="#method-behind-this-finish-one-study"></a> Method behind this - finish one study</h5><p>Each passage with a previous reading requirement is associated with a securitynumber, a password, which are stored in the worker side. When a user finish a quiz, they could choose either go to next chapter directly(use local storage to store the credential text and go to the next page directly) or get a credential text directly, they could choose to copy the text or download as a txt file. To see code of downloading, refer to after quiz page at [afterquiz]. By saving it, they can use it and continue their study next time. The credential text is generated on worker and returned to client. It will be encrypted by a high level security code via AES-256 encryption, like Secret Passphrase. This phrase will be stored in the worker.</p><p><span>credential text</span></p><p>[name of current chapter], [the securitynumber], [Browser Identification String], [IP Address]</p><p>For sample code of this part, refer to [afterquiz].</p><p>The reason I choose this is that user will have the full control of their own data. So we are free of information storage risk and privacy concern. And we do not need to use cookies as well.</p><h5 id="method-behind-this-continue-their-study"><a class="markdownIt-Anchor" href="#method-behind-this-continue-their-study"></a> Method behind this - continue their study</h5><p>To continue their study using those credential, the main page and each page that require credential will have a window for them to upload their credential before continue. Once they upload, their text will be passed to worker to decrypt and worker will return an address for that passage for them to continue. Client will also be required to check the desired passage has a correct securitynumber, browser identification, IP address or not. Or if the worker code detect any cheating, worker will just return home page with an error message. Client js will then tell user those information.</p><p>The sample code for loading file:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputfile'</span>).addEventListener(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  <span class="keyword">var</span> fr=<span class="keyword">new</span> FileReader(); </span><br><span class="line">  fr.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">    <span class="comment">//do something with fr.result, here is one sample</span></span><br><span class="line">    <span class="comment">//pass to the server using fetch and see if correct information is provided</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'output'</span>).textContent=fr.result; </span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  fr.readAsText(<span class="keyword">this</span>.files[<span class="number">0</span>]); </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>The sample JSON data sever should return: [samplereceive]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    securitynumber: <span class="string">"XXX"</span>,</span><br><span class="line">    next: <span class="string">"absolute address to the next passage"</span>,</span><br><span class="line">    browserID: <span class="string">"XXX"</span>,</span><br><span class="line">    IP: <span class="string">"XXX"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The sample worker side that returns JSON: read more at <a href="https://developers.cloudflare.com/workers/learning/getting-started" target="_blank" rel="noopener">https://developers.cloudflare.com/workers/learning/getting-started</a> [returnjson]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(<span class="string">"fetch"</span>, event =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    hello: <span class="string">"world"</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> json = <span class="built_in">JSON</span>.stringify(data, <span class="literal">null</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> event.respondWith(</span><br><span class="line">    <span class="keyword">new</span> Response(json, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">"content-type"</span>: <span class="string">"application/json;charset=UTF-8"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>The client will then direct user to the page in the “next” field and also pass in those stuff as a localstorage. The page in the “next” field will finish the remaining validation stuff.</p><p>For the validation in each page, we might check the IP and BrowserID locally. And then check the securitycode with worker side by passing a JSON object, worker side will check if security code of this passage is correct or not. If result is correct, user have access, otherwise user doesn’t have access.</p><p>Sample request JSON:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    passageName: <span class="string">"XXX"</span>,</span><br><span class="line">    securityCode: <span class="string">"XXX"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Return is just a JSON of true or false and password for this passage.</p><h5 id="encrypt-decrypt"><a class="markdownIt-Anchor" href="#encrypt-decrypt"></a> Encrypt &amp; Decrypt</h5><p>All encription and decription, no matter sever side or user side, will always be handled by using AES via crypto-js. Sample code shown below: More details could be read at <a href="https://github.com/brix/crypto-js" target="_blank" rel="noopener">https://github.com/brix/crypto-js</a> and <a href="https://www.c-sharpcorner.com/blogs/advanced-encryption-in-javascript-using-cryptojs" target="_blank" rel="noopener">https://www.c-sharpcorner.com/blogs/advanced-encryption-in-javascript-using-cryptojs</a> [pointsys]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Encrypt</span></span><br><span class="line"><span class="keyword">var</span> ciphertext = CryptoJS.AES.encrypt(<span class="string">'my message'</span>, <span class="string">'secret key 123'</span>).toString();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Decrypt</span></span><br><span class="line"><span class="keyword">var</span> bytes  = CryptoJS.AES.decrypt(ciphertext, <span class="string">'secret key 123'</span>);</span><br><span class="line"><span class="keyword">var</span> originalText = bytes.toString(CryptoJS.enc.Utf8);</span><br></pre></td></tr></table></figure><p>We also need to include their script in the header:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/cryptojs/3.1.2/rollups/aes.js"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In the worker side, we will still use crypto-js with another method, which is we need to require first.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> AES = <span class="built_in">require</span>(<span class="string">"crypto-js/aes"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Encrypt</span></span><br><span class="line"><span class="keyword">var</span> ciphertext = CryptoJS.AES.encrypt(<span class="string">'my message'</span>, <span class="string">'secret key 123'</span>).toString();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Decrypt</span></span><br><span class="line"><span class="keyword">var</span> bytes  = CryptoJS.AES.decrypt(ciphertext, <span class="string">'secret key 123'</span>);</span><br><span class="line"><span class="keyword">var</span> originalText = bytes.toString(CryptoJS.enc.Utf8);</span><br></pre></td></tr></table></figure><h1 id="quizzes"><a class="markdownIt-Anchor" href="#quizzes"></a> Quizzes</h1><h5 id="host-2"><a class="markdownIt-Anchor" href="#host-2"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/quiz/" target="_blank" rel="noopener">capitaltwo.ga/quiz/</a>. Structure will be described in Client Side at [clientside].</p><p>[quiz] Quiz part will utilize the Cloudflare Worker functions. Quiz question will be stored in each script. Each script has a size limit of 1 MB, it is enough to store 160-240 questions. (Assume 200 chars per question, 200*240 = 48000 &lt; 1048576)</p><p>Each generated quiz would contain some of Pre-defined Quiz and some Generated quiz, the proportion of each part could be pre-defined or not pre-defined. We could get the quiz questions from quizlet.</p><h2 id="quiz-type"><a class="markdownIt-Anchor" href="#quiz-type"></a> Quiz Type</h2><h3 id="pre-defined-quiz"><a class="markdownIt-Anchor" href="#pre-defined-quiz"></a> Pre-defined Quiz</h3><p>All Pre-defined Quiz question will be pre-defined in JSON field.</p><p>Sample pre-defined quiz:</p><blockquote><p><span>Pre-defined Quiz</span> Is 401K a tax deferred retirement plan funded by employees of profit seeking business?</p><p>A. Yes</p><p>B. No</p></blockquote><p>Sample JSON format:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"QuestionText"</span>: <span class="xml"><span class="tag">&lt;<span class="name">The</span> <span class="attr">text</span> <span class="attr">of</span> <span class="attr">question</span>&gt;</span>,</span></span><br><span class="line"><span class="xml">        "Choices": &#123;"option1" : "choice text", "option2" : "choice text",...&#125;,</span></span><br><span class="line">        "Answer": &lt;option&gt;,  </span><br><span class="line">        "Explanation": &lt;word description&gt;,  </span><br><span class="line">    &#125;, ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="generated-quiz"><a class="markdownIt-Anchor" href="#generated-quiz"></a> Generated Quiz</h3><p>Generated quiz is a quiz that have some variables able to be changed. Each quiz question means a pair of generation and validation method in worker. Sample generated quiz: The 1000 and 3.6 in the following question could be changed.</p><blockquote><p><span>Generated Quiz</span> You rent 1000 from bank at an APR of 3.6% for a year, how much interest you need to pay for a year?</p><p>______</p></blockquote><p>Because we will not have a lot of calculation in the quiz part, I guess we could just define each question separately. It would be enough.</p><h2 id="preparing-quiz"><a class="markdownIt-Anchor" href="#preparing-quiz"></a> Preparing Quiz</h2><h3 id="worker-side"><a class="markdownIt-Anchor" href="#worker-side"></a> Worker side</h3><p>Worker will generate the quiz and return a JSON to a request. Because the original question is in JSON file, this place is just to randomly select some question from the bank. The question bank is just an object variable in script. We might add more verification in the request header in the future. For the code of returning JSON, see [returnjson]. Here is the sample JSON file returned from worker:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"QNumber"</span>: <span class="xml"><span class="tag">&lt;<span class="name">The</span> <span class="attr">index</span> <span class="attr">of</span> <span class="attr">number</span>, <span class="attr">the</span> <span class="attr">same</span> <span class="attr">as</span> <span class="attr">the</span> <span class="attr">order</span> <span class="attr">of</span> <span class="attr">problem</span> <span class="attr">set</span>, <span class="attr">for</span> <span class="attr">indexing</span> <span class="attr">purpose</span>&gt;</span>,</span></span><br><span class="line">        "QuestionText": &lt;The text of question&gt;,</span><br><span class="line">        "QuestionType": &lt;Either pre-defined or generated&gt;,</span><br><span class="line">        "QuestionSubType": &lt;none if multiple choice, otherwise an identification code for validation method&gt;,</span><br><span class="line">        "Choices": &lt;&#123;"none":" or &#123;"option1" : "choice text", "option2" : "choice text",...&#125;&gt;, //none means it is a calculation question.</span><br><span class="line">    &#125;, ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Some data describing requiesting detail, such as quizcode, will be passed into worker in the data part. And then worker could use it to navigate to the correct question.</p><p>Whether generate quiz in one file (use header to distinguish the function) or in seperate files (client call different address on worker) on worker is up to designer.</p><p>Worker side will also have script to check the correctness of the quiz by using the QNumber or calculation method and return correctness for each question. Client will sent a JSON as body in a fetch request, sample passed in JSON:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Task"</span>: <span class="string">"XXX"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"QNumber"</span>: <span class="xml"><span class="tag">&lt;<span class="name">The</span> <span class="attr">index</span> <span class="attr">of</span> <span class="attr">number</span>, <span class="attr">the</span> <span class="attr">same</span> <span class="attr">as</span> <span class="attr">the</span> <span class="attr">order</span> <span class="attr">of</span> <span class="attr">problem</span> <span class="attr">set</span>, <span class="attr">for</span> <span class="attr">indexing</span> <span class="attr">purpose</span>&gt;</span>,</span></span><br><span class="line">        "Selection": &lt;Choice&gt; //user selection of the corresponding quiz  </span><br><span class="line">    &#125;, ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Sample return JSON for validation process from server: The order of each question should remain the same as the order in the pass in data. And only represent wrong questions.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"pass"</span>: <span class="xml"><span class="tag">&lt;<span class="name">true,</span> <span class="attr">false</span>&gt;</span></span></span><br><span class="line"><span class="xml">    &#125;,//the first object records if user pass this quiz (60\%) or not</span></span><br><span class="line"><span class="xml">    &#123;</span></span><br><span class="line">        "QNumber": &lt;The index of number, the same as the order of problem set, for indexing purpose&gt;,</span><br><span class="line">        "Correct": &lt;true, false&gt;,  </span><br><span class="line">        "Explanation": &lt;word description&gt;,  </span><br><span class="line">    &#125;, ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="client-side"><a class="markdownIt-Anchor" href="#client-side"></a> Client Side</h3><p>Client side is just to formulate the data as described in the pass in side in the above part. And it will loop through the data passed back to either formulate questions or generate a report, like check answer and showing explanation. If a user pass the quiz, user will be guided to the next section After finishing quiz at [afterquiz].</p><p>In the main page of Client Side, which is located at <a href="http://capitaltwo.ga/quiz/index.html" target="_blank" rel="noopener">capitaltwo.ga/quiz/index.html</a>. The default page will have a input window asking user for quizcode. Then it will guide user to <a href="http://capitaltwo.ga/quiz/index.html?quizcode=XXX" target="_blank" rel="noopener">capitaltwo.ga/quiz/index.html?quizcode=XXX</a>. This page will be generated to be the page for this quiz. Other page could navigate user to the quiz page by using <a href="http://capitaltwo.ga/quiz/index.html?quizcode=XXX" target="_blank" rel="noopener">capitaltwo.ga/quiz/index.html?quizcode=XXX</a>. Then they will not see the default page in the case.</p><p>The method behind this is to analyze the parameter in the javascript part, sample code for getting parameters as shown below:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = &#123;</span><br><span class="line">        QueryString: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> uri = <span class="built_in">window</span>.location.search;</span><br><span class="line">            <span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">""</span> + val + <span class="string">"=([^&amp;?]*)"</span>, <span class="string">"ig"</span>);</span><br><span class="line">            <span class="keyword">return</span> ((uri.match(re)) ? (uri.match(re)[<span class="number">0</span>].substr(val.length + <span class="number">1</span>)) : <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request.QueryString(<span class="string">"wind"</span>) == <span class="literal">null</span>;<span class="comment">//check no parameters called wind</span></span><br><span class="line">request.QueryString(<span class="string">"wind"</span>);<span class="comment">//get the value of parameter of wind</span></span><br></pre></td></tr></table></figure><p>By using those information get, this javascript will then write corresponding elements by using DOM Manipulation Methods in jQuery. Sample:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Creating a new div element </span></span><br><span class="line"><span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Creating a text node </span></span><br><span class="line"><span class="keyword">var</span> newContent = <span class="built_in">document</span>.createTextNode(<span class="string">"Hi, how are you doing?"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Adding the text node to the newly created div</span></span><br><span class="line">newDiv.appendChild(newContent);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Adding the newly created element and its content into the DOM </span></span><br><span class="line"><span class="keyword">var</span> currentDiv = <span class="built_in">document</span>.getElementById(<span class="string">"main"</span>); </span><br><span class="line"><span class="built_in">document</span>.body.appendChild(newDiv, currentDiv);</span><br></pre></td></tr></table></figure><p>Jquery can also do this by using append():</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#div1'</span>).after(<span class="string">'&lt;div style="background-color:yellow"&gt; New div &lt;/div&gt;'</span>);</span><br></pre></td></tr></table></figure><p>Sample HTML:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"hint"</span>&gt;</span>This is a simple paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="after-finishing-quiz"><a class="markdownIt-Anchor" href="#after-finishing-quiz"></a> After finishing quiz</h2><p>If user passed this quiz and checked all explanations, user will get choices of getting certificate or go to next passage directly.</p><p>If user choose to go to the next page directly, the client will then ask worker provide related JSON object, and then direct user to the page in the “next” field and also pass in those stuff as a localstorage. The sample received stuff is described in previous part at [samplereceive]. The page in the “next” field will finish the remaining validation stuff. The request JSON is slightly different than the request JSON discussed before. And worker should have a seperate function for it, the sample request JSON.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    quizcode: <span class="string">"XXX"</span>,</span><br><span class="line">    browserID: <span class="string">"XXX"</span>,</span><br><span class="line">    IP: <span class="string">"XXX"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If they choose to get certificate, the client side script will pass in some information, including [quizcode], [Browser Identification String], [IP Address] to worker and will receive an encrypted text. See later part for how this works. And a small window will go out with certificate information. The small window sample code is:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">OpenDetial</span>(<span class="params">id, width, height</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _srcWidth = <span class="built_in">parseInt</span>(<span class="built_in">window</span>.innerWidth || <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth);</span><br><span class="line">    <span class="keyword">var</span> _srcHeight = <span class="built_in">parseInt</span>(<span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight);</span><br><span class="line">    _width = <span class="built_in">parseInt</span>(width) || _srcWidth;</span><br><span class="line">    _height = <span class="built_in">parseInt</span>(height) || _srcHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> cssWidth = width == <span class="literal">undefined</span> ? <span class="string">"100%"</span> : _width;</span><br><span class="line">    <span class="keyword">var</span> cssHeight = height == <span class="literal">undefined</span> ? <span class="string">"100%"</span> : _height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> left = (_srcWidth - _width) == <span class="number">0</span> ? <span class="number">0</span> : ((_srcWidth - _width) / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">var</span> top = (_srcHeight - _height) == <span class="number">0</span> ? <span class="number">0</span> : ((_srcHeight - _height) / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> _id = <span class="string">"#"</span> + id;</span><br><span class="line">    <span class="keyword">var</span> detial;</span><br><span class="line">        detial =</span><br><span class="line">        <span class="string">'&lt;div id="panel"&gt; &lt;div class="card white z-depth-3"&gt;&lt;div class="card-content black-text"&gt;  &lt;div class="row"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;div class="file-field input-field col s12"&gt; &lt;div class="btn"&gt;&lt;span&gt;File&lt;/span&gt;&lt;input id="history_data" name="history_data" type="file" onchange="loadFile(this)" accept=".csv"&gt;&lt;/div&gt;&lt;div class="file-path-wrapper"&gt;&lt;input placeholder="Input Stream" id="Input_Stream" class="file-path validate" type="text"&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="col s12"&gt;&lt;label&gt;&lt;input type="checkbox" onchange="switchExport(this);" /&gt;&lt;span&gt;I don\'t need to export usage data(Choose when source is intended to be large).&lt;/span&gt;&lt;/label&gt;&lt;/p&gt;&lt;p class="col s8" id="notice"&gt;&lt;p&gt;&lt;button  id="usethis" class="waves-effect waves-light btn col s3" disabled onclick="Start()"&gt;Use This&lt;/button&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    $(_id).html(detial);</span><br><span class="line">    $(_id).css(&#123;</span><br><span class="line">        <span class="string">"display"</span>: <span class="string">"none"</span>,</span><br><span class="line">        <span class="string">"position"</span>: <span class="string">"fixed"</span>,</span><br><span class="line">        <span class="string">"bottom"</span>: <span class="string">"0px"</span>,</span><br><span class="line">        <span class="string">"width"</span>: <span class="string">"100%"</span>,</span><br><span class="line">        <span class="string">"top"</span>: <span class="string">"0px"</span>,</span><br><span class="line">        <span class="string">"height"</span>: <span class="string">"100%"</span>,</span><br><span class="line">        <span class="string">"background-color"</span>: <span class="string">"rgba(223, 236, 236, 0.36)"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"#panel"</span>).css(&#123;</span><br><span class="line">        <span class="string">"width"</span>: cssWidth,</span><br><span class="line">        <span class="string">"height"</span>: cssHeight,</span><br><span class="line">        <span class="string">"left"</span>: left,</span><br><span class="line">        <span class="string">"top"</span>: top,</span><br><span class="line">        <span class="string">"position"</span>: <span class="string">"fixed"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(_id).slideDown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">OpenDetial(<span class="string">"&lt;div id&gt;"</span>, <span class="number">400</span>, <span class="number">200</span>);<span class="comment">//open this window</span></span><br></pre></td></tr></table></figure><p>If user choose to download it, Then client could generate a download like this:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funDownload = <span class="function"><span class="keyword">function</span>(<span class="params">content, filename</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> eleLink = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">    eleLink.download = filename;</span><br><span class="line">    eleLink.style.display = <span class="string">'none'</span>;</span><br><span class="line">    <span class="keyword">var</span> blob = <span class="keyword">new</span> Blob([content]);</span><br><span class="line">    eleLink.href = URL.createObjectURL(blob);</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(eleLink);</span><br><span class="line">    eleLink.click();</span><br><span class="line">    <span class="built_in">document</span>.body.removeChild(eleLink);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">funDownload(text, <span class="string">'credential.txt'</span>);</span><br></pre></td></tr></table></figure><p>We will use body to pass information to worker, Sample JS to request information, read more at <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">'https://XXX.1442334619.workers.dev'</span>, &#123;</span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">'User-agent'</span>: <span class="string">'Mozilla/4.0 Custom User Agent'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">    <span class="comment">// 'Content-Type': 'application/x-www-form-urlencoded',</span></span><br><span class="line">  &#125;,</span><br><span class="line">  body: <span class="built_in">JSON</span>.stringify(data)</span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="params">response</span> =&gt;</span> response.json())</span><br><span class="line">.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> <span class="built_in">console</span>.error(error))</span><br></pre></td></tr></table></figure><p>sample JSON request body</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    quizcode: <span class="string">"XXX"</span>,</span><br><span class="line">    IP: <span class="string">"XXX"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Sample code for returning text from worker side, this step will need to install worker local environment. It will need to use quizcode information to get the securitycode of next passage and other information to finish the encryption.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> AES = <span class="built_in">require</span>(<span class="string">"crypto-js/aes"</span>);</span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">"fetch"</span>, event =&gt; &#123;</span><br><span class="line">  event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">handleRequest</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//use request.body and request.header and handle encryption using AES</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="string">"Hello worker!"</span>, &#123;</span><br><span class="line">    headers: &#123; <span class="string">"content-type"</span>: <span class="string">"text/plain"</span> &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="stock-simulation-tool"><a class="markdownIt-Anchor" href="#stock-simulation-tool"></a> Stock Simulation Tool</h1><h5 id="host-3"><a class="markdownIt-Anchor" href="#host-3"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/stock/" target="_blank" rel="noopener">capitaltwo.ga/stock/</a>. Structure could be determined by user implementing it. Data part of this section may be put in the same directory or using Guthub release/raw.github.com in another repo if it is too big.</p><p>This tool will get some history data and let user have a simulated stock trade experience. User will could have an initial amount of money and trade in and trade out at some time. We will compress a day’s trend chart to 10 minutes.</p><h5 id="data-preparation"><a class="markdownIt-Anchor" href="#data-preparation"></a> Data Preparation</h5><p>Data source could be stored in Github, it might also be held in other cloud storage. We will provide user with 5 stocks to play with in each game. As required of randomization, we will prepare 10 pairs of data. Each data will include the following information in csv like this:</p><pre><code>Date,Open,High,Low,Close,Volume,Adj Close11:59:16,43.23,43.32,42.91,43.20,28942700,43.2011:59:16,42.84,43.45,42.65,43.23,30314900,43.2311:59:17,42.74,43.17,42.21,42.74,24634000,42.7411:59:18,43.31,43.46,42.83,43.08,26266400,43.0811:59:19,42.97,43.47,42.81,43.37,34244200,43.3711:59:20,43.21,43.25,42.60,42.86,31170300,42.8611:59:20,43.38,43.69,43.08,43.16,31537500,43.1611:59:20,44.07,44.10,43.29,43.58,31921400,43.5811:59:21,43.91,44.09,43.64,43.89,27763100,43.89</code></pre><h5 id="data-reading"><a class="markdownIt-Anchor" href="#data-reading"></a> Data Reading</h5><p>Because this is a large amount of data, it might cause a high traffic and memory load would be high, in extreme case, it might also cause IO choke. We will use <a href="https://www.papaparse.com/" target="_blank" rel="noopener">Papa Parse</a> to use stream to fix this issue.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Papa.parse(<span class="string">"http://example.com/file.csv"</span>, &#123;</span><br><span class="line">    header: <span class="literal">true</span>,</span><br><span class="line">        skipEmptyLines: <span class="literal">true</span>,</span><br><span class="line">        dynamicTyping: <span class="literal">true</span>,</span><br><span class="line">    download: <span class="literal">true</span>,</span><br><span class="line">    step: <span class="function"><span class="keyword">function</span>(<span class="params">results, parser</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"Row data:"</span>, results.data[<span class="string">"Time"</span>]);</span><br><span class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(results);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>As always, we will need to include their js file in our HTML header.</p><h5 id="data-representation"><a class="markdownIt-Anchor" href="#data-representation"></a> Data Representation</h5><p>For the data representation, I think <a href="https://www.amcharts.com/" target="_blank" rel="noopener">amcharts</a>. A sample representation code like below: Refer to <a href="https://www.amcharts.com/demos/stock-chart/" target="_blank" rel="noopener">https://www.amcharts.com/demos/stock-chart/</a> for more details.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">am4core.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Themes begin</span></span><br><span class="line">am4core.useTheme(am4themes_animated);</span><br><span class="line"><span class="comment">// Themes end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Create chart</span></span><br><span class="line"><span class="keyword">var</span> chart = am4core.create(<span class="string">"chartdiv"</span>, am4charts.XYChart);</span><br><span class="line">chart.padding(<span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">15</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Load external data</span></span><br><span class="line">chart.dataSource.url = <span class="string">"https://www.amcharts.com/wp-content/uploads/assets/stock/MSFT.csv"</span>;</span><br><span class="line">chart.dataSource.parser = <span class="keyword">new</span> am4core.CSVParser();</span><br><span class="line">chart.dataSource.parser.options.useColumnNames = <span class="literal">true</span>;</span><br><span class="line">chart.dataSource.parser.options.reverse = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the following line makes value axes to be arranged vertically.</span></span><br><span class="line">chart.leftAxesContainer.layout = <span class="string">"vertical"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// uncomment this line if you want to change order of axes</span></span><br><span class="line"><span class="comment">//chart.bottomAxesContainer.reverseOrder = true;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dateAxis = chart.xAxes.push(<span class="keyword">new</span> am4charts.DateAxis());</span><br><span class="line">dateAxis.renderer.grid.template.location = <span class="number">0</span>;</span><br><span class="line">dateAxis.renderer.ticks.template.length = <span class="number">8</span>;</span><br><span class="line">dateAxis.renderer.ticks.template.strokeOpacity = <span class="number">0.1</span>;</span><br><span class="line">dateAxis.renderer.grid.template.disabled = <span class="literal">true</span>;</span><br><span class="line">dateAxis.renderer.ticks.template.disabled = <span class="literal">false</span>;</span><br><span class="line">dateAxis.renderer.ticks.template.strokeOpacity = <span class="number">0.2</span>;</span><br><span class="line">dateAxis.renderer.minLabelPosition = <span class="number">0.01</span>;</span><br><span class="line">dateAxis.renderer.maxLabelPosition = <span class="number">0.99</span>;</span><br><span class="line">dateAxis.keepSelection = <span class="literal">true</span>;</span><br><span class="line">dateAxis.minHeight = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">dateAxis.groupData = <span class="literal">true</span>;</span><br><span class="line">dateAxis.minZoomCount = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// these two lines makes the axis to be initially zoomed-in</span></span><br><span class="line"><span class="comment">// dateAxis.start = 0.7;</span></span><br><span class="line"><span class="comment">// dateAxis.keepSelection = true;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> valueAxis = chart.yAxes.push(<span class="keyword">new</span> am4charts.ValueAxis());</span><br><span class="line">valueAxis.tooltip.disabled = <span class="literal">true</span>;</span><br><span class="line">valueAxis.zIndex = <span class="number">1</span>;</span><br><span class="line">valueAxis.renderer.baseGrid.disabled = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// height of axis</span></span><br><span class="line">valueAxis.height = am4core.percent(<span class="number">65</span>);</span><br><span class="line"></span><br><span class="line">valueAxis.renderer.gridContainer.background.fill = am4core.color(<span class="string">"#000000"</span>);</span><br><span class="line">valueAxis.renderer.gridContainer.background.fillOpacity = <span class="number">0.05</span>;</span><br><span class="line">valueAxis.renderer.inside = <span class="literal">true</span>;</span><br><span class="line">valueAxis.renderer.labels.template.verticalCenter = <span class="string">"bottom"</span>;</span><br><span class="line">valueAxis.renderer.labels.template.padding(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//valueAxis.renderer.maxLabelPosition = 0.95;</span></span><br><span class="line">valueAxis.renderer.fontSize = <span class="string">"0.8em"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> series = chart.series.push(<span class="keyword">new</span> am4charts.LineSeries());</span><br><span class="line">series.dataFields.dateX = <span class="string">"Date"</span>;</span><br><span class="line">series.dataFields.valueY = <span class="string">"Adj Close"</span>;</span><br><span class="line">series.tooltipText = <span class="string">"&#123;valueY.value&#125;"</span>;</span><br><span class="line">series.name = <span class="string">"MSFT: Value"</span>;</span><br><span class="line">series.defaultState.transitionDuration = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> valueAxis2 = chart.yAxes.push(<span class="keyword">new</span> am4charts.ValueAxis());</span><br><span class="line">valueAxis2.tooltip.disabled = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// height of axis</span></span><br><span class="line">valueAxis2.height = am4core.percent(<span class="number">35</span>);</span><br><span class="line">valueAxis2.zIndex = <span class="number">3</span></span><br><span class="line"><span class="comment">// this makes gap between panels</span></span><br><span class="line">valueAxis2.marginTop = <span class="number">30</span>;</span><br><span class="line">valueAxis2.renderer.baseGrid.disabled = <span class="literal">true</span>;</span><br><span class="line">valueAxis2.renderer.inside = <span class="literal">true</span>;</span><br><span class="line">valueAxis2.renderer.labels.template.verticalCenter = <span class="string">"bottom"</span>;</span><br><span class="line">valueAxis2.renderer.labels.template.padding(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">//valueAxis.renderer.maxLabelPosition = 0.95;</span></span><br><span class="line">valueAxis2.renderer.fontSize = <span class="string">"0.8em"</span></span><br><span class="line"></span><br><span class="line">valueAxis2.renderer.gridContainer.background.fill = am4core.color(<span class="string">"#000000"</span>);</span><br><span class="line">valueAxis2.renderer.gridContainer.background.fillOpacity = <span class="number">0.05</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> series2 = chart.series.push(<span class="keyword">new</span> am4charts.ColumnSeries());</span><br><span class="line">series2.dataFields.dateX = <span class="string">"Date"</span>;</span><br><span class="line">series2.dataFields.valueY = <span class="string">"Volume"</span>;</span><br><span class="line">series2.yAxis = valueAxis2;</span><br><span class="line">series2.tooltipText = <span class="string">"&#123;valueY.value&#125;"</span>;</span><br><span class="line">series2.name = <span class="string">"MSFT: Volume"</span>;</span><br><span class="line"><span class="comment">// volume should be summed</span></span><br><span class="line">series2.groupFields.valueY = <span class="string">"sum"</span>;</span><br><span class="line">series2.defaultState.transitionDuration = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">chart.cursor = <span class="keyword">new</span> am4charts.XYCursor();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> scrollbarX = <span class="keyword">new</span> am4charts.XYChartScrollbar();</span><br><span class="line">scrollbarX.series.push(series);</span><br><span class="line">scrollbarX.marginBottom = <span class="number">20</span>;</span><br><span class="line">scrollbarX.scrollbarChart.xAxes.getIndex(<span class="number">0</span>).minHeight = <span class="literal">undefined</span>;</span><br><span class="line">chart.scrollbarX = scrollbarX;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Add range selector</span></span><br><span class="line"><span class="keyword">var</span> selector = <span class="keyword">new</span> am4plugins_rangeSelector.DateAxisRangeSelector();</span><br><span class="line">selector.container = <span class="built_in">document</span>.getElementById(<span class="string">"controls"</span>);</span><br><span class="line">selector.axis = dateAxis;</span><br><span class="line"></span><br><span class="line">&#125;); <span class="comment">// end am4core.ready()</span></span><br></pre></td></tr></table></figure><p>To use it, we need to include their js library:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv</span> &#123;</span></span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 500px;</span><br><span class="line">  max-width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#controls</span> &#123;</span></span><br><span class="line">  overflow: hidden;</span><br><span class="line">  padding-bottom: 3px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.amcharts.com/lib/4/core.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.amcharts.com/lib/4/charts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.amcharts.com/lib/4/plugins/rangeSelector.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.amcharts.com/lib/4/themes/animated.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chartdiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span>Notice</span> We will draw the graph animated, so it is not just using csv file directly as code above. We will pass data into the graph asa time goes.</p><h5 id="user-interaction"><a class="markdownIt-Anchor" href="#user-interaction"></a> User Interaction</h5><p>For the user interaction, user could trade in and trade out by put number or press button. The key solution at here is to refresh the page every 100 ms(or other rational value). Sample refresh code would like this:</p><p>If asynchronous, not really recommend as js is synchronous.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hoverId = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Do whatever you want at here, below is just a sample</span></span><br><span class="line">    data.push(&#123;</span><br><span class="line">        name: history.getLast().getKey(),</span><br><span class="line">        value: [</span><br><span class="line">            history.getLast().getKey(),</span><br><span class="line">            history.getLast().getValue()</span><br><span class="line">        ]</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;, freq);</span><br><span class="line"></span><br><span class="line">clearInterval(hoverId); <span class="comment">//Use this when we no longer want to refresh the page</span></span><br></pre></td></tr></table></figure><p>Synchronous method could be used to parallel with file reading:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> delay = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Model_Status == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">//do some things at here</span></span><br><span class="line">            parser.resume();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                delay();</span><br><span class="line">            &#125;, <span class="number">200</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    delay();</span><br><span class="line">&#125;, freq);</span><br></pre></td></tr></table></figure><p><span>Further Notice</span> User’s purchasing might influence stock market, and we can calculate this asa well. But I do not suggest this as JavaScript will have error in those detailed floating calculation. And user’s influence is pretty low.</p><h1 id="retirement-calculation-tool"><a class="markdownIt-Anchor" href="#retirement-calculation-tool"></a> Retirement Calculation Tool</h1><h5 id="host-4"><a class="markdownIt-Anchor" href="#host-4"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/retire/" target="_blank" rel="noopener">capitaltwo.ga/retire/</a>. Structure could be determined by user implementing it.</p><p>This part doesn’t have any special stuff. We will collect some information and let user select some common retirement plan, or customize their own plan. And click calculate to get the calculation result and see the amount of money they could receive in the next few months.</p><p>This part will only use some normal javascript function with some calculation logic. When representing result, we could use another page or rewrite current page using javascript. We might represent some pie chart for some data, code is represented in [combinefigure], like money from social security and money from deposite.</p><h1 id="loan-calculation-tool"><a class="markdownIt-Anchor" href="#loan-calculation-tool"></a> Loan Calculation Tool</h1><h5 id="host-5"><a class="markdownIt-Anchor" href="#host-5"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/loan/" target="_blank" rel="noopener">capitaltwo.ga/loan/</a>. Structure could be determined by user implementing it.</p><p>This part doesn’t have any special stuff. We will collect some information and let user select some common loan plan and the duration of loan, or customize their own plan. And click calculate to get the calculation result. We will represent result in a table to show how much they need to pay in the next few months.</p><p>This part will only use some normal javascript function with some calculation logic. When representing result, we could use another page or rewrite current page using javascript. We might represent some pie chart for some data, code is represented in [combinefigure], like the interest and your base money.</p><h1 id="budgeting-tool"><a class="markdownIt-Anchor" href="#budgeting-tool"></a> Budgeting Tool</h1><h5 id="host-6"><a class="markdownIt-Anchor" href="#host-6"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/budget/" target="_blank" rel="noopener">capitaltwo.ga/budget/</a>. Structure could be determined by user implementing it.</p><p>This will be in a collapsibles list and user could choose between those two.</p><h2 id="monthly-budgeting-tool"><a class="markdownIt-Anchor" href="#monthly-budgeting-tool"></a> Monthly Budgeting Tool</h2><p>This is a normal one month calculation. People will input their money in and money out category, then we just generate a report of money usage of current month. This is just a simple calculation to let money in - money out. And we could also draw some spending category chart using echarts. (Or amchart) A pie chart would be great.</p><p>A sample pie chart using echarts at [piechart], in this sample a div have <code>main</code> should be defined, like in [combinefigure]:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span><br><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">        text: <span class="string">'title'</span>,</span><br><span class="line">        subtext: <span class="string">'subtitle'</span>,</span><br><span class="line">        left: <span class="string">'center'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,</span><br><span class="line">        formatter: <span class="string">'&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    legend: &#123;</span><br><span class="line">        orient: <span class="string">'vertical'</span>,</span><br><span class="line">        left: <span class="string">'left'</span>,</span><br><span class="line">        data: [<span class="string">'Direct'</span>, <span class="string">'Mail'</span>, <span class="string">'advertise'</span>, <span class="string">'video'</span>, <span class="string">'search'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    series: [</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'source'</span>,</span><br><span class="line">            type: <span class="string">'pie'</span>,</span><br><span class="line">            radius: <span class="string">'55%'</span>,</span><br><span class="line">            center: [<span class="string">'50%'</span>, <span class="string">'60%'</span>],</span><br><span class="line">            data: [</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">335</span>, <span class="attr">name</span>: <span class="string">'Direct'</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">310</span>, <span class="attr">name</span>: <span class="string">'Mail'</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">234</span>, <span class="attr">name</span>: <span class="string">'advertise'</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">135</span>, <span class="attr">name</span>: <span class="string">'video'</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">1548</span>, <span class="attr">name</span>: <span class="string">'search'</span>&#125;</span><br><span class="line">            ],</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                itemStyle: &#123;</span><br><span class="line">                    shadowBlur: <span class="number">10</span>,</span><br><span class="line">                    shadowOffsetX: <span class="number">0</span>,</span><br><span class="line">                    shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">myChart.setOption(options);</span><br></pre></td></tr></table></figure><p><span>0.48</span> Need to import script:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/echarts/4.3.0/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/Capstone-prooject-design-specification-v0-1/pie.png"><p>We could also analyze the data and made some suggestion to their spending.</p><h2 id="year-budgeting-tool"><a class="markdownIt-Anchor" href="#year-budgeting-tool"></a> Year Budgeting Tool</h2><p>User could type their money on each category or item with an importance level associated to it. With those information, we will solve it by using an optimization rules. User could choose either optimizing saving or optimizing consuming (maybe another word at here).</p><p>In this part, we will utilize <a href="https://github.com/JWally/jsLPSolver" target="_blank" rel="noopener">jsLPSolver</a> and solve the problem. Refer to [opsample] to see the sample of using it.</p><p>User will have choices to indicate if this is a one time purchase or not, like wishlist. Then we will make a plan to tell user when would be the best time to buy it. And in order to achieve this goal, what they should do in each month.</p><p>In this category, we will consider the saved money will be used in some low-risk investment, like 0.036 APR. The report generated would be the item should be bought at that month.</p><p>We could support up to 100 level of priority, but priority of 1 is the essential stuff, like housing, foods. Snacks might be in a lower priority.</p><h5 id="optimize-saving"><a class="markdownIt-Anchor" href="#optimize-saving"></a> Optimize saving</h5><p>This process doesn’t require optimization, thought it could be used to reach this purpose. But it might be as easy as loop through the list and select all components that have a priority level of 1. Sample methods as below:</p><img src="/2020/Capstone-prooject-design-specification-v0-1/alg1.png"><h5 id="optimize-consume"><a class="markdownIt-Anchor" href="#optimize-consume"></a> Optimize consume</h5><p>Define variables: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The amount of money that needs to be spent in different categories i in month j.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">L</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The priority level associate with each spending category, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>. It is the reverse of the original list done by user. Like for high priority stuff, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">L</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> will be high</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">I_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07847em">I</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07847em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The anticipated money in in each month.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The money available at the end of month J.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> – The binary selector to indicate this category should be selected or not in the month j.</p><p>A – The one month rate of buying some low-risk investment product.</p><p>O – Set including one time purchase, like wait list.</p><p>R – Set including repeating purchase.</p><p>Formula:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mtext><mi mathvariant="normal">M</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">z</mi><mi mathvariant="normal">e</mi><mtext> </mtext></mtext></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>R</mi><mo>∪</mo><mi>O</mi></mrow></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi></mrow><mrow><mn>1</mn><mn>2</mn></mrow></msubsup><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">t</mi><mtext> </mtext><mi mathvariant="normal">t</mi><mi mathvariant="normal">o</mi></mtext></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>n</mi></mrow></msubsup><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≤</mo><mi>A</mi><msub><mi>T</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>I</mi><mi>j</mi></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><msub><mi>T</mi><mrow><mi>j</mi></mrow></msub><mo>=</mo><mi>A</mi><msub><mi>T</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>n</mi></mrow></msubsup><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>+</mo><msub><mi>I</mi><mi>j</mi></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>O</mi></mrow></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi></mrow><mrow><mn>1</mn><mn>2</mn></mrow></msubsup><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi></mrow><mrow><mi>R</mi></mrow></msubsup><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn><mspace width="1em"></mspace><mi mathvariant="normal">∀</mi><mi>j</mi><mo>∈</mo><mo>{</mo><mn>1</mn><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mn>1</mn><mn>2</mn><mo>}</mo></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned} &amp; \text{Maxmize } &amp; \sum_{i}^{R\cup O}\sum_{j}^{12}L_{ij}S_{ij} \\ &amp; \text{Subject to} &amp; \sum_{i}^{n}P_{ij}S_{ij}\le AT_{j-1}+I_j \\ &amp; &amp; T_{j} = AT_{j-1} - \sum_{i}^{n}P_{ij}S_{ij} +I_j \\ &amp; &amp; \sum_{i}^{O}\sum_{j}^{12}S_{ij} = 1 \\ &amp; &amp; \sum_{i}^{R}S_{ij} = 1 \quad \forall j\in \{1...12\} \\ \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:8.5741815em"></span><span class="strut bottom" style="height:16.648363em;vertical-align:-8.0741815em"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-6.7458455em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:-3.6806714999999994em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:-.7516054999999988em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:2.3543995000000013em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:5.596512500000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:7.7141815em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-6.7458455em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">M</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">z</span><span class="mord mathrm">e</span><span class="mord mspace"> </span></span></span></span><span style="top:-3.6806714999999994em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">S</span><span class="mord mathrm">u</span><span class="mord mathrm">b</span><span class="mord mathrm">j</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span><span class="mord mathrm">t</span><span class="mord mspace"> </span><span class="mord mathrm">t</span><span class="mord mathrm">o</span></span></span></span><span style="top:-.7516054999999988em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span style="top:2.3543995000000013em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span style="top:5.596512500000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="arraycolsep" style="width:2em"></span><span class="col-align-r"><span class="vlist"><span style="top:-6.7458455em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.00773em">R</span><span class="mbin">∪</span><span class="mord mathit" style="margin-right:.02778em">O</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span style="top:-.000005000000000254801em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000005em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">L</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:-3.6806714999999994em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">≤</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:.07847em">I</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07847em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:-.7516054999999988em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">T</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.13889em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:.07847em">I</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07847em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:2.3543995000000013em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.02778em">O</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span style="top:-.000005000000000254801em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000005em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span><span style="top:5.596512500000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span style="top:-.000005000000000143778em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.00773em">R</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mord mspace quad"></span><span class="mord mathrm">∀</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mopen">{</span><span class="mord mathrm">1</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">1</span><span class="mord mathrm">2</span><span class="mclose">}</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span></span></span></span></p><p>Though optimization might give us the optimal solution in complex cases, but it is also acceptable to use normal methods as shown below.</p><img src="/2020/Capstone-prooject-design-specification-v0-1/alg2.png"><h2 id="sample-codes"><a class="markdownIt-Anchor" href="#sample-codes"></a> Sample codes</h2><h5 id="sample-question"><a class="markdownIt-Anchor" href="#sample-question"></a> Sample Question</h5><p>Each week you’re limited to 300 square feet of wood, 110 hours of labor, and 400 square feet of storage.</p><p>A table uses 30sf of wood, 5 hours of labor, requires 30sf of storage and has a gross profit of 1,200. A dresser uses 20sf of wood, 10 hours of work to put together, requires 50 square feet to store and has a gross profit of 1,600.</p><p>How much of each do you produce to maximize profit, given that partial furniture aren’t allowed in this dumb world problem?</p><h5 id="for-the-model"><a class="markdownIt-Anchor" href="#for-the-model"></a> For the model</h5><p>Definition of model:</p><p>W: wood provided</p><p>L: labor provided</p><p>S: storage provided</p><p>T: amount of table made</p><p>D: amount of dresser produced</p><p></p><p>Math representation:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mtext><mi mathvariant="normal">M</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">z</mi><mi mathvariant="normal">e</mi><mtext> </mtext></mtext></mrow></mtd><mtd><mrow><mn>1</mn><mn>2</mn><mn>0</mn><mn>0</mn><mi>T</mi><mo>+</mo><mn>1</mn><mn>6</mn><mn>0</mn><mn>0</mn><mi>D</mi></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">t</mi><mtext> </mtext><mi mathvariant="normal">t</mi><mi mathvariant="normal">o</mi></mtext></mrow></mtd><mtd><mrow><mn>3</mn><mn>0</mn><mi>T</mi><mo>+</mo><mn>2</mn><mn>0</mn><mi>D</mi><mo>≤</mo><mn>3</mn><mn>0</mn><mn>0</mn></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><mn>5</mn><mi>T</mi><mo>+</mo><mn>1</mn><mn>0</mn><mi>D</mi><mo>≤</mo><mn>1</mn><mn>1</mn><mn>0</mn></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow></mrow></mtd><mtd><mrow><mn>3</mn><mn>0</mn><mi>T</mi><mo>+</mo><mn>5</mn><mn>0</mn><mi>D</mi><mo>≤</mo><mn>4</mn><mn>0</mn><mn>0</mn></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned} &amp; \text{Maxmize } &amp; 1200T+1600D\\ &amp; \text{Subject to} &amp; 30T+20D \le 300 \\ &amp; &amp; 5T+10D \le 110 \\ &amp; &amp; 30T+50D \le 400 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:2.6500000000000004em"></span><span class="strut bottom" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-1.8100000000000003em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:-.6100000000000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:.5900000000000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:1.7900000000000003em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-1.8100000000000003em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">M</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">z</span><span class="mord mathrm">e</span><span class="mord mspace"> </span></span></span></span><span style="top:-.6100000000000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">S</span><span class="mord mathrm">u</span><span class="mord mathrm">b</span><span class="mord mathrm">j</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span><span class="mord mathrm">t</span><span class="mord mspace"> </span><span class="mord mathrm">t</span><span class="mord mathrm">o</span></span></span></span><span style="top:.5900000000000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span style="top:1.7900000000000003em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="arraycolsep" style="width:2em"></span><span class="col-align-r"><span class="vlist"><span style="top:-1.8100000000000003em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">2</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.13889em">T</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mord mathrm">6</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.02778em">D</span></span></span><span style="top:-.6100000000000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">3</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.13889em">T</span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.02778em">D</span><span class="mrel">≤</span><span class="mord mathrm">3</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span></span></span><span style="top:.5900000000000001em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">5</span><span class="mord mathit" style="margin-right:.13889em">T</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.02778em">D</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord mathrm">1</span><span class="mord mathrm">0</span></span></span><span style="top:1.7900000000000003em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">3</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.13889em">T</span><span class="mbin">+</span><span class="mord mathrm">5</span><span class="mord mathrm">0</span><span class="mord mathit" style="margin-right:.02778em">D</span><span class="mrel">≤</span><span class="mord mathrm">4</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span></span></span></span></p><h5 id="for-the-code"><a class="markdownIt-Anchor" href="#for-the-code"></a> For the code</h5><p>Code as shown below:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> model = &#123;</span><br><span class="line">        <span class="string">"optimize"</span>: <span class="string">"profit"</span>,</span><br><span class="line">        <span class="string">"opType"</span>: <span class="string">"max"</span>,</span><br><span class="line">        <span class="string">"constraints"</span>: &#123;</span><br><span class="line">            <span class="string">"wood"</span>: &#123;<span class="string">"max"</span>: <span class="number">300</span>&#125;,</span><br><span class="line">            <span class="string">"labor"</span>: &#123;<span class="string">"max"</span>: <span class="number">110</span>&#125;,</span><br><span class="line">            <span class="string">"storage"</span>: &#123;<span class="string">"max"</span>: <span class="number">400</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"variables"</span>: &#123;</span><br><span class="line">            <span class="string">"table"</span>: &#123;<span class="string">"wood"</span>: <span class="number">30</span>, <span class="string">"labor"</span>: <span class="number">5</span>, <span class="string">"profit"</span>: <span class="number">1200</span>, <span class="string">"table"</span>: <span class="number">1</span>, <span class="string">"storage"</span>: <span class="number">30</span>&#125;,</span><br><span class="line">            <span class="string">"dresser"</span>: &#123;<span class="string">"wood"</span>: <span class="number">20</span>, <span class="string">"labor"</span>: <span class="number">10</span>, <span class="string">"profit"</span>: <span class="number">1600</span>, <span class="string">"dresser"</span>: <span class="number">1</span>, <span class="string">"storage"</span>: <span class="number">50</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ints"</span>: &#123;<span class="string">"table"</span>: <span class="number">1</span>, <span class="string">"dresser"</span>: <span class="number">1</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">console</span>.log(solver.Solve(model));</span><br></pre></td></tr></table></figure><h1 id="home-page"><a class="markdownIt-Anchor" href="#home-page"></a> Home Page</h1><h5 id="host-7"><a class="markdownIt-Anchor" href="#host-7"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/index.html" target="_blank" rel="noopener">capitaltwo.ga/index.html</a>.</p><p>This is a pure HTML + JS page. I will suggest to use <a href="https://materializecss.com/" target="_blank" rel="noopener">Materialcss</a>. By filling the data and do a little edit to their <a href="https://materializecss.com/templates/parallax-template/preview.html" target="_blank" rel="noopener">Parallax Template</a>, then we could build a home page as template. The home page would include our information and purpose of this website, as well as our functions, special stuff.</p><h1 id="copyright-info-and-disclaimer"><a class="markdownIt-Anchor" href="#copyright-info-and-disclaimer"></a> Copyright info and Disclaimer</h1><h5 id="host-8"><a class="markdownIt-Anchor" href="#host-8"></a> Host</h5><p>This page will be hosted at main site in a sub directory, at <a href="http://capitaltwo.ga/legal.html" target="_blank" rel="noopener">capitaltwo.ga/legal.html</a>. Or in a defaault place created by Github.</p><p>The whole project will use multiple libraries and multiple source codes. Our code could be licensed through MIT, usually saw as:</p><p><span>MIT License</span> MIT License</p><p>Copyright © 2020 Capitaltwo</p><p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p><p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p><p>THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p><p>We should also include license of other library we use. Sample as shown below:</p><p>We will need to put those information in a place easy to see. For page that are hard to see, we could provide a bar and guide user to go to the correct page to see it.</p><h1 id="color-and-style-choosing"><a class="markdownIt-Anchor" href="#color-and-style-choosing"></a> Color and Style choosing</h1><h5 id="host-9"><a class="markdownIt-Anchor" href="#host-9"></a> Host</h5><p>Most part of this section will be hold in other website.</p><p>We need to define one the major color for all page. And up to 5 supplement colors. Also we need to define the color for reference section, links, etc. Some color palette as shown below:</p><h1 id="repo-structure"><a class="markdownIt-Anchor" href="#repo-structure"></a> Repo Structure</h1><p>Here is the structure:</p><p><a href="https://github.com/CapitalTwo/Weekly-update" target="_blank" rel="noopener">Weekly-update</a> – Ritika is responsible for this section. It contains the weekly update. We will create a new folder for each week, I will put the recommended work for this week to the week[number] folder and Ritika will convert them into words.</p><p><a href="https://github.com/CapitalTwo/Main-Site" target="_blank" rel="noopener">Main-Site</a> – The main site of the website, it is located at <a href="http://capitaltwo.ga" target="_blank" rel="noopener">capitaltwo.ga</a> or <a href="http://www.capitaltwo.ga" target="_blank" rel="noopener">www.capitaltwo.ga</a>. peter is responsible for this part. It contains all tools(in subfolder), function page, homepage.</p><p><a href="https://github.com/CapitalTwo/Website-Content" target="_blank" rel="noopener">Website-Content</a> – Ritika is responsible for this section. It is a private repo that contains all files we will publish on the knowledge passage. Recommend structure: (topic is the name of topic)</p><ul><li>Topic<ul><li>stage 1<ul><li><a href="http://topic-stage1.md" target="_blank" rel="noopener">topic-stage1.md</a></li><li>topic-stage1.json</li></ul></li><li>stage 2<ul><li><a href="http://topic-stage2.md" target="_blank" rel="noopener">topic-stage2.md</a></li></ul></li></ul></li></ul><p><a href="https://github.com/CapitalTwo/Knowledge-Passage" target="_blank" rel="noopener">Knowledge-Passage</a> – The place to host <a href="http://knowledge.capitaltwo.ga" target="_blank" rel="noopener">knowledge.capitaltwo.ga</a>, our knowledge passages. <strong>Generated automatically, please do NOT modify</strong></p><p><a href="https://github.com/CapitalTwo/Capstone-Wiki" target="_blank" rel="noopener">Capstone-Wiki</a> – The place for our wiki page, <a href="http://wiki.capitaltwo.ga" target="_blank" rel="noopener">wiki.capitaltwo.ga</a>,. It contains our development process and weekly update. <strong>Generated automatically, please do NOT modify</strong></p><h1 id="schedule"><a class="markdownIt-Anchor" href="#schedule"></a> Schedule</h1><p>For anonymous reason, name has been removed. This is a flexible schedule that people are only recommended to finish the corresponding stuff before the due date. As soon as each one follow the the due date, entire project could be done</p><div style="overflow-x:auto"><table cellspacing="0" border="0"><colgroup span="2" width="63"></colgroup><colgroup width="203"></colgroup><colgroup width="63"></colgroup><colgroup width="208"></colgroup><colgroup width="104"></colgroup><colgroup width="118"></colgroup><colgroup width="107"></colgroup><tr><td height="18" align="left" valign="bottom"><font color="#000000"><br></font></td><td colspan="2" align="center" valign="bottom"><font color="#000000">Weekly work</font></td><td align="left" valign="bottom"><font color="#000000">Due</font></td><td align="left" valign="bottom"><font color="#000000">Reading</font></td><td align="left" valign="middle"><font color="#000000">Present</font></td><td align="left" valign="middle"><font color="#000000">Meeting</font></td><td align="left" valign="bottom"><font color="#000000">Mine</font></td></tr><tr><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" height="111" align="center" valign="middle"><font color="#000000">Week 1</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Learn Markdown, 3 passages + 3 Quiz Prep(as in section 2)</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><u><font color="#0563C1"><a href="https://www.markdownguide.org/getting-started/%20https:/www.markdownguide.org/basic-syntax/" target="_blank" rel="noopener">https://www.markdownguide.org/getting-started/ https://www.markdownguide.org/basic-syntax/</a></font></u></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Home page</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Yes, on Saturday. Discuss color, image, workload, role selection, and intro to markdown</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Set up environment, work on ejs step1</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Words for Home page and other pages(function, tool introduction), select image</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 10</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Warm-up for MaterialCss, write homepage</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><u><font color="#0563C1"><a href="https://materializecss.com/getting-started.html" target="_blank" rel="noopener">https://materializecss.com/getting-started.html</a></font></u></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="213" align="center" valign="middle"><font color="#000000">Week 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">4 passages + 4 Quiz Prep</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Retirement calculation tool + Loan calculation tool HTML</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Not Required</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">work on ejs step2 &amp; encryption part 2</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Get familar with Cloudflare worker, build first script that will return a sample quiz(Just return JSON, no randomization need) based on format discussed in 3.1.1</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><u><font color="#0563C1"><a href="https://developers.cloudflare.com/workers/" target="_blank" rel="noopener">No need to install anthing, online platform is enough https://developers.cloudflare.com/workers/learning</a></font></u></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Retirement calculation tool + Loan calculation tool HTML page(No function required)</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Can use https://energy.shaokang.ga/ as reference, source code: https://github.com/ShaokangJiang/energy/blob/master/index.html</font></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="231" align="center" valign="middle"><font color="#000000">Week 3</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">2 passages + 2 Quiz Prep + slide for midterm</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><u><font color="#0563C1"><a href="https://uwprod-my.sharepoint.com/:p:/g/personal/sjiang97_wisc_edu/Efh5LwwiIgREjTkL8oiy_5ABqRhLU5RGUIZSThvxg3ny9w?e=fgAQPb" target="_blank" rel="noopener">https://uwprod-my.sharepoint.com/:p:/g/personal/sjiang97_wisc_edu/Efh5LwwiIgREjTkL8oiy_5ABqRhLU5RGUIZSThvxg3ny9w?e=fgAQPb</a></font></u></td><td style="border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Person AB need to meet to discuss what type of generated quiz should be</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">encryption 2 &amp; quiz client side 1</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">slide for midterm + And build function on worker to randomly select quiz questions and provide to user. As discussed in 3.2.1. Basic structure is fine.</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 3.1.2 &amp; 3.2.1</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">JS code for Retirement calculation tool + slide for midterm</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Can use https://energy.shaokang.ga/ as reference, source code: https://github.com/ShaokangJiang/energy/blob/master/index.html</font></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="141" align="center" valign="middle"><font color="#000000">Week 4</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">3 passages + 3 Quiz Prep</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Budgeting tool HTML</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Not required</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">quiz 2</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Build validation functions to validate quiz correctness for randomly quizzes. And function to generate quizzes</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 3.2.1</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">JS code for Loan calculation tool</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="128" align="center" valign="middle"><font color="#000000">Week 5</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">4 passages + 4 Quiz Prep</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Quiz</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Not required</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">quiz 3 &amp; stock simulation data path &amp; prepare data for stock simulation as discussed in section 4</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Discuss and build &quot;generated quiz functions&quot; as in 3.1.2, might be a total of 8 functions. Depends on discussion result.</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due for previous work</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 3.2.1 &amp; Section 4</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">JS code for budgeting tool as in 7.1. JS code for Retirement calculation tool</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 7, 7.1</font></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="69" align="center" valign="middle"><font color="#000000">Week 6</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">4 passages + 4 Quiz Prep</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Stock simulation</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Not Required, except if stock simulation has a big problem</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">budget optimization part 1</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Build validation functions for 8 generated quiz questions.</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Finish previous work</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 4</font></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="99" align="center" valign="middle"><font color="#000000">Week 7</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">4 passages + 4 Quiz Prep</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">The entire work</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Yes, Discuss final presentation slide</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">budget optimization part 2 &amp; stock simulation &amp; support multi-language</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">4 passages + 4 Quiz Prep</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Read and represent data in stock simulation + JS functions for calculation in stock simulation part 1</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Due</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Section 4</font></td></tr><tr><td style="border-bottom:1px solid #000" rowspan="3" height="127" align="center" valign="middle"><font color="#000000">Week 8</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person A</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">2 passages + 2 Quiz Prep + Presentation slide + Final essay</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Sction 1 &amp; 2</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Multi language</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">Yes, Discuss final presentation slide</font></td><td style="border-top:1px solid #000;border-bottom:1px solid #000" rowspan="3" align="center" valign="middle"><font color="#000000">2 passages + 2 Quiz Prep + slide + Final essay</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person B</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">prepare copyright information + Final presentation slide + Final essay</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Supplemental info</font></td></tr><tr><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Person C</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">JS functions for calculation in stock simulation part 2 &amp; Final presentation slide + Final essay</font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000"><br></font></td><td style="border-bottom:1px solid #000" align="left" valign="middle"><font color="#000000">Supplemental info</font></td></tr></table></div><h1 id="pdf-version"><a class="markdownIt-Anchor" href="#pdf-version"></a> PDF version</h1><p>Original file is written in xelatex and compiled as pdf version as shown below:</p><div class="row"><embed src="./1_new.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Energy simulation Javafx version</title>
      <link href="/2020/projects/Energy-simulation-JavaFx-ver/"/>
      <url>/2020/projects/Energy-simulation-JavaFx-ver/</url>
      
        <content type="html"><![CDATA[<p>In a system where multiple types of energy source exist, running all components at all available times could be a waste by considering multiple different factors, including the device depreciation, normal energy in maintaining the entire system running. This waste is a significant factor when lower wind for wind producer happen, or lower light for light producer happen, or other stuff.</p><p>This is a javafx based energy running simulation simulator with <a href="https://choco-solver.org/" target="_blank" rel="noopener">choco-solver</a> to find optimal threshold, which will be used to determine the time to turn on the device and time to turn off. It contains methods to analyze history data to predict a threshold to make the entire system running as efficient as it could. After proper data is provided, system will run based on a threshold setting from user or automatically analyzed based on history data so that no energy will be wasted. This app is done solely by me.</p><a id="more"></a><h2 id="ways-of-analyzing-history-data"><a class="markdownIt-Anchor" href="#ways-of-analyzing-history-data"></a> Ways of analyzing history data</h2><p>If <code>Using the first 30 input data to optimize and get the best possible threshold.</code> is checked, the first 30 data will be used to generate the optimized threshold.</p><p>By comparing methods in passage <a href="https://shaokang.ga/2020/Optimal-Energy-Production/">Optimal Energy Production</a> designed by me and the usage case, the following one is chosen at last:</p><h3 id="define-variables"><a class="markdownIt-Anchor" href="#define-variables"></a> Define variables</h3><p>J : type of energy, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>∈</mo></mrow><annotation encoding="application/x-tex">J\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.72243em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mrel">∈</span></span></span></span> {wind, water, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> }</p><p>N : value index, 1, 2, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span>.</p><p>C = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>J</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{wind}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>=10*2=20)</p><p>U = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.68611em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span>: Total user consumption</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model.</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, to indicate I should turn on wind on this statistic data or not</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\in \mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.72521em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span> : The battery charging limitation.</p><p>D <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\in \mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.880431em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, indicate the day count each value index, either pre-calculated or calculate in model.</p><h3 id="optimization-model"><a class="markdownIt-Anchor" href="#optimization-model"></a> Optimization Model</h3>\begin{equation}\begin{split}&\text{Minimize } & \sum_{i\in N}\sum_{j\in J}D_{ij}S_{ij}\\& \text{Subject to}\ & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}-U\ge B\end{split}\end{equation}<p>Use MIP to solve it</p><h3 id="code-to-solve-it"><a class="markdownIt-Anchor" href="#code-to-solve-it"></a> Code to solve it</h3><p>This code including reading data from stream, which better fits the real situation. Such that streaming data would be easily handled in the real situation.</p><p>By comparing with multiple different libraries to solve it, <a href="https://choco-solver.org/" target="_blank" rel="noopener">choco-solver</a> is used on java platform at last, which is able to solve problems more than optimization and use machine learning in some cases. It is also able to solve other machine learning problems and provide a good way to customize based on different personal usage cases.</p><h2 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h2><h2 id="data-format"><a class="markdownIt-Anchor" href="#data-format"></a> Data format:</h2><h4 id="simulation-data"><a class="markdownIt-Anchor" href="#simulation-data"></a> Simulation data</h4><p>Header should be the same, <code>User_Usage</code> is not required but recommend. Each field represent the value sensor received.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Time,Wind_Speed,Light_H,Wave_Hight,Wave_Period,Current_Speed,User_Usage</span><br><span class="line">0,5.405,1213.072,3.591,9.104,1.846,501.5935</span><br><span class="line">0.2,8.157,1191.057,3.022,10.431,1.908,497.0755</span><br><span class="line">0.4,6.012,1197.794,1.709,8.784,1.936,503.0145</span><br><span class="line">0.6,6.477,1205.489,2.1,9.857,1.858,499.4511</span><br></pre></td></tr></table></figure><p>Download a sample from <a href="https://github.com/ShaokangJiang/energy/blob/master/sample/simulation%20data.csv" target="_blank" rel="noopener">here</a>.</p><h4 id="optimization-data"><a class="markdownIt-Anchor" href="#optimization-data"></a> Optimization data</h4><p>Header should be the same, <code>idx</code> is not required. Each category has a value component recoding the amount of power produced in unit time. Each count means the possibility of happening. Because we need to use a KWH = b KW * s/3600 to calculate energy produced. The count field has to be integer. We could use the possibility * a factor to make it become integer. And the sum of each count should be the same.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">idx,wind_value,wind_count,light_value,light_count,wave_value,wave_count,current_value,current_count</span><br><span class="line">0,4962654.905,189,100.8496541,45,485.3900022,222,71501.61128,105</span><br><span class="line">1,424133.8855,45,105.8598321,124,328.6975665,43,49752.79798,187</span><br><span class="line">2,3414695.961,18,113.1989172,130,438.1380705,33,35910.75581,12</span><br><span class="line">3,7346795.761,90,116.4237558,11,483.7242291,24,48819.12566,25</span><br><span class="line">4,4033868.032,20,105.5786618,25,226.1068017,14,1611.378029,35</span><br><span class="line">5, , ,106.0583865,19,364.8009734,10,19265.12771,1</span><br></pre></td></tr></table></figure><p>Download a sample from <a href="https://github.com/ShaokangJiang/energy/blob/master/sample/OptimizationData.csv" target="_blank" rel="noopener">here</a>.</p><h2 id="generate-fake-simulation-and-optimization-data"><a class="markdownIt-Anchor" href="#generate-fake-simulation-and-optimization-data"></a> Generate Fake Simulation and optimization data</h2><h4 id="fake-simulation-data"><a class="markdownIt-Anchor" href="#fake-simulation-data"></a> Fake simulation data</h4><p>Use java code below to generate fake simulation data(to be used in run page).</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Random r = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  FileWriter a = <span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(<span class="string">"1.csv"</span>));</span><br><span class="line">  a.write(<span class="string">"Wind_Speed,Light_H,Wave_Hight,Wave_Period,Current_Speed\r\n"</span>);</span><br><span class="line">  <span class="keyword">double</span> time = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(time&lt;<span class="number">36</span>) &#123;</span><br><span class="line">    a.write(generateNormalVar(<span class="number">8</span>,<span class="number">2</span>)+<span class="string">","</span>+generateNormalVar(<span class="number">1200</span>,<span class="number">50</span>)+</span><br><span class="line">        <span class="string">","</span>+generateNormalVar(<span class="number">2.5</span>,<span class="number">0.25</span>)+<span class="string">","</span>+generateNormalVar(<span class="number">9</span>,<span class="number">0.5</span>)+<span class="string">","</span>+generateNormalVar(<span class="number">2</span>,<span class="number">0.5</span>)+<span class="string">"\r\n"</span>);</span><br><span class="line">    time+=<span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  a.flush();</span><br><span class="line">  a.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * N(a,b)</span></span><br><span class="line"><span class="comment"> * center,distribution</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateNormalVar</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">double</span> x = Math.sqrt(b)*r.nextGaussian()+a;</span><br><span class="line">  r.nextGaussian();</span><br><span class="line">  <span class="keyword">return</span> String.format(<span class="string">"%.3f"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fake-optimization-data"><a class="markdownIt-Anchor" href="#fake-optimization-data"></a> Fake optimization data</h4><ul><li><p>To make the input source be easy to manage, represent and maintain. We could save them in the same file, if no enough data for a cell, leave it empty would be fine and recommended.</p></li><li><p>idx is not required but recommended</p></li><li><p>This generation code might be good enough as this is not the real case</p></li><li><p>header: idx,wind_value,wind_count,light_value,light_count,wave_value,wave_count,current_value,current_count</p></li></ul><p>Use java code below to generate fake optimization data(to be used in start page):</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  FileWriter a = <span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(<span class="string">"1.csv"</span>));</span><br><span class="line">a.write(<span class="string">"idx,wind_value,wind_count,light_value,light_count,wave_value,wave_count,current_value,current_count\r\n"</span>);</span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> year = <span class="number">365</span>;</span><br><span class="line">  <span class="keyword">int</span> wind_count=year,light_count=year,wave_count=year,current_count=year;</span><br><span class="line">  <span class="keyword">while</span>(wind_count&gt;<span class="number">0</span> || light_count&gt;<span class="number">0</span> || wave_count&gt;<span class="number">0</span> || current_count&gt;<span class="number">0</span> ) &#123;</span><br><span class="line">    <span class="keyword">int</span> wind_count_=generateRandomIntegerIn(wind_count),light_count_=generateRandomIntegerIn(light_count),</span><br><span class="line">        wave_count_=generateRandomIntegerIn(wave_count),current_count_=generateRandomIntegerIn(current_count);</span><br><span class="line">    wind_count -= wind_count_;</span><br><span class="line">    light_count -= light_count_;</span><br><span class="line">    wave_count -= wave_count_;</span><br><span class="line">    current_count -= current_count_;</span><br><span class="line">    <span class="keyword">if</span>(wind_count_==<span class="number">0</span>&amp;&amp;light_count_==<span class="number">0</span>&amp;&amp;wave_count_==<span class="number">0</span>&amp;&amp;current_count_==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">double</span> Wind_Speed=generateRandomDoubleIn(<span class="number">4</span>,<span class="number">15</span>),Light_H=generateRandomDoubleIn(<span class="number">1100</span>,<span class="number">1300</span>),</span><br><span class="line">        Wave_Hight=generateRandomDoubleIn(<span class="number">2</span>,<span class="number">3</span>),Wave_Period=generateRandomDoubleIn(<span class="number">7</span>,<span class="number">11</span>),</span><br><span class="line">        Current_Speed=generateRandomDoubleIn(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">    System.out.println(count+<span class="string">""</span>+wind_count+<span class="string">""</span>+light_count+<span class="string">""</span>+wave_count+<span class="string">""</span>+current_count+<span class="string">""</span>);</span><br><span class="line">    a.write(count + <span class="string">","</span>+ (wind_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">2866</span>*Wind_Speed*Wind_Speed*Wind_Speed) +<span class="string">","</span>+(wind_count_ == <span class="number">0</span> ? <span class="string">" "</span> : wind_count_) +<span class="string">","</span>+</span><br><span class="line">          (light_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">0.09</span>*Light_H) +<span class="string">","</span>+(light_count_ == <span class="number">0</span> ? <span class="string">" "</span> : light_count_) +<span class="string">","</span>+</span><br><span class="line">        (wave_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">6.6</span>*Wave_Hight*Wave_Hight*Wave_Period)+<span class="string">","</span>+(wave_count_ == <span class="number">0</span> ? <span class="string">" "</span> : wave_count_)+<span class="string">","</span>+</span><br><span class="line">          (current_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">1254</span>*Current_Speed*Current_Speed*Current_Speed )+<span class="string">","</span>+(current_count_ == <span class="number">0</span> ? <span class="string">" "</span> : current_count_)+<span class="string">"\r\n"</span>);</span><br><span class="line">    count++;</span><br><span class="line">  &#125;</span><br><span class="line">  a.flush();</span><br><span class="line">  a.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0~h</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">generateRandomIntegerIn</span><span class="params">(<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> ThreadLocalRandom.current().nextInt(<span class="number">0</span>, h + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">generateRandomDoubleIn</span><span class="params">(<span class="keyword">int</span> Min, <span class="keyword">int</span> Max)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> Min + (Math.random() * ((Max - Min) + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><p><span>Each field means the threshold of each component except wave. In the case of wave, the threshold needs to be pre-calculated using </span>$H^2T$. <span>User usage is in kwh per day or unit time, the unit time refers to the refresh frequency, which will be used to calculate energy produced in the frame of time.</span></p><p>The way to calculate energy produced per unit time: a KWH = b KW*s/3600, a is the result, b is the current power, a is the calculated energy. s is the refresh frequency. Refresh frequency in this form is in ms(milliseconds).</p><p>In the manual setting, you are able to choose to provide user usage data in the future, usually this means to have a column of data recording user consumption per unit time, it will be used as a source of consumming power. If that file doesn't have user usage, you could set it at here. In the auto generate mode, you have to provide one to let us find the optimal solution(guess a possible one would be fine).</p><h3 id="calculation-equation"><a class="markdownIt-Anchor" href="#calculation-equation"></a> Calculation Equation</h3><p><b>Wave</b>: $P_{total}=0.6*11*H^2T=6.6H^2T$ <span>H - height of wave T - period</span></p><p><b>Ocean Current</b>: $P=\frac{\rho v^3 S C_p}{2}=\frac{1050 v^3 \pi1.3^2* 0.45}{2}=1254v^3$ <span>P is the energy captured by the unit, ρ is the fluid density, V is the fluid velocity, and S is the swept area of the impeller</span>$C_p$<span> is the energy utilization coefficient</span></p><p><b>Light</b>: $P=\frac{798*H_A}{365*24}=0.09*H_A, H_A$ <span>Total solar radiation per unit area</span></p><p><b>Wind</b>: $P=\frac{\rho v^3 S C_p}{2}=\frac{1.293 v^3 9852* 0.45}{2}=2866v^3$ <span>P is the energy captured by the unit, ρ is the fluid density, V is the fluid velocity, and S is the swept area of the impeller</span>$C_p$<span> is the energy utilization coefficient</span></p>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Energy simulation website</title>
      <link href="/2020/Energy-smulation-website/"/>
      <url>/2020/Energy-smulation-website/</url>
      
        <content type="html"><![CDATA[<p>In a system where multiple types of energy source exist, running all components at all available times could be a waste by considering multiple different factors, including the device depreciation, normal energy in maintaining the entire system running. This waste is a significant factor when lower wind for wind producer happen, or lower light for light producer happen, or other stuff.</p><p>This is a web based energy running simulation simulator with jsLpsolver to find optimal threshold, which will be used to determine the time to turn on the device and time to turn off. It contains methods to analyze history data to predict a threshold to make the entire system running as efficient as it could. After proper data is provided, system will run based on a threshold setting from user or automatically analyzed based on history data so that no energy will be wasted. This app is done solely by me.</p><a id="more"></a><h2 id="ways-of-analyzing-history-data"><a class="markdownIt-Anchor" href="#ways-of-analyzing-history-data"></a> Ways of analyzing history data</h2><p>If <code>Using the first 30 input data to optimize and get the best possible threshold.</code> is checked, the first 30 data will be used to generate the optimized threshold.</p><p>By comparing methods in passage <a href="https://shaokang.ga/2020/Optimal-Energy-Production/">Optimal Energy Production</a> designed by me and the usage case, the following one is chosen:</p><h3 id="define-variables"><a class="markdownIt-Anchor" href="#define-variables"></a> Define variables</h3><p>J : type of energy, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>∈</mo></mrow><annotation encoding="application/x-tex">J\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.72243em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mrel">∈</span></span></span></span> {wind, water, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> }</p><p>N : value index, 1, 2, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span>.</p><p>C = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>J</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{wind}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>=10*2=20)</p><p>U = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.68611em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span>: Total user consumption</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model.</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, to indicate I should turn on wind on this statistic data or not</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\in \mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.72521em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span> : The battery charging limitation.</p><p>D <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\in \mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.880431em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, indicate the day count each value index, either pre-calculated or calculate in model.</p><h3 id="optimization-model"><a class="markdownIt-Anchor" href="#optimization-model"></a> Optimization Model</h3>\begin{equation}\begin{split}&\text{Minimize } & \sum_{i\in N}\sum_{j\in J}D_{ij}S_{ij}\\& \text{Subject to}\ & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}-U\ge B\end{split}\end{equation}<p>Use MIP to solve it</p><h3 id="code-to-solve-it"><a class="markdownIt-Anchor" href="#code-to-solve-it"></a> Code to solve it</h3><p>This code including reading data from file using papaparse, papaparse also contains ways to read stream. Such that streaming data would be easily handled in the real situation. And the optimization is solved by using jsLpsolver.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> days = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> model = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> idx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> result;</span><br><span class="line"><span class="keyword">var</span> freq = <span class="built_in">parseFloat</span>(<span class="built_in">document</span>.getElementById(<span class="string">"freq"</span>).value) / <span class="number">3600000</span>;</span><br><span class="line"><span class="built_in">console</span>.log(freq);</span><br><span class="line">model[<span class="string">"optimize"</span>] = <span class="string">"count"</span>;</span><br><span class="line">model[<span class="string">"opType"</span>] = <span class="string">"min"</span>;</span><br><span class="line">model[<span class="string">"constraints"</span>] = &#123;&#125;;</span><br><span class="line">model[<span class="string">"variables"</span>] = &#123;&#125;;</span><br><span class="line">model[<span class="string">"ints"</span>] = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> data_input = &#123;&#125;;</span><br><span class="line">Papa.parse(file, &#123;</span><br><span class="line">    header: <span class="literal">true</span>,</span><br><span class="line">    skipEmptyLines: <span class="literal">true</span>,</span><br><span class="line">    dynamicTyping: <span class="literal">true</span>,</span><br><span class="line">    step: <span class="function"><span class="keyword">function</span>(<span class="params">results, parser</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//console.log("Row data:", results.data);</span></span><br><span class="line">        <span class="comment">//analyze data at here</span></span><br><span class="line">        <span class="comment">//use == " " || == null to check empty</span></span><br><span class="line">        <span class="keyword">if</span> (!(results.data[<span class="string">"wind_value"</span>] == <span class="string">" "</span> || results.data[<span class="string">"wind_value"</span>] == <span class="literal">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">var</span> variable_wind = <span class="string">"v"</span> + idx + <span class="string">"0"</span>;</span><br><span class="line">            data_input[variable_wind] = results.data[<span class="string">"wind_value"</span>];</span><br><span class="line">            model.ints[variable_wind] = <span class="number">1</span>;</span><br><span class="line">            model.variables[variable_wind] = &#123;</span><br><span class="line">                <span class="string">"value"</span>: results.data[<span class="string">"wind_value"</span>] * results.data[<span class="string">"wind_count"</span>] * freq,</span><br><span class="line">                <span class="string">"count"</span>: results.data[<span class="string">"wind_count"</span>]</span><br><span class="line">            &#125;;</span><br><span class="line">            model.variables[variable_wind][variable_wind] = <span class="number">1</span>;</span><br><span class="line">            model.constraints[variable_wind] = &#123;</span><br><span class="line">                <span class="string">"min"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"max"</span>: <span class="number">1</span></span><br><span class="line">            &#125;;</span><br><span class="line">            days += results.data[<span class="string">"wind_count"</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(results.data[<span class="string">"light_value"</span>] == <span class="string">" "</span> || results.data[<span class="string">"light_value"</span>] == <span class="literal">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">var</span> variable_light = <span class="string">"v"</span> + idx + <span class="string">"1"</span>;</span><br><span class="line">            data_input[variable_light] = results.data[<span class="string">"light_value"</span>];</span><br><span class="line">            model.ints[variable_light] = <span class="number">1</span>;</span><br><span class="line">            model.variables[variable_light] = &#123;</span><br><span class="line">                <span class="string">"value"</span>: results.data[<span class="string">"light_value"</span>] * results.data[<span class="string">"light_count"</span>] * freq,</span><br><span class="line">                <span class="string">"count"</span>: results.data[<span class="string">"light_count"</span>]</span><br><span class="line">            &#125;;</span><br><span class="line">            model.variables[variable_light][variable_light] = <span class="number">1</span>;</span><br><span class="line">            model.constraints[variable_light] = &#123;</span><br><span class="line">                <span class="string">"min"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"max"</span>: <span class="number">1</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(results.data[<span class="string">"wave_value"</span>] == <span class="string">" "</span> || results.data[<span class="string">"wave_value"</span>] == <span class="literal">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">var</span> variable_wave = <span class="string">"v"</span> + idx + <span class="string">"2"</span>;</span><br><span class="line">            data_input[variable_wave] = results.data[<span class="string">"wave_value"</span>];</span><br><span class="line">            model.ints[variable_wave] = <span class="number">1</span>;</span><br><span class="line">            model.variables[variable_wave] = &#123;</span><br><span class="line">                <span class="string">"value"</span>: results.data[<span class="string">"wave_value"</span>] * results.data[<span class="string">"wave_count"</span>] * freq,</span><br><span class="line">                <span class="string">"count"</span>: results.data[<span class="string">"wave_count"</span>]</span><br><span class="line">            &#125;;</span><br><span class="line">            model.variables[variable_wave][variable_wave] = <span class="number">1</span>;</span><br><span class="line">            model.constraints[variable_wave] = &#123;</span><br><span class="line">                <span class="string">"min"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"max"</span>: <span class="number">1</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(results.data[<span class="string">"current_value"</span>] == <span class="string">" "</span> || results.data[<span class="string">"current_value"</span>] == <span class="literal">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">var</span> variable_current = <span class="string">"v"</span> + idx + <span class="string">"3"</span>;</span><br><span class="line">            data_input[variable_current] = results.data[<span class="string">"current_value"</span>];</span><br><span class="line">            model.ints[variable_current] = <span class="number">1</span>;</span><br><span class="line">            model.variables[variable_current] = &#123;</span><br><span class="line">                <span class="string">"value"</span>: results.data[<span class="string">"current_value"</span>] * results.data[<span class="string">"current_count"</span>] * freq,</span><br><span class="line">                <span class="string">"count"</span>: results.data[<span class="string">"current_count"</span>]</span><br><span class="line">            &#125;;</span><br><span class="line">            model.variables[variable_current][variable_current] = <span class="number">1</span>;</span><br><span class="line">            model.constraints[variable_current] = &#123;</span><br><span class="line">                <span class="string">"min"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"max"</span>: <span class="number">1</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        idx++;</span><br><span class="line">    &#125;,</span><br><span class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">results, parser</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(<span class="built_in">document</span>.getElementById(<span class="string">"User"</span>).value));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(<span class="built_in">document</span>.getElementById(<span class="string">"battery"</span>).value));</span><br><span class="line">        <span class="keyword">var</span> limits = days * <span class="built_in">parseFloat</span>(<span class="built_in">document</span>.getElementById(<span class="string">"User"</span>).value) + <span class="built_in">parseInt</span>(<span class="built_in">document</span>.getElementById(<span class="string">"battery"</span>).value);</span><br><span class="line">        model.constraints[<span class="string">"value"</span>] = &#123;</span><br><span class="line">            <span class="string">"min"</span>: limits</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(model);</span><br><span class="line">        result = solver.Solve(model);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> wind_limit = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">var</span> light_limit = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">var</span> wave_limit = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">var</span> current_limit = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> result) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data_input.hasOwnProperty(key)) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(key + <span class="string">" -&gt; "</span> + data_input[key]);</span><br><span class="line">                <span class="keyword">switch</span> (<span class="built_in">parseInt</span>(key.slice(<span class="number">-1</span>))) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">if</span> (wind_limit == <span class="number">-1</span>) wind_limit = data_input[key];</span><br><span class="line">                        <span class="keyword">if</span> (data_input[key] &lt;= wind_limit) wind_limit = data_input[key];</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//light</span></span><br><span class="line">                        <span class="keyword">if</span> (light_limit == <span class="number">-1</span>) light_limit = data_input[key];</span><br><span class="line">                        <span class="keyword">if</span> (data_input[key] &lt;= light_limit) light_limit = data_input[key];</span><br><span class="line">                        <span class="comment">// code block</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//wave</span></span><br><span class="line">                        <span class="keyword">if</span> (wave_limit == <span class="number">-1</span>) wave_limit = data_input[key];</span><br><span class="line">        <span class="keyword">if</span> (data_input[key] &lt;= wave_limit) wave_limit = data_input[key];</span><br><span class="line">                        <span class="comment">// code block</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>: <span class="comment">//current</span></span><br><span class="line">                        <span class="keyword">if</span> (current_limit == <span class="number">-1</span>) current_limit = data_input[key];</span><br><span class="line">                        <span class="keyword">if</span> (data_input[key] &lt;= current_limit) current_limit = data_input[key];</span><br><span class="line">                        <span class="comment">// code block</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="comment">// code block</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h2><p>Basically, this page is served as a Github page, you could visit at <a href="energy.shaokang.ga">energy.shaokang.ga</a>.</p><p>This is a pure static page with JavaScript. So anybody is able to host it easily on your own. If you don’t need to see some 3d effects, just download and click on each file would work. 3D effects require some cross-server interaction.</p><p>To run it and see the 3d effects, the way I use is to install <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a> at first. Then install the http-server using <code>npm install --global http-server</code>. Then do the following in any directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ShaokangJiang/energy.git</span><br><span class="line"><span class="built_in">cd</span> energy</span><br><span class="line">http-server</span><br></pre></td></tr></table></figure><p>Then go to browser and go to <code>127.0.0.1:8080</code> should work.</p><h2 id="data-format"><a class="markdownIt-Anchor" href="#data-format"></a> Data format:</h2><h4 id="simulation-data"><a class="markdownIt-Anchor" href="#simulation-data"></a> Simulation data</h4><p>Header should be the same, <code>User_Usage</code> is not required but recommend. Each field represent the value sensor received.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Time,Wind_Speed,Light_H,Wave_Hight,Wave_Period,Current_Speed,User_Usage</span><br><span class="line">0,5.405,1213.072,3.591,9.104,1.846,501.5935</span><br><span class="line">0.2,8.157,1191.057,3.022,10.431,1.908,497.0755</span><br><span class="line">0.4,6.012,1197.794,1.709,8.784,1.936,503.0145</span><br><span class="line">0.6,6.477,1205.489,2.1,9.857,1.858,499.4511</span><br></pre></td></tr></table></figure><p>Download a sample from <a href="https://github.com/ShaokangJiang/energy/blob/master/sample/simulation%20data.csv" target="_blank" rel="noopener">here</a>.</p><h4 id="optimization-data"><a class="markdownIt-Anchor" href="#optimization-data"></a> Optimization data</h4><p>Header should be the same, <code>idx</code> is not required. Each category has a value component recoding the amount of power produced in unit time. Each count means the possibility of happening. Because we need to use a KWH = b KW * s/3600 to calculate energy produced. The count field has to be integer. We could use the possibility * a factor to make it become integer. And the sum of each count should be the same.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">idx,wind_value,wind_count,light_value,light_count,wave_value,wave_count,current_value,current_count</span><br><span class="line">0,4962654.905,189,100.8496541,45,485.3900022,222,71501.61128,105</span><br><span class="line">1,424133.8855,45,105.8598321,124,328.6975665,43,49752.79798,187</span><br><span class="line">2,3414695.961,18,113.1989172,130,438.1380705,33,35910.75581,12</span><br><span class="line">3,7346795.761,90,116.4237558,11,483.7242291,24,48819.12566,25</span><br><span class="line">4,4033868.032,20,105.5786618,25,226.1068017,14,1611.378029,35</span><br><span class="line">5, , ,106.0583865,19,364.8009734,10,19265.12771,1</span><br></pre></td></tr></table></figure><p>Download a sample from <a href="https://github.com/ShaokangJiang/energy/blob/master/sample/OptimizationData.csv" target="_blank" rel="noopener">here</a>.</p><h2 id="generate-fake-simulation-and-optimization-data"><a class="markdownIt-Anchor" href="#generate-fake-simulation-and-optimization-data"></a> Generate Fake Simulation and optimization data</h2><h4 id="fake-simulation-data"><a class="markdownIt-Anchor" href="#fake-simulation-data"></a> Fake simulation data</h4><p>Use java code below to generate fake simulation data(to be used in run page).</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Random r = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  FileWriter a = <span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(<span class="string">"1.csv"</span>));</span><br><span class="line">  a.write(<span class="string">"Wind_Speed,Light_H,Wave_Hight,Wave_Period,Current_Speed\r\n"</span>);</span><br><span class="line">  <span class="keyword">double</span> time = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(time&lt;<span class="number">36</span>) &#123;</span><br><span class="line">    a.write(generateNormalVar(<span class="number">8</span>,<span class="number">2</span>)+<span class="string">","</span>+generateNormalVar(<span class="number">1200</span>,<span class="number">50</span>)+</span><br><span class="line">        <span class="string">","</span>+generateNormalVar(<span class="number">2.5</span>,<span class="number">0.25</span>)+<span class="string">","</span>+generateNormalVar(<span class="number">9</span>,<span class="number">0.5</span>)+<span class="string">","</span>+generateNormalVar(<span class="number">2</span>,<span class="number">0.5</span>)+<span class="string">"\r\n"</span>);</span><br><span class="line">    time+=<span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  a.flush();</span><br><span class="line">  a.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * N(a,b)</span></span><br><span class="line"><span class="comment"> * center,distribution</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateNormalVar</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">double</span> x = Math.sqrt(b)*r.nextGaussian()+a;</span><br><span class="line">  r.nextGaussian();</span><br><span class="line">  <span class="keyword">return</span> String.format(<span class="string">"%.3f"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fake-optimization-data"><a class="markdownIt-Anchor" href="#fake-optimization-data"></a> Fake optimization data</h4><ul><li><p>To make the input source be easy to manage, represent and maintain. We could save them in the same file, if no enough data for a cell, leave it empty would be fine and recommended.</p></li><li><p>idx is not required but recommended</p></li><li><p>This generation code might be good enough as this is not the real case</p></li><li><p>header: idx,wind_value,wind_count,light_value,light_count,wave_value,wave_count,current_value,current_count</p></li></ul><p>Use java code below to generate fake optimization data(to be used in start page):</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  FileWriter a = <span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(<span class="string">"1.csv"</span>));</span><br><span class="line">a.write(<span class="string">"idx,wind_value,wind_count,light_value,light_count,wave_value,wave_count,current_value,current_count\r\n"</span>);</span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> year = <span class="number">365</span>;</span><br><span class="line">  <span class="keyword">int</span> wind_count=year,light_count=year,wave_count=year,current_count=year;</span><br><span class="line">  <span class="keyword">while</span>(wind_count&gt;<span class="number">0</span> || light_count&gt;<span class="number">0</span> || wave_count&gt;<span class="number">0</span> || current_count&gt;<span class="number">0</span> ) &#123;</span><br><span class="line">    <span class="keyword">int</span> wind_count_=generateRandomIntegerIn(wind_count),light_count_=generateRandomIntegerIn(light_count),</span><br><span class="line">        wave_count_=generateRandomIntegerIn(wave_count),current_count_=generateRandomIntegerIn(current_count);</span><br><span class="line">    wind_count -= wind_count_;</span><br><span class="line">    light_count -= light_count_;</span><br><span class="line">    wave_count -= wave_count_;</span><br><span class="line">    current_count -= current_count_;</span><br><span class="line">    <span class="keyword">if</span>(wind_count_==<span class="number">0</span>&amp;&amp;light_count_==<span class="number">0</span>&amp;&amp;wave_count_==<span class="number">0</span>&amp;&amp;current_count_==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">double</span> Wind_Speed=generateRandomDoubleIn(<span class="number">4</span>,<span class="number">15</span>),Light_H=generateRandomDoubleIn(<span class="number">1100</span>,<span class="number">1300</span>),</span><br><span class="line">        Wave_Hight=generateRandomDoubleIn(<span class="number">2</span>,<span class="number">3</span>),Wave_Period=generateRandomDoubleIn(<span class="number">7</span>,<span class="number">11</span>),</span><br><span class="line">        Current_Speed=generateRandomDoubleIn(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">    System.out.println(count+<span class="string">""</span>+wind_count+<span class="string">""</span>+light_count+<span class="string">""</span>+wave_count+<span class="string">""</span>+current_count+<span class="string">""</span>);</span><br><span class="line">    a.write(count + <span class="string">","</span>+ (wind_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">2866</span>*Wind_Speed*Wind_Speed*Wind_Speed) +<span class="string">","</span>+(wind_count_ == <span class="number">0</span> ? <span class="string">" "</span> : wind_count_) +<span class="string">","</span>+</span><br><span class="line">          (light_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">0.09</span>*Light_H) +<span class="string">","</span>+(light_count_ == <span class="number">0</span> ? <span class="string">" "</span> : light_count_) +<span class="string">","</span>+</span><br><span class="line">        (wave_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">6.6</span>*Wave_Hight*Wave_Hight*Wave_Period)+<span class="string">","</span>+(wave_count_ == <span class="number">0</span> ? <span class="string">" "</span> : wave_count_)+<span class="string">","</span>+</span><br><span class="line">          (current_count_ == <span class="number">0</span> ? <span class="string">" "</span> : <span class="number">1254</span>*Current_Speed*Current_Speed*Current_Speed )+<span class="string">","</span>+(current_count_ == <span class="number">0</span> ? <span class="string">" "</span> : current_count_)+<span class="string">"\r\n"</span>);</span><br><span class="line">    count++;</span><br><span class="line">  &#125;</span><br><span class="line">  a.flush();</span><br><span class="line">  a.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0~h</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">generateRandomIntegerIn</span><span class="params">(<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> ThreadLocalRandom.current().nextInt(<span class="number">0</span>, h + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">generateRandomDoubleIn</span><span class="params">(<span class="keyword">int</span> Min, <span class="keyword">int</span> Max)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> Min + (Math.random() * ((Max - Min) + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><p><span>Each field means the threshold of each component except wave. In the case of wave, the threshold needs to be pre-calculated using </span>$H^2T$. <span>User usage is in kwh per day or unit time, the unit time refers to the refresh frequency, which will be used to calculate energy produced in the frame of time.</span></p><p>The way to calculate energy produced per unit time: a KWH = b KW*s/3600, a is the result, b is the current power, a is the calculated energy. s is the refresh frequency. Refresh frequency in this form is in ms(milliseconds).</p><p>In the manual setting, you are able to choose to provide user usage data in the future, usually this means to have a column of data recording user consumption per unit time, it will be used as a source of consumming power. If that file doesn't have user usage, you could set it at here. In the auto generate mode, you have to provide one to let us find the optimal solution(guess a possible one would be fine).</p><h3 id="calculation-equation"><a class="markdownIt-Anchor" href="#calculation-equation"></a> Calculation Equation</h3><p><b>Wave</b>: $P_{total}=0.6*11*H^2T=6.6H^2T$ <span>H - height of wave T - period</span></p><p><b>Ocean Current</b>: $P=\frac{\rho v^3 S C_p}{2}=\frac{1050 v^3 \pi1.3^2* 0.45}{2}=1254v^3$ <span>P is the energy captured by the unit, ρ is the fluid density, V is the fluid velocity, and S is the swept area of the impeller</span>$C_p$<span> is the energy utilization coefficient</span></p><p><b>Light</b>: $P=\frac{798*H_A}{365*24}=0.09*H_A, H_A$ <span>Total solar radiation per unit area</span></p><p><b>Wind</b>: $P=\frac{\rho v^3 S C_p}{2}=\frac{1.293 v^3 9852* 0.45}{2}=2866v^3$ <span>P is the energy captured by the unit, ρ is the fluid density, V is the fluid velocity, and S is the swept area of the impeller</span>$C_p$<span> is the energy utilization coefficient</span></p><h2 id="requirement"><a class="markdownIt-Anchor" href="#requirement"></a> Requirement</h2><p>Because I used the class technique to build LinkedList to use in generating charts, IE is not supported. And there are some requirements for the majority browser as well, see compatibility data at <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Browser_compatibility" target="_blank" rel="noopener">NPM official site</a>. Other than the LinkedList, most of features should work in IE 11.</p><h2 id="js-libraries-used"><a class="markdownIt-Anchor" href="#js-libraries-used"></a> JS libraries used</h2><ul><li><a href="https://echarts.apache.org/en/index.html" target="_blank" rel="noopener">echarts</a></li><li><a href="https://materializecss.com/" target="_blank" rel="noopener">Materialcss</a></li><li><a href="https://aframe.io/" target="_blank" rel="noopener">A-frame</a></li><li><a href="https://ar-js-org.github.io/AR.js-Docs/" target="_blank" rel="noopener">AR.js</a></li><li><a href="https://www.papaparse.com/" target="_blank" rel="noopener">PapaParse</a></li><li><a href="https://jquery.com/" target="_blank" rel="noopener">Jquery</a></li><li><a href="https://github.com/tizzle/aframe-orbit-controls-component" target="_blank" rel="noopener">aframe-orbit-controls-component</a></li><li><a href="https://github.com/JWally/jsLPSolver" target="_blank" rel="noopener">jsLPSolver</a></li></ul><h2 id="changelog"><a class="markdownIt-Anchor" href="#changelog"></a> ChangeLog</h2><ol><li><p>5/25/2020 Core running function finished &amp; Time field in input simulation file is not required</p></li><li><p>5/26/2020 Multi-language added</p></li><li><p>5/27/2020 Optimize font and icon loading</p></li><li><p>5/29/2020 Optimization to find best history result function added &amp; multi-file reading is not allowed in run page now</p></li><li><p>5/30/2020 User can now use the first 30 seconds of data to run and optimize threshold.</p></li><li><p>5/31/2020 More verification, notification added. Framework for displaying VR and AR is ready. Supported via <a href="https://energy.shaokang.ga/test.html" target="_blank" rel="noopener">static webpage</a>, <a href="https://energy.shaokang.ga/qr.png" target="_blank" rel="noopener">qrCode</a>, and also in running page.</p><p>For AR in static page, your device needs meet WebXR requirement:</p><blockquote><p>AR is also a standard and you can experiment today on <strong>Android ARCore compatible</strong> devices and <strong>Chrome 79</strong> or newer.<br>Enable the experimental WebXR AR module in <strong>chrome://flags</strong></p></blockquote></li><li><p>6/6/2020 All parts of 3d model is done.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIP </tag>
            
            <tag> jsLpsolver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>639 project</title>
      <link href="/2020/projects/639-project/"/>
      <url>/2020/projects/639-project/</url>
      
        <content type="html"><![CDATA[<p>In the final project of this course, I tried to focus on finding the correct product rating without golden set and read different papers. At last, I focused on <em>Avoiding Imposters and Delinquents: Adversarial Crowdsourcing and Peer Prediction</em> and write a reading report about it. The original file is in Latex, the following is the generated file. Click read more to see the detail.</p><a id="more"></a> <img src="/2020/projects/639-project/Final_Page_1.jpg"> <img src="/2020/projects/639-project/Final_Page_2.jpg"> <img src="/2020/projects/639-project/Final_Page_3.jpg"> <img src="/2020/projects/639-project/Final_Page_4.jpg"> <img src="/2020/projects/639-project/Final_Page_5.jpg"> <img src="/2020/projects/639-project/Final_Page_6.jpg"> <img src="/2020/projects/639-project/Final_Page_7.jpg">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Optimal Energy Production</title>
      <link href="/2020/Optimal-Energy-Production/"/>
      <url>/2020/Optimal-Energy-Production/</url>
      
        <content type="html"><![CDATA[<p>A simple limitation is too less sometime. If we are using the fixed threshold, then we could simply let threshold to be the time that consumption is equal to usage. And we are not able to handle the battery capacity as well. This might not meet the real case. In the real case, equipment will use large amount of energy when they start. So the model should be able to predict. Thought wind does change everyday, but it is still some kind of predictable. So, we could train a model from the history data and then predict the wind speed in the future, like one year. We could use <a href="https://www.tensorflow.org/js/tutorials/training/linear_regression" target="_blank" rel="noopener">TensorFlow.js</a> for training. Then Solve an optimization problem to see what would be the best time to start the engine and what would be the best time to stop the engine. Or solving an optimization problem to find the threshold to turn on or off the equipment would also better than a simple one.</p><a id="more"></a><h2 id="normal-count-model"><a class="markdownIt-Anchor" href="#normal-count-model"></a> Normal Count Model</h2><h3 id="define-variables"><a class="markdownIt-Anchor" href="#define-variables"></a> Define variables</h3><p>n : number of days</p><p>c : the normal energy consumption per unit time</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.664392em"></span><span class="strut bottom" style="height:.664392em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the status code to identify if we need to turn on the machine in this day/unit time.</p><p>C = {0,1,2}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.664392em"></span><span class="strut bottom" style="height:.664392em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off.</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.68611em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the energy produced per day/unit time</p><h3 id="optimization-model"><a class="markdownIt-Anchor" href="#optimization-model"></a> Optimization Model</h3>\begin{equation} \begin{split} &\text{Maximize } & \sum_{i\in n}W_iS_i-c\sum_{i\in n}C_iS_i\\ &\text{Subject to } & C_i=S_i-S_{i-1}+1 \ \forall i\in \{2,\cdots,n\}\\ & & 0 \le C_i \le 2 \ \forall i\in \{1,\cdots,n\}\\ & & 0 \le S_i \le 1 \ \forall i\in \{1,\cdots,n\}\\ \end{split} \end{equation}<p>Use MIP to solve it</p><h3 id="sample-data"><a class="markdownIt-Anchor" href="#sample-data"></a> Sample data</h3><p>Sample data should be in csv format, each column contains different information. Only wind data is represented in the section below</p><p>u is the x component of wind, v is the y component of the wind. Final wind speed is calculated by using <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>s</mi><mo>=</mo><msqrt><mrow><msup><mi>u</mi><mn>2</mn></msup><mo>+</mo><msup><mi>v</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">ws = \sqrt{u^2+v^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.913389em"></span><span class="strut bottom" style="height:1.04em;vertical-align:-.12661100000000008em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">s</span><span class="mrel">=</span><span class="sqrt mord"><span class="sqrt-sign" style="top:-.07338899999999993em"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="vlist"><span style="top:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em">​</span></span><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit">u</span><span class="vlist"><span style="top:-.289em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">v</span><span class="vlist"><span style="top:-.289em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:-.8333889999999999em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em">​</span></span>​</span></span></span></span></span></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,u,v</span><br><span class="line">0.2,12,15</span><br><span class="line">0.3,16,12</span><br><span class="line">0.5,12,16</span><br></pre></td></tr></table></figure><p>If we need to make this simpler or we are not able to collect related data for each type of energy, we could also use data in the below format:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,var</span><br><span class="line">0.2,12</span><br><span class="line">0.3,16</span><br><span class="line">0.5,12</span><br></pre></td></tr></table></figure><p><code>var</code> is the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way, e.g. wind speed.</p><h3 id="possible-gams-code"><a class="markdownIt-Anchor" href="#possible-gams-code"></a> Possible GAMS code</h3><h3 id="interpret-to-js"><a class="markdownIt-Anchor" href="#interpret-to-js"></a> Interpret to Js</h3><h3 id="analyze"><a class="markdownIt-Anchor" href="#analyze"></a> Analyze</h3><h4 id="pros"><a class="markdownIt-Anchor" href="#pros"></a> Pros</h4><ul><li>Considered the immediate on will consume much more energy.</li><li>model could be extended to handle all power source in this single model</li></ul><h4 id="cons"><a class="markdownIt-Anchor" href="#cons"></a> Cons</h4><ul><li>wind is not possible to be predicted, so turning on and off has less significance as the situation in the next year might be different.</li></ul><h2 id="expected-count-model"><a class="markdownIt-Anchor" href="#expected-count-model"></a> Expected Count Model</h2><p>Because the wind is hard to predict, especially in some unstable situation. And battery could only store a limited amount of energy. Using statistic data might be a better way to calculate. We could calculate the expectation of total energy and find a threshold for each type of energy to measure maximize possible energy production instead of in a specific day.</p><p>In this setting, we only need to run the optimization for one turn and could overcome a lot of unnecessary production.</p><h3 id="sample-data-before-analyze"><a class="markdownIt-Anchor" href="#sample-data-before-analyze"></a> Sample data before analyze</h3><table><thead><tr><th>Index</th><th>Val(W)</th><th>Possibility(%)</th><th>Day count</th><th>Expectation</th></tr></thead><tbody><tr><td>0</td><td>65.2</td><td>8</td><td>2</td><td>5.216/130.4</td></tr><tr><td>1</td><td>32.8</td><td>4</td><td>1</td><td>1.312/32.8</td></tr><tr><td>2</td><td>23.3</td><td>4</td><td>1</td><td>0.932/23.3</td></tr><tr><td>…</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>This data needs to be purified ahead of time, for those cases that produced energy is less than equipment consumption, we could simply set its total to 0.</p><h3 id="define-variables-2"><a class="markdownIt-Anchor" href="#define-variables-2"></a> Define variables</h3><p>J : type of energy, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>∈</mo></mrow><annotation encoding="application/x-tex">J\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.72243em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mrel">∈</span></span></span></span> {wind, water, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> }</p><p>N : value index, 1, 2, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span>.</p><p>C = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>J</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{wind}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>=10*2=20)</p><p>U = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.68611em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span>: Total user consumption</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model.</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, to indicate I should turn on wind on this statistic data or not</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\in \mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.72521em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span> : The battery charging limitation.</p><h3 id="optimization-model-2"><a class="markdownIt-Anchor" href="#optimization-model-2"></a> Optimization Model</h3>\begin{equation}\begin{split}&\text{Maximize } & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}\\& \text{Subject to}\ & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}-U\le B\end{split}\end{equation}<p>Use MIP to solve it</p><h3 id="sample-data-2"><a class="markdownIt-Anchor" href="#sample-data-2"></a> Sample data</h3><p><a id="2"></a></p><p>Sample data should be in csv format, each column contains different information. Data defined in teh previous section is acceptable but not efficient. Only wind data is represented in the section below.</p><p>If data input is in a range, then we are going to use median of each group. Like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eType,Range (mph), Total</span><br><span class="line">1, 1.3 -    4,3.3</span><br><span class="line">1,   4 -    8,23.5</span><br><span class="line">1,   8 -   13,46.4</span><br></pre></td></tr></table></figure><p>Or the specific data and occurrence count in csv file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eType,val (mph), Total</span><br><span class="line">1, 1.3,3.3</span><br><span class="line">1,   4,23.5</span><br><span class="line">1,   8,46.4</span><br></pre></td></tr></table></figure><p><code>Total</code> could be either the possibility this data occurs or the number of days.</p><p><code>Range</code> or <code>val</code> could be the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way, e.g. wind speed.</p><h3 id="possible-gams-code-2"><a class="markdownIt-Anchor" href="#possible-gams-code-2"></a> Possible GAMS code</h3><h3 id="interpret-to-js-2"><a class="markdownIt-Anchor" href="#interpret-to-js-2"></a> Interpret to Js</h3><h3 id="analyze-2"><a class="markdownIt-Anchor" href="#analyze-2"></a> Analyze</h3><h4 id="pros-2"><a class="markdownIt-Anchor" href="#pros-2"></a> Pros</h4><ul><li>Use expectation to simulate a better estimate of wind speed in different scenario</li><li>Save calculation</li></ul><h4 id="cons-2"><a class="markdownIt-Anchor" href="#cons-2"></a> Cons</h4><ul><li>Data has higher wind speed would usually has less possibility. Then the model won’t focus on them, so they might be ignored in the model. (Too big wind might harm the equipment, so this make sense sometime)</li><li>User consumption is not perfect estimate</li></ul><h2 id="modified-version-for-normal-count"><a class="markdownIt-Anchor" href="#modified-version-for-normal-count"></a> Modified Version for Normal Count</h2><p>Battery limitation is a long term limitation, each one has some kind of relationship. Has battery limitation and want to find global optimal.</p><h3 id="variables"><a class="markdownIt-Anchor" href="#variables"></a> Variables</h3><p>J : type of energy, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>∈</mo></mrow><annotation encoding="application/x-tex">J\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.72243em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mrel">∈</span></span></span></span> {wind, water, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> }</p><p>N : number of days, $\in $ {1,2,3, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> ,n}</p><p>c = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>J</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{wind}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>=10*2=20)</p><p>U = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">N</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: User consumption per unit time N</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the status code to identify if we need to turn on the machine in this day/unit time.</p><p>C = {0,1,2}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off.</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the energy produced per day/unit time for j equipment</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">\in \mathbf{R}^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.880431em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">N</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> : The battery charging limitation. With <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">B_0=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.05017em">B</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05017em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span></p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\in \mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.72521em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span> : Constant to represent the battery charging limitation.</p><h3 id="optimization-model-3"><a class="markdownIt-Anchor" href="#optimization-model-3"></a> Optimization Model</h3>\begin{equation} \begin{split} &\text{Maximize } & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{j\in J}c_j\sum_{i\in N}C_{ij}S_{ij}\\ &\text{Subject to } & C_{ij}=S_{ij}-S_{i-1,j}+1 \ \forall i\in \{2,\cdots,n\}\\ & & 0 \le C_{ij} \le 2 \ \forall i\in N j\in J\\ & & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\ & & B_i\le B \ \forall i\in \{2,\cdots, n\}\\ & & B_i=B_{i-1}+\sum_{j\in J}W_{ij}S_{ij}-\sum_{j\in J}c_jC_{ij}S_{ij}-U_i \end{split} \end{equation}<p>Use MIP to solve it</p><h3 id="sample-data-3"><a class="markdownIt-Anchor" href="#sample-data-3"></a> Sample data</h3><p><a id="1"></a></p><p>Sample data should be in csv format, each column contains different information. Only wind data is represented in the section below</p><p>u is the x component of wind/other type of energy, v is the y component of the wind. Final wind speed is calculated by using <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>s</mi><mo>=</mo><msqrt><mrow><msup><mi>u</mi><mn>2</mn></msup><mo>+</mo><msup><mi>v</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">ws = \sqrt{u^2+v^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.913389em"></span><span class="strut bottom" style="height:1.04em;vertical-align:-.12661100000000008em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">s</span><span class="mrel">=</span><span class="sqrt mord"><span class="sqrt-sign" style="top:-.07338899999999993em"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="vlist"><span style="top:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em">​</span></span><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit">u</span><span class="vlist"><span style="top:-.289em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">v</span><span class="vlist"><span style="top:-.289em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span><span style="top:-.8333889999999999em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em">​</span></span>​</span></span></span></span></span></span> .</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,eType,u,v</span><br><span class="line">0.2,1,12,15</span><br><span class="line">0.3,1,16,12</span><br><span class="line">0.5,1,12,16</span><br></pre></td></tr></table></figure><p>If we need to make this simpler or we are not able to collect related data for each type of energy, we could also use data in the below format:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Time,eType,var</span><br><span class="line">0.2,1,12</span><br><span class="line">0.3,1,16</span><br><span class="line">0.5,1,12</span><br></pre></td></tr></table></figure><p><code>eType</code> is the type of energy, 1 means wind, 2 means sun …</p><p><code>var</code> is the input energy or data used to calculate. Like we are able to calculate the final energy based on this result in some way.</p><h2 id="let-thresholds-high"><a class="markdownIt-Anchor" href="#let-thresholds-high"></a> Let thresholds high</h2><p>To overcome the cons that some high energy production case will be ignored in the previous cases, use this model to find it. Instead of previous cases, we want to minimize the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sum_{i,j}S_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.75em"></span><span class="strut bottom" style="height:1.186118em;vertical-align:-.436118em"></span><span class="base textstyle uncramped"><span class="mop"><span class="op-symbol small-op mop" style="top:-.0000050000000000050004em">∑</span><span class="vlist"><span style="top:.30001em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, to use as many as high production case as we could. So the thresholds could be as high as possible.</p><h3 id="variables-2"><a class="markdownIt-Anchor" href="#variables-2"></a> Variables</h3><p>J : type of energy, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>∈</mo></mrow><annotation encoding="application/x-tex">J\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.72243em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mrel">∈</span></span></span></span> {wind, water, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> }</p><p>N : number of days, $\in $ {1,2,3, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> ,n}</p><p>c = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>J</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{wind}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>=10*2=20)</p><p>U = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">N</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: User consumption per unit time N</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the status code to identify if we need to turn on the machine in this day/unit time.</p><p>C = {0,1,2}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the counter to count and analyze the normal energy consumption per day/unit time. 2 stand for the unit time that this machine needs to be turned on(as more energy needs to be consumed in the turning on process). 1 identify as daily normal consumption. 0 identify this machine is turned off.</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the energy produced per day/unit time for j equipment</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">\in \mathbf{R}^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.880431em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">N</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> : The amount of energy battery has. With <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mn>0</mn></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">B_0=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.05017em">B</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05017em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mrel">=</span></span></span></span>user defined, could be 70% of the battery size</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\in \mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.72521em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span> : Constant to represent the battery charging limitation.</p><h3 id="optimization-model-4"><a class="markdownIt-Anchor" href="#optimization-model-4"></a> Optimization Model</h3>\begin{equation}\begin{split}&\text{Minimize } & \sum_{i,j}C_{ij}S_{ij}\\&\text{Subject to } & C_{ij}=S_{ij}-S_{i-1,j}+1 \ \forall i\in \{2,\cdots,n\}\\& & 0 \le C_{ij} \le 2 \ \forall i\in N j\in J\\& & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & B_i\ge B \ \forall i\in \{2,\cdots, n\}\\& & B_i=B_{i-1}+\sum_{j\in J}W_{ij}S_{ij}-\sum_{j\in J}c_jC_{ij}S_{ij}-U_i\end{split}\end{equation}<p>Use MIP to solve it</p><p>We could use default value if no applied answer found</p><h3 id="sample-data-4"><a class="markdownIt-Anchor" href="#sample-data-4"></a> Sample data</h3><p>Data format is the same as format defined in <a href="#1">Modified Version for Normal Count</a>.</p><h3 id="possible-gams-code-3"><a class="markdownIt-Anchor" href="#possible-gams-code-3"></a> Possible GAMS code</h3><h3 id="interpret-to-js-3"><a class="markdownIt-Anchor" href="#interpret-to-js-3"></a> Interpret to Js</h3><h3 id="analyze-3"><a class="markdownIt-Anchor" href="#analyze-3"></a> Analyze</h3><h4 id="pros-3"><a class="markdownIt-Anchor" href="#pros-3"></a> Pros</h4><ul><li>We will use as much as high production scenario as we could</li><li>Because thresholds is high, a lot of unexpected energy consumption in the turning on process could be eliminated.</li></ul><h4 id="cons-3"><a class="markdownIt-Anchor" href="#cons-3"></a> Cons</h4><ul><li>Total energy is not maximized(This makes sense, as we only have a limited energy storage)</li></ul><h2 id="expected-count-for-let-thresholds-high-case"><a class="markdownIt-Anchor" href="#expected-count-for-let-thresholds-high-case"></a> Expected Count for Let thresholds high case</h2><p>Data source definition is the same as the previous situation</p><h3 id="define-variables-3"><a class="markdownIt-Anchor" href="#define-variables-3"></a> Define variables</h3><p>J : type of energy, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>∈</mo></mrow><annotation encoding="application/x-tex">J\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.72243em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mrel">∈</span></span></span></span> {wind, water, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span> }</p><p>N : value index, 1, 2, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.31em"></span><span class="strut bottom" style="height:.31em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="minner">⋯</span></span></span></span>.</p><p>C = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mi>J</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>: the normal energy consumption per unit time for each producer (Need to consider as a combination of multiple equipments, like: if we have two wind machine(user is able to define this in control), each machine will consume 10 W. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{wind}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.02691em">w</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>=10*2=20)</p><p>U = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.68611em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span>: Total user consumption</p><p>W = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, the expected energy(total in above table) produced in each value index, either pre-calculated or calculate in model.</p><p>S = {0,1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.8413309999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, to indicate I should turn on wind on this statistic data or not</p><p>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mrow><mi mathvariant="bold">R</mi></mrow></mrow><annotation encoding="application/x-tex">\in \mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68611em"></span><span class="strut bottom" style="height:.72521em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span></span></span></span> : The battery charging limitation.</p><p>D <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><msup><mrow><mi mathvariant="bold">R</mi></mrow><mrow><mi>J</mi><mo separator="true">,</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\in \mathbf{R}^{J,N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8413309999999999em"></span><span class="strut bottom" style="height:.880431em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span><span><span class="mord textstyle uncramped"><span class="mord mathbf">R</span></span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:.09618em">J</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.10903em">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>, indicate the day count each value index, either pre-calculated or calculate in model.</p><h3 id="optimization-model-5"><a class="markdownIt-Anchor" href="#optimization-model-5"></a> Optimization Model</h3>\begin{equation}\begin{split}&\text{Minimize } & \sum_{i\in N}\sum_{j\in J}D_{ij}S_{ij}\\& \text{Subject to}\ & 0 \le S_{ij} \le 1 \ \forall i\in N j\in J\\& & \sum_{i\in N}\sum_{j\in J}W_{ij}S_{ij}-\sum_{i\in N}\sum_{j\in J}C_{j}S_{ij}-U\ge B\end{split}\end{equation}<p>Use MIP to solve it</p><h3 id="sample-data-5"><a class="markdownIt-Anchor" href="#sample-data-5"></a> Sample data</h3><p>Data format is the same as format defined in <a href="#2">Expected Count Model</a>.</p><h3 id="possible-gams-code-4"><a class="markdownIt-Anchor" href="#possible-gams-code-4"></a> Possible GAMS code</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">$ontext</span></span><br><span class="line"><span class="comment">generating gdx</span></span><br><span class="line"><span class="comment">gdxxrw E:\test\OptimizationData.xlsx par=data rng=OptimizationData!A1:I12 cDim=1 rDim=1 set=row rng=OptimizationData!A1:I1 cDim=1 set=idx rng=OptimizationData!A2:A12 rDim=1</span></span><br><span class="line"><span class="comment">assume 365 hrs in total to make calculation simpler</span></span><br><span class="line"><span class="comment">Need to add user consumption in the future</span></span><br><span class="line"><span class="comment">//permit partially open, for case when half of days needs to be opened.</span></span><br><span class="line"><span class="comment">MIP is reqired, as we are calculating the expectation, I only know this might happen, but I don't know and no need to know the exact day to turn on or off the device.</span></span><br><span class="line"><span class="comment">So, it is saying we need to turn on this device at this energy level or not.</span></span><br><span class="line"><span class="comment">We can not half turn on the device</span></span><br><span class="line"><span class="comment">wind_count could be wind possibility</span></span><br><span class="line"><span class="comment">$offtext</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">sets</span> idx(*), row(*);</span><br><span class="line"><span class="keyword">parameter</span> data(idx, row);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> OptimizationData.gdx </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> idx row data</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alias</span>(idx,i);</span><br><span class="line"><span class="keyword">Sets</span></span><br><span class="line">       j(row) / wind_value,light_value,wave_value,current_value/ ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">scalar</span> U <span class="comment">"Total user consumption in 365 hrs"</span> /[<span class="number">2139300</span>*<span class="number">365</span>]/</span><br><span class="line">        B <span class="comment">"battery capacity"</span> /<span class="number">1000000000</span>/;</span><br><span class="line"></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variable</span> a(i,j);</span><br><span class="line"><span class="keyword">variable</span> k;</span><br><span class="line"><span class="keyword">equations</span> obj, limit, limitvar1, limitvar2;</span><br><span class="line"><span class="function"><span class="title">obj</span></span>..</span><br><span class="line">    k <span class="symbol">=e=</span> <span class="keyword">sum</span>(i,a(i,<span class="string">"wind_value"</span>)*data(i,<span class="string">"wind_count"</span>)+a(i,<span class="string">"light_value"</span>)*data(i,<span class="string">"light_count"</span>)+a(i,<span class="string">"wave_value"</span>)*data(i,<span class="string">"wave_count"</span>)+a(i,<span class="string">"current_value"</span>)*data(i,<span class="string">"current_count"</span>));</span><br><span class="line"><span class="function"><span class="title">limit</span></span>..</span><br><span class="line">    <span class="keyword">sum</span>(i, a(i,<span class="string">"wind_value"</span>)*data(i,<span class="string">"wind_count"</span>)*data(i,<span class="string">"wind_value"</span>)+a(i,<span class="string">"light_value"</span>)*data(i,<span class="string">"light_count"</span>)*data(i,<span class="string">"light_value"</span>)+a(i,<span class="string">"wave_value"</span>)*data(i,<span class="string">"wave_value"</span>)*data(i,<span class="string">"wave_count"</span>)+a(i,<span class="string">"current_value"</span>)*data(i,<span class="string">"current_value"</span>)*data(i,<span class="string">"current_count"</span>)) - U <span class="symbol">=g=</span> B;</span><br><span class="line"><span class="function"><span class="title">limitvar1</span>(<span class="params">i,j</span>)</span>..</span><br><span class="line">    a(i,j) <span class="symbol">=g=</span> <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="title">limitvar2</span>(<span class="params">i,j</span>)</span>..</span><br><span class="line">    a(i,j) <span class="symbol">=l=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">model</span> energy /<span class="keyword">all</span>/;</span><br><span class="line"><span class="keyword">solve</span> energy <span class="keyword">using</span> mip <span class="keyword">minimizing</span> k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">display</span> a.l;</span><br></pre></td></tr></table></figure><h3 id="analyze-4"><a class="markdownIt-Anchor" href="#analyze-4"></a> Analyze</h3><h4 id="pros-4"><a class="markdownIt-Anchor" href="#pros-4"></a> Pros</h4><ul><li>Use expectation to simulate a better estimate of wind speed in different scenario</li><li>Save calculation</li></ul><h4 id="cons-4"><a class="markdownIt-Anchor" href="#cons-4"></a> Cons</h4><ul><li>User consumption is not perfect estimate</li><li>Energy stored in battery is not perfectly estimated</li></ul><h2 id="last-thought"><a class="markdownIt-Anchor" href="#last-thought"></a> Last thought:</h2><p>Both model doesn’t consider extreme case, as people will still have control on the entire system and most of people won’t use this in extreme case.</p><p>To make all models become portable and not using too many calculation, I choose LP or MIP model, instead of building some better estimate model.</p><p>Battery has some specific charging and discharging curve, like this: <img src="https://i.stack.imgur.com/eltx3.png" alt></p><h2 id="need-discussion"><a class="markdownIt-Anchor" href="#need-discussion"></a> Need discussion</h2><ul><li><p>Do we know normal user consumption of energy?</p></li><li><p>If no history data provided, then use fixed threshold=energy consumed by equipment in normal life.</p></li><li><p>Another thought: Use a single line and calculate how many value is below the line, estimate and find the least number of turning on/off (Not possible, as turning off is a point but wind might remain low for a duration of time)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAMS </tag>
            
            <tag> MIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>From swing,awt to javafx</title>
      <link href="/2020/projects/From-swing-awt-to-javafx/"/>
      <url>/2020/projects/From-swing-awt-to-javafx/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>A JavaFx project</title>
      <link href="/2020/projects/A-JavaFx-project/"/>
      <url>/2020/projects/A-JavaFx-project/</url>
      
        <content type="html"><![CDATA[<p>This is a Group project done by me. I will talk about my design and usage instruction in the following space. Detailed implementation could be view at <a href="https://github.com/ShaokangJiang/A-JavaFX-project" target="_blank" rel="noopener">This repository</a>. This app is done solely by me.</p><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/A-JavaFX-project" target="_blank" rel="noopener">https://github.com/ShaokangJiang/A-JavaFX-project</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/A-JavaFX-project/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/A-JavaFX-project/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/A-JavaFX-project/archive/0.9.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/A-JavaFX-project/archive/0.9.zip</a></p><h2 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h2><a id="more"></a><h4 id="command-line-guide"><a class="markdownIt-Anchor" href="#command-line-guide"></a> Command Line Guide</h4><p>It is possible to run from command line or use command line version to interrupt with basic feature, including import. It has two mode, command line mode and command line start. In Command line start, you can specify your argument and then program will enter GUI automatically. In command line mode, you can decide the time you want to enter GUI interface.</p><h5 id="command-line-mode"><a class="markdownIt-Anchor" href="#command-line-mode"></a> Command line mode</h5><p>In this mode, you will see an interface like this in command mode:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Welcome to <span class="built_in">command</span> mode of this program. Because of the requirement of this assignment,</span><br><span class="line"> majority effort should be <span class="keyword">done</span> <span class="keyword">in</span> GUI. This part is only <span class="keyword">for</span> <span class="built_in">command</span> line import <span class="keyword">function</span>. </span><br><span class="line">Usage:  -f <span class="string">"path/to/file"</span> -- This file will be imported. Should be csv files. Seperate using ; <span class="keyword">if</span> there are multiple files</span><br><span class="line"> -d <span class="string">"path/to/file"</span> -- This will import any csv file <span class="keyword">in</span> the directory, <span class="keyword">if</span> any of them contain incorrect formatted data, no data will be imported </span><br><span class="line"> -h -- <span class="built_in">print</span> <span class="built_in">help</span> message </span><br><span class="line"> -g -- start GUI </span><br><span class="line"></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>To enter it:</p><blockquote><p><strong>Path to JavaFx:</strong> The path to the library directory to JavaFx. Sample, <code>/home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --<span class="keyword">module</span>-path <span class="string">"&lt;Path to Javafx&gt;"</span> --add-modules javafx.controls,javafx.fxml -jar executable.jar -c</span><br></pre></td></tr></table></figure><h5 id="command-line-start"><a class="markdownIt-Anchor" href="#command-line-start"></a> Command line start</h5><p>In this mode, it has two options, either import a directory of csv files or import a list of files separate with ‘;’;</p><p>To import a directory of csv files: use <code>-d</code> option, e.g. <code>-d \home\csv\</code>. To import a list of files separate with ‘;’, no option argument required, simple add absolute path of files and separate different files with ‘;’, e.g. <code>\home\csv\a.csv;\home\csv\b.csv</code></p><p>Program will start GUI automatically after importing.</p><p>To enter GUI with importing a list of files separate with ‘;’:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --<span class="keyword">module</span>-path <span class="string">"&lt;Path to Javafx&gt;"</span> --add-modules javafx.controls,javafx.fxml -jar executable.jar &lt;Path to csv file&gt;</span><br></pre></td></tr></table></figure><p>Or, start with importing a directory:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --<span class="keyword">module</span>-path <span class="string">"&lt;Path to Javafx&gt;"</span> --add-modules javafx.controls,javafx.fxml -jar executable.jar -d &lt;Path to csv directory&gt;</span><br></pre></td></tr></table></figure><h4 id="running"><a class="markdownIt-Anchor" href="#running"></a> Running</h4><h5 id="download-from-release-page-or-compile-from-source"><a class="markdownIt-Anchor" href="#download-from-release-page-or-compile-from-source"></a> Download from release page or compile from source.</h5><blockquote><p><strong>Path to JavaFx:</strong> The path to the library directory to JavaFx. Sample, <code>/home/openjfx-11.0.2_linux-x64_bin-sdk/javafx-sdk-11.0.2/lib</code></p></blockquote><h6 id="download-from-release-page-on-github"><a class="markdownIt-Anchor" href="#download-from-release-page-on-github"></a> Download from release page on Github:</h6><ol><li>Download <a href="https://openjfx.io/" target="_blank" rel="noopener">JavaFX</a> (their official website) and download <code>executable.jar</code> from release page</li><li><code>java --module-path &quot;&lt;Path to Javafx&gt;&quot; --add-modules javafx.controls,javafx.fxml -jar executable.jar</code></li></ol><h6 id="download-and-compile-from-source-page"><a class="markdownIt-Anchor" href="#download-and-compile-from-source-page"></a> Download and compile from source page:</h6><blockquote><p><strong>NOT RECOMMEND</strong> as too many arguments, dependencies and it is easy to be wrong</p></blockquote><h4 id="source-data"><a class="markdownIt-Anchor" href="#source-data"></a> Source data:</h4><p>Source data should be in the format, it means this farm uses those amount of milk in this date:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">date,id,weight</span><br><span class="line">2019-1-1,id 0,6760</span><br><span class="line">2019-1-1,id 1,8644</span><br><span class="line">2019-1-1,id 2,3547</span><br><span class="line">2019-1-2,id 0,6824</span><br></pre></td></tr></table></figure><h2 id="design"><a class="markdownIt-Anchor" href="#design"></a> Design</h2><p>An overall agreement of this design is that those function should not only work for this project but also for other project.</p><h4 id="basic-components"><a class="markdownIt-Anchor" href="#basic-components"></a> Basic components:</h4><img src="/2020/projects/A-JavaFx-project/2.png"><p>It contains the structure to use in this program.</p><h4 id="managerreport"><a class="markdownIt-Anchor" href="#managerreport"></a> Manager&amp;Report:</h4><img src="/2020/projects/A-JavaFx-project/3.png"><p>It could be the heart of this program’s non-GUI part, it contains method to handle with file, manage farmers.</p><p>Report part is to generate different GUI report and then let it show up in the major window, <code>Notification.java</code>.</p><h4 id="gui-components"><a class="markdownIt-Anchor" href="#gui-components"></a> GUI components:</h4><img src="/2020/projects/A-JavaFx-project/1.png"><p>Components that are not shown in the graph are two, <code>alert1.java</code>, <code>ChoiceWindow.java</code>. One component is the alert class to show various alerting information. <code>ChoiceWindow.java</code> has all window required for choosing. Such as choosing for filter categories. This is a helper class to generate interface for user to select filter or other categories they want. Such as, choosing which function you want to use to manage data</p><p>The other are major part either control or show interfaces to user. <code>Main.java</code> also has the responsibility to handle command line input.</p><h4 id="detailed-design"><a class="markdownIt-Anchor" href="#detailed-design"></a> Detailed design</h4><p>A detailed class by class design document and agreement could be view at here:</p><blockquote><p>This is the initial thought of design by me <strong>before</strong> the actual implementation, so the data structure used to store farmers has changed to <code>Hashmap</code> and there are lot of minor changes. To see the latest version, go to <a href="https://github.com/ShaokangJiang/A-JavaFX-project" target="_blank" rel="noopener">This repository</a>.</p><p>And I have no idea about JavaFx when I design this structure, so it is possible that some places have structure error.</p></blockquote><div class="row"><embed src="./1.pdf" width="100%" height="550" type="application/pdf"></div><h4 id="special-notes"><a class="markdownIt-Anchor" href="#special-notes"></a> Special notes:</h4><p><strong>It requires oracle java 1.9(openjdk on linux) or above</strong></p><h2 id="credit"><a class="markdownIt-Anchor" href="#credit"></a> Credit:</h2><p>As you might see from the category tag, this is a project for a coursework. Any information for this section has been removed to meet the requirement and ambiguous copyright rules from the professor.</p><p>Their requirement is to remove any description regard to the assignment. I believe this document has less than 0.1% similarity with the original description document, this should meet the requirement.</p><p>Basically, part of the thought, like what this program should have, all of the design, all of the implementation is done by me.</p><p>This page is created for fun and not intended to violate any copyright rule. So, let me know if this version is still inappropriate via <a href="mailto:sjiang97@wisc.edu" target="_blank" rel="noopener">email</a>.</p><h2 id="last-note"><a class="markdownIt-Anchor" href="#last-note"></a> Last Note:</h2><p><code>JavaFX</code> should be good for multi-platform usage and it is easy to build a good, well-formed application. But it is a little bit different than the other, including <code>swing</code>, <code>awt</code>. So, we can not use the same thought to think about <code>JavaFX</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> Coursework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Modified traffic simulator</title>
      <link href="/2020/projects/Modified-simulator/"/>
      <url>/2020/projects/Modified-simulator/</url>
      
        <content type="html"><![CDATA[<p>My modified version is at <a href="https://traffic-simulation.shaokang.ga/" target="_blank" rel="noopener">https://traffic-simulation.shaokang.ga/</a>. I just add an export function to export data for each car and measuring point to csv file. I will talk them in details at here and discuss my thought.</p><a id="more"></a><h3 id="modification"><a class="markdownIt-Anchor" href="#modification"></a> Modification</h3><p>I just add an export function to get the data for each car and measuring point. You could see them in real time or download them.</p><h4 id="view"><a class="markdownIt-Anchor" href="#view"></a> View</h4><p>To see them in real time. Visit: <a href="https://traffic-simulation.shaokang.ga/" target="_blank" rel="noopener">https://traffic-simulation.shaokang.ga/</a>, you will be able to see a text field in the right bottom place. That is the data area. I set a limitation of a maximize of 500 rows because browser will be slow when there are too many rows as we need to append data in real time to those box. This limitation won’t limit content in the csv file you could get by pressing download button. Example image as shown below:</p><img src="/2020/projects/Modified-simulator/1.png"><h4 id="download"><a class="markdownIt-Anchor" href="#download"></a> Download</h4><p>It is also easy to download. Simply click the button below each box is enough. File will be saved as csv. File has a size limitation based on your browser, generally, 800 MB. Sample downloaded data:</p><p>Sample car data:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Time,rType,id,Speed,lane,u</span><br><span class="line">0,MainRoad,200,58,0,660.09908</span><br><span class="line">0,MainRoad,201,58,1,625.52486</span><br><span class="line">0,MainRoad,202,58,2,590.95306</span><br><span class="line">0,MainRoad,203,58,0,556.38140</span><br><span class="line">0,MainRoad,204,58,1,521.80634</span><br></pre></td></tr></table></figure><p>Sample statistic data:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Time,loc_x,loc_y,flow,Speed</span><br><span class="line">0.2,613.894,182.693,0,--</span><br><span class="line">0.2,175.208,429.275,0,--</span><br><span class="line">0.2,613.894,489.337,0,--</span><br><span class="line">10.2,613.894,182.693,3960,64</span><br><span class="line">10.2,175.208,429.275,1800,64</span><br><span class="line">10.2,613.894,489.337,1800,64</span><br></pre></td></tr></table></figure><h3 id="my-understanding"><a class="markdownIt-Anchor" href="#my-understanding"></a> My Understanding</h3><p>Based on my understanding, this simulation use the following system to monitor a car: Direction/position of vehicles &lt;lane,u,rType&gt; (One road only have one direction)</p><ul><li>lane – which road this car is on</li><li>u – distance from start point</li><li>rType – type of road(main road or ramp or others)</li></ul><p>I also have a plan to make another simulator in Java if I have time in the future, which has the same functionality as this one. Here is the detailed plan.</p><ol><li><p><strong>Problem:</strong> A specific type of road, at least 3 main road and one ramp, will be provided. Number of road is able to change at the beginning of the program. The program will be given with the car density, car acceleration, Truck existence percentage and any rule regard to the road set up by the user by drag specific sign to specific position. Then, program needs to simulate the real time running situation and represent the real time graph on the left hand. User is able to change each criteria and graph left side should represent the change dynamically. After user stops, the program will be able to export data contains information about those cars and statistic data. During simulation, cars are able to change route and we assume that driver will choose to change the route if that route is faster.</p></li><li><p><strong>Graphical User interface</strong>:</p><blockquote><p>This is only a simple case, there could be other types of roads</p></blockquote><ul><li><p>An asking prompt to ask user for specific information</p><img src="/2020/projects/Modified-simulator/Untitled%20Diagram1.jpg"></li><li><p>A major running part, left side is the real time running graph. Right hand contains bars to change different criteria, such as car density, car acceleration, Truck existence percentage.</p></li></ul><img src="/2020/projects/Modified-simulator/Untitled%20Diagram.jpg"><ul><li><p>When exit, prompt a save as prompts to ask user choose path to save. Or user could choose to ignore running data.</p><img src="/2020/projects/Modified-simulator/Untitled%20Diagram2.jpg"></li><li><p>In the runtime, the center window is represented as the real time simulation result, like this:</p><img src="/2020/projects/Modified-simulator/Untitled%20Diagram.jpg.jpg"></li></ul></li><li><p><strong>Data</strong>: The program might provide function to read configuration from files but it is not necessary.</p></li></ol><p>Because those data are randomly chosen by user, there is no need to store them in a file before the program running. Initial configuration could be loaded from a configuration txt file. Content looks like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">car_density: 0.5</span><br><span class="line">car_acceleration: 1.2 </span><br><span class="line">trunk acceleration: 1.2</span><br><span class="line">Truck existence percentage: 0.5</span><br><span class="line">Maximize speed for trunk: 108</span><br><span class="line">Maximize speed for car: 120</span><br><span class="line"># of main road: 3</span><br></pre></td></tr></table></figure><ul><li>car density - double type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> (0,1), sample: 0.5 – means half road will get a car as an inflow in a second</li><li>car acceleration - double type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> (0,6), sample 1.2, unit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">/</mi><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m/s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8141079999999999em"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-.25em"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathrm">/</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span></li><li>trunk acceleration - double type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> (0,4), sample 1.2, unit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">/</mi><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m/s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8141079999999999em"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-.25em"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathrm">/</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span></li><li>Truck existence percentage - double type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> (0,1), sample: 0.5 – means half of inflow cars will be trunk.</li><li>Maximize speed for trunk - double type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> (0,120), sample 108, unit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">km/h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.75em"></span><span class="strut bottom" style="height:1em;vertical-align:-.25em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mord mathit">m</span><span class="mord mathrm">/</span><span class="mord mathit">h</span></span></span></span></li><li>Maximize speed for car - double type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> (0,120), sample 108, unit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">km/h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.75em"></span><span class="strut bottom" style="height:1em;vertical-align:-.25em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mord mathit">m</span><span class="mord mathrm">/</span><span class="mord mathit">h</span></span></span></span></li><li># of main road - int type <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.5391em"></span><span class="strut bottom" style="height:.5782em;vertical-align:-.0391em"></span><span class="base textstyle uncramped"><span class="mrel">∈</span></span></span></span> [2,5], sample 3.</li></ul><ol start="6"><li><strong>Class (Type) Summary</strong>: It is easy to see the program requires two type of cars, car and trunk. Actually, some values are shared. So, we could have an interface basiccar and an abstract class of them as well. Or other ways are also fine. Then, car and trunk class could implement them. We do also need some road classes, and a plot class to plot information provided by road class.</li></ol><table><thead><tr><th style="text-align:left">Class Name</th><th>Descriptions</th></tr></thead><tbody><tr><td style="text-align:left">basicCar.java</td><td>Super class of car and trunk, contains basic info to describe a car. See <a href="#1">below</a> for more information.</td></tr><tr><td style="text-align:left">car.java</td><td>Contain more info, such as maxmize speed for car, and personalized acceleration speed.</td></tr><tr><td style="text-align:left">trunk.java</td><td>Contain more info, such as maxmize speed for trunk, and personalized acceleration speed.</td></tr><tr><td style="text-align:left">road.java</td><td>Handle restrictions user put and add cars to roads.</td></tr><tr><td style="text-align:left">plot.java</td><td>The most admin class that handle info between GUI and other class and plot on graph.</td></tr></tbody></table><h3 id="credit"><a class="markdownIt-Anchor" href="#credit"></a> Credit:</h3><p>Original simulator is at <a href="https://github.com/movsim/traffic-simulation-de" target="_blank" rel="noopener">https://github.com/movsim/traffic-simulation-de</a>. I forked from this repo and made those edition. Let me know if this is not appropriate.</p>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoCommenter</title>
      <link href="/2019/projects/AutoCommenter/"/>
      <url>/2019/projects/AutoCommenter/</url>
      
        <content type="html"><![CDATA[<h3 id="automatically-add-comments-to-java-source-code"><a class="markdownIt-Anchor" href="#automatically-add-comments-to-java-source-code"></a> Automatically add comments to Java source code</h3><p>This program can not understand your code. What it is doing is to add some comments based on specific rule and make your program full of comments to meet the requirement of dummy comments required in some courses.</p><p>And actually, this program can only add comments to some specific area. For some other areas, it could detect it and send a window to ask you for comments and provide some suggestion. This app is done solely by me.</p><a id="more"></a><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/AutoCommenter/archive/0.1.zip</a></p><h4 id="sample-result"><a class="markdownIt-Anchor" href="#sample-result"></a> Sample result:</h4><p><strong>Before adding:</strong></p><img src="/2019/projects/AutoCommenter/1.png" title="test"><p><strong>After adding</strong></p><img src="/2019/projects/AutoCommenter/2.png" title="test"><h4 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h4><h5 id="creating-configuration-file-and-put-it-to-the-running-directory"><a class="markdownIt-Anchor" href="#creating-configuration-file-and-put-it-to-the-running-directory"></a> Creating configuration file and put it to the running directory</h5><p>A model of configuration file as shown below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-----special:-----</span><br><span class="line">BAIDU_APP_ID: </span><br><span class="line">BAIDU_SECURITY_KEY: </span><br><span class="line">IFLY_APP_ID: </span><br><span class="line">lineLimit:90</span><br><span class="line">-----conditions:-----</span><br><span class="line">if\s*\(.*\) Following code will be generated if ###.*### met.</span><br><span class="line">while\s*\(.*\) Following code will be excuted for multiple time till ###.*### doesn&apos;t met.</span><br><span class="line">do\s*\&#123; A do...while... loop will be handled.</span><br><span class="line">[^&gt;&lt;!=]+=&#123;1&#125;.* Assign values.</span><br><span class="line">for\s+\(.*\) Running iteration on required object.</span><br><span class="line">else\s*\&#123; Do the following if no condition above is met.</span><br><span class="line">return.*; Return ###.*### to the program call from.</span><br><span class="line">break; Break current loop.</span><br><span class="line">System\.out\.println\(.*\) Print information of ###.*### to the user screen.</span><br><span class="line">default\s*\: When default case get touched.</span><br><span class="line">case.*\: Under the case of ###.*###</span><br><span class="line">\.push\( push element to the stack, to the top of it</span><br><span class="line">\.pop\( pop element from the stack, from the top of it</span><br><span class="line">\.peek\( peek element from the stack, never removes data</span><br><span class="line">\.isEmpty\( check if it is empty or not</span><br></pre></td></tr></table></figure><p><code>-----special:-----</code> and <code>-----conditions:-----</code> are field tags, These field tags should matches exactly as what described above.</p><h6 id="special-field"><a class="markdownIt-Anchor" href="#special-field"></a> Special field:</h6><ul><li>BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use translation function.</li><li>IFLY_APP_ID: Need register with Ifly at <a href="https://www.xfyun.cn/" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use voice dedication function</li><li>lineLimit: Words will be cut of at the exact limitation position if it is out of limits.</li></ul><h6 id="conditions"><a class="markdownIt-Anchor" href="#conditions"></a> Conditions:</h6><p>The conditions used to detect on each line of code and make comments at the end of each line. It uses the regular expression of java to detect words. The format of writing condition is <code>[Expression] &lt;Words&gt;</code>. They are separated using space.</p><p><code>[Expression]</code>: The java regular expression. If space is needed, use \s instead of an empty place.</p><p><code>&lt;Words&gt;</code>: The words to comment at the end of sentences that contains this expression. Use <code>###.*###</code> to place contents matches <code>.*</code> on the left hand side. Only the first one on the left hand side will be placed on the right side. And code only support <code>###.*###</code> syntax right now.</p><p>For example, If there is a line in java code: <code>System.out.println(&quot;Hello World!&quot;);</code>. This meet the requirement of <code>System\.out\.println\(.*\)</code> defined above. So, the comments to be added to the end of this line is <code>Print information of &quot;Hello World!&quot; to the user screen.</code> In most case, this will make sense.</p><h6 id="other-places"><a class="markdownIt-Anchor" href="#other-places"></a> Other places:</h6><p>For the other place, including method header, method implementation method, return value description, pass in parameter and some other things, program will promote a window like this to let you input word you want. Default in graph below will be replaced with some guidance words.</p><img src="/2019/projects/AutoCommenter/3.png" title="test"><p>For some method, such as getter, setter, constructor, program will place some predefined words at here. You could edit it as you need. For the edit method, you could use start listen button to speech language you choose in the first step and use voice dedicator.</p><h4 id="compile-run"><a class="markdownIt-Anchor" href="#compile-run"></a> Compile &amp; run</h4><h5 id="download-from-release-page-or-compile-from-source"><a class="markdownIt-Anchor" href="#download-from-release-page-or-compile-from-source"></a> Download from release page or compile from source.</h5><h6 id="download-from-release-page"><a class="markdownIt-Anchor" href="#download-from-release-page"></a> Download from release page:</h6><ol><li>Choose correct library to download and download AutoCommenter from release page</li><li><code>java -jar AutoCommenter.jar [-d] &lt; Directory or files path &gt;</code></li><li><code>-d</code> is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, <code>java -jar AutoCommenter.jar E:\test</code></li><li><code>&lt;File path&gt;</code> could be a list of files separated with space. Like, <code>java -jar AutoCommenter.jar file1.java file2.java</code>.</li></ol><h6 id="download-from-release-page-2"><a class="markdownIt-Anchor" href="#download-from-release-page-2"></a> Download from release page:</h6><ol><li><code>git clone https://github.com/sjiang97/AutoCommenter.git</code></li><li><code>cd AutoCommenter</code></li><li><code>find -name &quot;*.java&quot; &gt; sources.txt</code> : Find all java files to compile</li><li><code>mkdir bin</code></li><li><code>javac -d ./bin -cp ./\* @sources.txt</code></li><li><code>cd bin</code></li><li><code>java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test [-d] &lt; Directory or files path &gt;</code></li><li><code>-d</code> is optional, It means a directory. If -d exist, program will loop through all files in the path and make comments on them. Only support for one directory. Like, <code>java -jar AutoCommenter.jar E:\test</code></li><li><code>&lt;File path&gt;</code> could be a list of files separated with space. Like, <code>java -jar AutoCommenter.jar file1.java file2.java</code>.</li></ol><h4 id="special-notes"><a class="markdownIt-Anchor" href="#special-notes"></a> Special notes:</h4><p><strong>It requires oracle java 1.8(openjdk on linux) or above</strong></p><p><strong>It requires a well formated java code:</strong>, In eclipse, kick <code>Ctrl+Shift+f</code> to make code well formated. And define property of class, fields specifically, i.e. include <code>public</code> instead of omit it.</p><p>It works perfectly on windows machine. It might have problem on mac/linux.</p><h4 id="further"><a class="markdownIt-Anchor" href="#further"></a> Further</h4><ul><li>This is not perfect. Lots of places need to improve</li><li>Didn’t add class header automatically</li><li>Program should able to do multiple replacement</li><li>Program should allow user to define mapping relationship between name of method and javadoc sample.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoiceInput</title>
      <link href="/2019/projects/VoiceInput/"/>
      <url>/2019/projects/VoiceInput/</url>
      
        <content type="html"><![CDATA[<h3 id="a-simple-method-to-write-words"><a class="markdownIt-Anchor" href="#a-simple-method-to-write-words"></a> A simple method to write words</h3><p>I like to use voice input to write words. But I didn’t find an easy to use voice dedication program with dynamic correction. So I made this one. A java voice input interface using iflytek voice dictation with dynamic correction. This app is done solely by me.</p><a id="more"></a><p><strong>Github Page:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput</a></p><p><strong>Compiled version:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput/releases" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput/releases</a></p><p><strong>Code version:</strong> <a href="https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip" target="_blank" rel="noopener">https://github.com/ShaokangJiang/VoiceInput/archive/0.1.zip</a></p><h4 id="sample-run"><a class="markdownIt-Anchor" href="#sample-run"></a> Sample run:</h4><p>You need to choose a language to dedicate in bash window at first. Then a window below will be pushed out:</p><p>Each button clarify what you could do clearly.</p><img src="/2019/projects/VoiceInput/3.png" title="test"><h4 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h4><h5 id="creating-configuration-file-and-put-it-to-the-running-directory"><a class="markdownIt-Anchor" href="#creating-configuration-file-and-put-it-to-the-running-directory"></a> Creating configuration file and put it to the running directory</h5><p>A model of configuration file as shown below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-----special:-----</span><br><span class="line">BAIDU_APP_ID: </span><br><span class="line">BAIDU_SECURITY_KEY: </span><br><span class="line">IFLY_APP_ID:</span><br></pre></td></tr></table></figure><p><code>-----special:-----</code> is field tag, It should matches exactly as what described above.</p><h6 id="special-field"><a class="markdownIt-Anchor" href="#special-field"></a> Special field:</h6><ul><li>BAIDU_APP_ID/BAIDU_SECURITY_KEY: Need register Baidu translation API at <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use translation function.</li><li>IFLY_APP_ID: Need register with Ifly at <a href="https://www.xfyun.cn/" target="_blank" rel="noopener">here</a>. No need to register if you don’t plan to use voice dedication function</li></ul><h4 id="compile-run"><a class="markdownIt-Anchor" href="#compile-run"></a> Compile &amp; run</h4><h5 id="download-from-release-page-or-compile-from-source"><a class="markdownIt-Anchor" href="#download-from-release-page-or-compile-from-source"></a> Download from release page or compile from source.</h5><h6 id="download-from-release-page"><a class="markdownIt-Anchor" href="#download-from-release-page"></a> Download from release page:</h6><ol><li>Choose correct library to download and download VoiceInput from release page</li><li><code>java -jar VoiceInput.jar</code></li></ol><h6 id="download-and-compile-from-source-page"><a class="markdownIt-Anchor" href="#download-and-compile-from-source-page"></a> Download and compile from source page:</h6><ol><li><code>git clone https://github.com/sjiang97/VoiceInput.git</code></li><li><code>cd VoiceInput</code></li><li><code>find -name &quot;*.java&quot; &gt; sources.txt</code> : Find all java files to compile</li><li><code>mkdir bin</code></li><li><code>javac -d ./bin -cp ./\* @sources.txt</code></li><li><code>cd bin</code></li><li><code>java -classpath ./:../json-jena-1.0.jar:../Msc.jar Test</code></li></ol><h4 id="special-notes"><a class="markdownIt-Anchor" href="#special-notes"></a> Special notes:</h4><p><strong>It requires oracle java 1.8(openjdk on linux) or above</strong></p>]]></content>
      
      
      <categories>
          
          <category> Programs </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>College library optimization problem</title>
      <link href="/2019/projects/College-library-optimization-problem/"/>
      <url>/2019/projects/College-library-optimization-problem/</url>
      
        <content type="html"><![CDATA[<p>This project is a group work designed and solve by Shaokang Jiang &amp; Katherine Fu for course CS524 project.</p><p>Optimization is a powerful way to solve real problem in a short amount of time. It needs us to use more math when we design solutions instead of using computing resources when the problem runs. GAMS is a powerful optimization software. GAMS could do calculation and generate equations in seconds. By using CPLEX, we are able to reach solutions in seconds. In this project, we utilize GAMS feature (dynamic sets, mip, etc) and nearly solved a real problem.</p><p><a id="Problem"></a></p><h2 id="problem"><a class="markdownIt-Anchor" href="#problem"></a> Problem</h2><h3 id="college-library-optimization-problem"><a class="markdownIt-Anchor" href="#college-library-optimization-problem"></a> College library optimization problem</h3><p>We consider a simplified example of arranging the number of students who use the college library for studying.<a id="more"></a> In different period of time during school year, the number of students staying in the library is different. During the midterm and final weeks, the number is rapidly increasing. Thus, it is essential to maximize the efficiency of the number of hours of students who can use the library<!-- more --> given their studying duration of using individual seats, the inflow and outflow of students, the equipment checking-out situations, and so on.</p><p>To simplify our model, we assume that the library has two sections: a quiet area, a public area. The total number of seats in the college library is 1000.</p><table><tr><th colspan="2"><center>Quiet area</center></th><th colspan="4"><center>Public area</center></th></tr><tr><td>&le;5 hrs</td><td>&gt;5 hrs</td><th colspan="2">For project</th><th colspan="2">For chatting</th></tr><tr><td></td><td></td><td>&le;2 hrs</td><td>&gt;2 hrs</td><td>&le;4 hrs</td><td>&gt;4 hrs</td></tr><tr><td>1</td><td>0.6</td><td>1.1</td><td>0.5</td><td>0.12</td><td>0.05</td></tr></table><p>To understand the Efficiency, we gave an example at here. Assume a person could finish a page of work in an hour, this is defined as one unit of efficiency, also known as the efficiency per hour for a person work in quiet area for less than 5 hours. But if this person work more than 5 hours, then he/she can only finish 0.6 pages of work for each hour he/she spend. By using formula, it looks like this: (t stand for time of working, f(t) stand for total efficiency) Equation 1 stand for student total efficiency staying in quiet area. Equation 2 stand for student total efficiency staying in public area for project purpose. Equation 3 stand for student total efficiency staying in public area for chatting purpose.</p>\begin{equation} f(t)=\left\{ \begin{aligned} & 1*t & \forall t\le 5 \\ & 5+0.6*t & \forall t> 5 \end{aligned} \right. \end{equation} \begin{equation} f(t)=\left\{ \begin{aligned} & 1.1*t & \forall t\le 2 \\ & 2.2+0.5*t & \forall t> 2 \end{aligned} \right. \end{equation} \begin{equation} f(t)=\left\{ \begin{aligned} & 0.12*t & \forall t\le 4 \\ & 0.48+0.05*t & \forall t> 4 \end{aligned} \right. \end{equation}<p>It is permitted to switch a person from quiet place to public place. A person who requested the quiet apace and switched to public space due to limited seats will have an coefficient of efficiency of 0.8; A person who requested the public apace and switched to quiet space due to limited seats will have an coefficient of efficiency of 0.3;</p><p>Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the caalculation result from the previous step, f(x) stand for result of new efficiency)</p>\begin{equation} f(x)=\left\{ \begin{aligned} & 0.8*x & \forall x| quiet\rightarrow public \\ & 0.3*x & \forall x| public \rightarrow quiet \end{aligned} \right. \end{equation}<p><a id="end_o1"></a></p><p>The college library also provides equipment including laptops,<br>calculators, and computer chargers for students to use. If a student<br>checks out one of these equipment, the efficiency of that student could be multiply by those coefficient. The coefficient for regular efficiency is shown below.</p><table><thead><tr><th>Laptops</th><th>calculators</th><th>computer chargers</th></tr></thead><tbody><tr><td>1.1</td><td>1.2</td><td>1.3</td></tr></tbody></table><p>Equation below stand for student total efficiency. (x represent for the original efficiency this student have, which is also the calculation result from the previous step, f(x) stand for result of new efficiency)</p>\begin{equation} f(x)=\left\{ \begin{aligned} & 1.2*x & \forall x| calculator=1 &\\ & 1.1*x & \forall x| laptops=1 &\\ & 1.3*x & \forall x| charger=1 & \end{aligned} \right. \end{equation}<p>The number of laptops is 10, the total number of calculators is 30, and<br>the number of chargers is also 10. Every person could use those equipment for the time duration that they are study in the library. Each person could borrow at most one equipment during time duration that he is in library.</p><p>data.gdx contain the data of students’ thinking of purpose of using those equipment and seats in the library. We want to consider a situation in a day of experimenting period during opening hours of 8:00 am to 9:00 pm. This file recorded the time when a student enter the library; the time they want to study; the place they want to study; Max possible hours for quiet hours is 10. Max possible hours for public hours is 6; type of 0 stands for project, 1 stands for chatting;</p><p>By using data above, you are going to give permission for certain group of students to enter this library and arrange seats in the library in order to maximize total efficiency. And also, to demonstrate that this library is open to all people, you get to allow at least 10 chatting people to enter this library.</p><h4 id="objective1"><a class="markdownIt-Anchor" href="#objective1"></a> Objective1:</h4><p>How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library?</p><p>Dataset could be downloaded from <a href="https://shaokang.ga/data.gdx">data.gdx</a>.</p><h4 id="objective2"><a class="markdownIt-Anchor" href="#objective2"></a> Objective2:</h4><p>More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library.</p><p>Dataset could be downloaded from <a href="https://shaokang.ga/data-free.gdx">data-free.gdx</a>, <a href="https://shaokang.ga/data-middle.gdx">data-middle.gdx</a>, <a href="https://shaokang.ga/data-busy.gdx">data-busy.gdx</a>.</p><h4 id="objective3"><a class="markdownIt-Anchor" href="#objective3"></a> Objective3:</h4><p>Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason.</p><h2 id="analyze"><a class="markdownIt-Anchor" href="#analyze"></a> Analyze:</h2><h4 id="the-approach-used"><a class="markdownIt-Anchor" href="#the-approach-used"></a> The approach used.</h4><p>We organized the requests from all the students based on their (enter_hour, public_hour) with the help of variables, respectively, n_pe_public and n_pe_quiet. These are represented as the maxmize number of people each regetangle block could contain in the graph below.</p><p><img src="https://wp1sqw.bn.files.1drv.com/y4mGlSqlxLGHhN5pyoGcH3iKswCkHuysM7gqvGAQngOErEEKi-Hv-f6xWD0fqTSnkNK68jTEcS-3uJ0IFAxRwJJRHD1ayVKXlGz63b4vLtN5XX8SYWNFLgGtBo9478yzbQE9DeF-trxhwcXutuXnuRUJyE4JeqavCYhFg3FhAwh3TobvqdG_epxR54zVTk4NVQxrn490NA8feKjUHj6n9_LTw?width=4638&amp;height=1625&amp;cropmode=none" alt="Diagram"></p><p>Regarding the opening time of the library, there are two variables called quiet_arrange and public_arrange in a form of tuples (enter_hour, public_hour) as an entry. Based on the graph above, every quiet(open_hour, quiet_hour) variable contains # of people staying on seat at certain time interval and the duration of his or her studying hours is illustrated as the length of each block. Same case for public area. After we synthesized all the cases of students from his or her entering times to leaving times, we could form a complete diagram and the left graph above is a snippet.</p><p>In general, we utilized a dynamic set determined by students’ entering time and the duration of studying in either quiet or public area during each time interval from 8 am to 9 pm to measure the seat arrangement. This dynamic dataset is called “visible_quiet”, a 3-dimensional set, with sets (o, enter_hour, quiet_hour). It means, for every time interval o(as 10:00 in above) starting from 8 am, the (open_hour, quiet_hour) should be counted once, which is shown as shaded blocks on the top right side. In each time interval, a decent amount of students will enter the library and the total number during that time will be calculated. For example, based on the graph above, quiet(“8”, “3”) records the number of students who enter the library at 8 am and stay for 3 hours. If another student comes at 10 am and has also studied for 3 hours, we should count both of them in the time interval from 10 am to 11 am (the shaded area). The sum of number of students that shaded blocks contains should be less or equal to a corresponding variable(called quiet_chairs in code). Similiar case would be applied to public case.</p><p>We also took the seat-switching situations as considerations. The number of students in quiet area in certain interval should be the sum of the number of current students, those who just arrive, and those who switch from the public area to the quiet area(named as switch_p2q in code). Same thing applies to the arrangement of the public area(in a variable called switch_q2p).</p><p>Our objective is to maximize the total efficiency. We realized the utilization of calculators, chargers and laptops will also exert significant effects on students’ efficiency. Considering that it was hard to calculate them with our original model, we splited the entire block into two stages demonstrated in two blocks in <a href="#o11">obj1</a>. The <a href="#o1s1">first stage</a> begin from the head of introduction and end at <a href="#end_o1">here</a>. Because we had them in the problem description part, we solved the <a href="#o1s2">second stage</a> and use this model to discover data in obj2. In the <a href="#o1s1">first stage</a>, the model is calculated by multiplying the base total efficiency coefficients with the number of hours students spend in each area. The base total efficiency coefficients depend on area and hours, so they are pre-calculated and stored in eff_quiet and eff_public in the code. We also considered the situation whether students switch areas or utilize equipments. For different scenarios, we multiplied hours with different coefficients. More details will be discussed in the section below.</p><p>For the <a href="#o1s2">second stage</a> of the problem, we employed some variables similar to ca_need_public, ca_need_quiet to represent the machines borrowed at pair (enter_hour, quiet_hour). We organized the needs for devices at first and set up them as an upper bound. The other procedures are similar to methods using in stage one. One difference is that we utilized some variableS for spliting, similar to ca_need_public_1, ca_need_public_2. They are used later for the objective function. Because the objective function has two variables with different conditions(quiet_arrange and switch_p2q) in each type(pblic or quiet) taking different final coefficient, we need to split the variable to represent those conditions. Because we try to maximizing the problem, the program will always fill the quiet_arrange first as it has a higher coefficient in general.</p><p>In terms of the number of equipments, we assumed that the requests for equipments should be greater than the number the library has. Given a simple example. If four students all require to use calculator but currently, the library only has 3 calculators available, we try to find a way to give the calculators to students in order to maximize the total efficiency.</p><h4 id="optimization-model"><a class="markdownIt-Anchor" href="#optimization-model"></a> Optimization model</h4><p>We first counted the total number of people in either public or private areas based on the avalibility. Then, we calculated the efficiency of both regular studying hour, switching situations, and, equipment check-out situations and attempt to maxmize the total efficiency. We finally displayed students who have been chosen to study in certain seats in certain time interval.</p><p>We simplified the representation so we only represented the quiet study room and calculator case.<br>In the model, we had those variables:</p><ul><li>let o to be a set of open hour from 8 to 21.</li><li>let q to be a set of people can stay in the quiet room, from 1 to 10.</li><li>let ty be the type of public object, it could be chat or project.</li><li>let qi be the set of original people record identity number, and cj be the category, like enter, hours, calculator</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mi>u</mi><mi>i</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Quiet_{ml}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mord mathit">u</span><span class="mord mathit">i</span><span class="mord mathit">e</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span><span class="mord mathit" style="margin-right:.01968em">l</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi>q</mi><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo>∈</mo><mi>c</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">m\in qi, l\in cj</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mrel">∈</span><span class="mord mathit">c</span><span class="mord mathit" style="margin-right:.05724em">j</span></span></span></span> represent the dataset.</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>q</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">sq_{ijk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.43056em"></span><span class="strut bottom" style="height:.716668em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord"><span class="mord mathit" style="margin-right:.03588em">q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.03588em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">i,j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible. For example, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mn>9</mn><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{9jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.43056em"></span><span class="strut bottom" style="height:.716668em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">9</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> = {(8,2),(8,3),(8,4)…(8,10),(9,1),(9,2),(9,3)…(9,10)}</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>p</mi><mrow><mi>l</mi><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">sp_{lijk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.43056em"></span><span class="strut bottom" style="height:.716668em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∈</mo><mi>t</mi><mi>y</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">l\in ty, i,j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mrel">∈</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:.03588em">y</span><span class="mpunct">,</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the dynamic set represents at hour i, people who come in at j and plan to stay k hours, which is visible. For example, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mn>1</mn><mn>9</mn><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{19jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.43056em"></span><span class="strut bottom" style="height:.716668em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">9</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> = {(8,2),(8,3),(8,4)…(8,6),(9,1),(9,2),(9,3)…(9,6)}</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.83333em;vertical-align:-.15em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:.05764em">E</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.05764em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> to be the Base total efficiency base vector on time k.</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mn>2</mn><msub><mi>Q</mi><mrow><mi>l</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P2Q_{ljk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∈</mo><mi>t</mi><mi>y</mi><mo separator="true">,</mo><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">l\in ty, j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mrel">∈</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:.03588em">y</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> to be people switch from public area to quiet area enter at hour j and stay for hours k. Same mechanism for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mn>2</mn><mi>P</mi></mrow><annotation encoding="application/x-tex">Q2P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:.13889em">P</span></span></span></span></li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">QC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mord mathit" style="margin-right:.07153em">C</span></span></span></span> be the chairs should be in quiet room.</li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the number of people accepted to the library to maximize total efficiency</li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>Q</mi><msub><mn>1</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CQ1_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">1</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the number of calculator split for quiet area accepted to the library to maximize total efficiency</li><li>let variable <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>Q</mi><msub><mn>2</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CQ2_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the number of calculator accepted to the library to maximize total efficiency</li><li>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">CF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.68333em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit" style="margin-right:.13889em">F</span></span></span></span> be the increment factor of efficiency of using calculator, let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>W</mi><mi>P</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">SWPQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="mord mathit" style="margin-right:.13889em">W</span><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mord mathit">Q</span></span></span></span> be the factor of efficiency of switch from public to quiet</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>P</mi><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">NPQ_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">N</span><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the number of people requested to stay in the library.</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>C</mi><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">NCQ_{jk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.969438em;vertical-align:-.286108em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">N</span><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mi>o</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">j\in o, k\in q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span> be the number of calculator requested to stay in the library.</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><msub><mi>Q</mi><mrow><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">SQ_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi>q</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">m\in qi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.65952em"></span><span class="strut bottom" style="height:.85396em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span><span class="mord mathit">i</span></span></span></span> be a binary variable record which people is selected</li><li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>Q</mi><msub><mi>C</mi><mrow><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">SQC_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.68333em"></span><span class="strut bottom" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:.05764em">S</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathit" style="margin-right:.07153em">C</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:-.07153em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi>q</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">m\in qi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.65952em"></span><span class="strut bottom" style="height:.85396em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span><span class="mord mathit">i</span></span></span></span> be a binary variable record which people has calculator</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>x</mi><msub><mo>∑</mo><mrow><mi>k</mi><mo>∈</mo><mi>q</mi></mrow></msub><msubsup><mi>E</mi><mrow><mi>k</mi></mrow><mi>T</mi></msubsup><mo>(</mo><msub><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><mi>o</mi></mrow></msub><mo>(</mo><msub><mi>Q</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>+</mo><mi>C</mi><mi>Q</mi><msub><mn>1</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>∗</mo><mi>C</mi><mi>F</mi><mo>+</mo><mo>(</mo><msub><mo>∑</mo><mrow><mi>l</mi><mo>∈</mo><mi>t</mi><mi>y</mi></mrow></msub><mi>P</mi><mn>2</mn><msub><mi>Q</mi><mrow><mi>l</mi><mi>j</mi><mi>k</mi></mrow></msub><mo>+</mo><mi>C</mi><mi>Q</mi><msub><mn>2</mn><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>∗</mo><mi>C</mi><mi>F</mi><mo>)</mo><mo>∗</mo><mi>S</mi><mi>W</mi><mi>P</mi><mi>Q</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">Max \sum_{k\in q}E_{k}^T(\sum_{j\in o}(Q_{jk}+CQ1_{jk}*CF+(\sum_{l\in ty}P2Q_{ljk}+CQ2_{jk}*CF)*SWPQ))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.050005em"></span><span class="strut bottom" style="height:2.488226em;vertical-align:-1.438221em"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:.10903em">M</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="mop op-limits"><span class="vlist"><span style="top:1.202113em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.03148em">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:.03588em">q</span></span></span></span><span style="top:-.000005000000000032756em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:.05764em">E</span><span class="vlist"><span style="top:.247em;margin-left:-.05764em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span style="top:-.4129999999999999em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:.13889em">T</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist"><span style="top:1.177669em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mrel">∈</span><span class="mord mathit">o</span></span></span></span><span style="top:-.000005000000000032756em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">1</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit" style="margin-right:.13889em">F</span><span class="mbin">+</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist"><span style="top:1.202113em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mrel">∈</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:.03588em">y</span></span></span></span><span style="top:-.000005000000000032756em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit">Q</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit">Q</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:.15em;margin-right:.05em;margin-left:0"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:.05724em">j</span><span class="mord mathit" style="margin-right:.03148em">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:.07153em">C</span><span class="mord mathit" style="margin-right:.13889em">F</span><span class="mclose">)</span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:.05764em">S</span><span class="mord mathit" style="margin-right:.13889em">W</span><span class="mord mathit" style="margin-right:.13889em">P</span><span class="mord mathit">Q</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>\begin{align} \begin{split} s.t.\quad & CQ1_{jk} + CQ2_{jk} \le NCQ_{jk} && \forall j\in o,k\in q \\ & Q_{jk} \le NPQ_{jk}&&\forall j\in o,k\in q\\ & 1000\ge QC&\\ & \sum_{j,k}Q_{jk}+\sum_{l,j,k}P2Q_{ljk}\le QC &&\forall i\in o, \forall Q_{jk}\in sq_{ijk}, \forall P2Q_{ljk}\in sp_{ijk} \\ & \sum_{m\in qi} SQ_{m} = Q_{jk}&& \forall j\in o, k\in q,\forall m\in \{m | Quiet_{m"enter"}=j\\ &&& \&Quiet_{m"hours"}=k\}\\ & \sum_{m\in qi} SQC_{m} \ge CQ1_{jk} + CQ2_{jk} && \forall j\in o, k\in q,\forall m\in \{m | Quiet_{m"enter"}=j\\ &&& \&Quiet_{m"hours"}=k\& Quiet_{m"Calculator"}=1\}\\ & \sum_{j,k}(CQ1_{jk} + CQ2_{jk})\le 20 &&\forall i\in o, \forall CQ1_{jk}, CQ2_{jk}\in sq_{ijk} \\ & CQ1_{jk} \le Q_{jk}+Q2P_{jk}&&\forall i\in o, k\in q \end{split} \end{align}<p>Most of other formulas for the entire project is similiar to the methods using above, so we choose to not write them.</p><p>For the solutions, see <a href="#p1">here</a> for solution of obj1, <a href="#p2">here</a> for solution of obj2, <a href="#p33">here</a> for solution of obj3</p><h4 id="processing-of-the-solution"><a class="markdownIt-Anchor" href="#processing-of-the-solution"></a> Processing of the solution</h4><p><br><a href="#p1">processing for the first objective</a></p><img src="/2019/projects/College-library-optimization-problem/output_9_4.png" title="test"><p><br><a href="#p2">processing for the second objective</a></p><img src="/2019/projects/College-library-optimization-problem/output_18_3.png" title="test"><p><br><a href="#p33">processing for the third objective</a></p><img src="/2019/projects/College-library-optimization-problem/output_23_1.png" title="test"><h4 id="some-brief-conclusion"><a class="markdownIt-Anchor" href="#some-brief-conclusion"></a> Some brief conclusion</h4><p><br>As shown in area below<br><br><a href="#c1">Conclusion for the first objective</a><br>Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen.</p><p>For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it.</p><p><br><a href="#c2">Conclusion for the second objective</a><br>As we mentioned in the problem, we provided the permission in each case. But it is not useful.</p><p>By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period.</p><p><br><a href="#c31">Conclusion for the third objective</a><br>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><p><br><a href="#c3">Conclusion for the entire objective</a><br>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><h4 id="further-thoughts"><a class="markdownIt-Anchor" href="#further-thoughts"></a> Further thoughts:</h4><p><br>Furthermore, there are lots of improvements that could be done.</p><ul><li><p>Since our model separates the public and quiet areas in our parameter, it is hard for us to simplify our model. In the future model, we could try to combine these two into one parameter to make it simplier.</p></li><li><p>The constraints, dealing ways might need to be improved. And there might be some small errors as there are too many equations. We checked them for multiple times, but it is hard to guarantee that every place is perfectly correct.</p></li><li><p>And the model could only make sense if they have the real data input. Right now, we only have fake data.</p></li><li><p>Solution is not unique(for selection of people). Maybe we don’t have to find which person should be given the permission. We could find the number of people we should accept in each case.</p></li><li><p>we always want to keep minimum change to what we setup in the previous submission, A lot of places could be improved actually. Like obj2, execute_load command would be better.</p></li><li><p>like what we discussed in <a href="#p3">obj3</a>, some more discoveries could be done, including if the library needs to buy more calculators or not.</p></li><li><p>And, not all people are on time in real case. In this problem, we assume data are collected from survey or somethimg. So, there is no person would have a time duration of 2:15. But in real case, this would happen. So, it would be helpful to invite error vectors to describe this and form the problem.</p></li></ul><h2 id="solution"><a class="markdownIt-Anchor" href="#solution"></a> Solution:</h2><p>Important startup of jupyter notebook interface:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.display <span class="keyword">import</span> display, HTML</span><br><span class="line">display(HTML(<span class="string">"&lt;style&gt;.container &#123; width:95% !important; &#125;&lt;/style&gt;"</span>))</span><br><span class="line"><span class="comment"># Load the gams extension</span></span><br><span class="line">%load_ext gams_magic</span><br><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><p><a id="o11"></a></p><h4 id="objective1-2"><a class="markdownIt-Anchor" href="#objective1-2"></a> Objective1:</h4><p>How to arrange seats in the library to try the best to meet the requirement of student’s thought in data.gdx and maximize the total efficiency of students using the library? Also, which student will be permitted of entering this library?</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">%%gams </span><br><span class="line"><span class="comment">* initialize data</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$title</span> College library optimization problem     Katherine Fu &amp; Shaokang Jiang</span></span><br><span class="line"><span class="keyword">set</span> public_i, public_j, quiet_i, quiet_j, hours /<span class="number">1</span>*<span class="number">10</span>/<span class="comment">, public_hour(hours)</span> /<span class="number">1</span>*<span class="number">6</span>/<span class="comment">, quiet_hour(hours)</span> /<span class="number">1</span>*<span class="number">10</span>/<span class="comment">, enter_hour</span> /<span class="number">8</span>*<span class="number">20</span>/<span class="comment">, types</span> <span class="comment">"1:project 2:chatting"</span> /<span class="number">1</span>*<span class="number">2</span>/;</span><br><span class="line"><span class="keyword">alias</span>(enter_hour, o);</span><br><span class="line"><span class="keyword">parameter</span></span><br><span class="line">    Public(public_i,public_j),</span><br><span class="line">    Quiet(quiet_i,quiet_j)</span><br><span class="line">    n_pe_public(types, enter_hour, public_hour)</span><br><span class="line">    n_pe_quiet(enter_hour, quiet_hour)</span><br><span class="line">    eff_public(types, public_hour)</span><br><span class="line">    eff_quiet(quiet_hour);</span><br><span class="line"><span class="keyword">option</span> optcr = <span class="number">0</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line"><span class="keyword">scalar</span> total_limit /<span class="number">1000</span>/<span class="comment">, chat_low</span> /<span class="number">10</span>/<span class="comment">, q2p</span> <span class="comment">"switch efficiency factor"</span> /<span class="number">0.8</span>/<span class="comment">, p2q</span> <span class="comment">"switch efficiency factor"</span> /<span class="number">0.3</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">* dynamic set of visibility</span></span><br><span class="line"><span class="keyword">set</span> visible_public(o, enter_hour, public_hour) <span class="comment">"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it"</span></span><br><span class="line">    visible_quiet(o, enter_hour, quiet_hour) <span class="comment">"For entity at o, (enter_hour, public_hour) are accessible nodes, mean # of ppl sit on it"</span>;</span><br><span class="line">visible_public(o, enter_hour, public_hour) = <span class="keyword">yes</span><span class="symbol">$</span>(<span class="keyword">ord</span>(o)&lt;<span class="keyword">ord</span>(enter_hour)+<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> <span class="keyword">ord</span>(o)&gt;=<span class="keyword">ord</span>(enter_hour));</span><br><span class="line">visible_quiet(o, enter_hour, quiet_hour) = <span class="keyword">yes</span><span class="symbol">$</span>(<span class="keyword">ord</span>(o)&lt;<span class="keyword">ord</span>(enter_hour)+<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> <span class="keyword">ord</span>(o)&gt;=<span class="keyword">ord</span>(enter_hour));</span><br><span class="line"></span><br><span class="line"><span class="comment">* calculate the base total efficiency for each (enter_hour, quiet_hour)</span></span><br><span class="line">eff_public(<span class="string">"1"</span>, public_hour) = (<span class="number">1.1</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&lt;=<span class="number">2</span>) + (<span class="number">1.2</span>+<span class="number">0.5</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&gt;<span class="number">2</span>);</span><br><span class="line">eff_public(<span class="string">"2"</span>, public_hour) = (<span class="number">0.12</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&lt;=<span class="number">4</span>) + (<span class="number">0.28</span>+<span class="number">0.05</span>*<span class="keyword">ord</span>(public_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(public_hour)&gt;<span class="number">4</span>);</span><br><span class="line">eff_quiet(quiet_hour) = (<span class="keyword">ord</span>(quiet_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(quiet_hour)&lt;=<span class="number">5</span>) + (<span class="number">2</span>+<span class="number">0.6</span>*<span class="keyword">ord</span>(quiet_hour))<span class="symbol">$</span>(<span class="keyword">ord</span>(quiet_hour)&gt;<span class="number">5</span>);</span><br></pre></td></tr></table></figure><p><a id="o1s1"></a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="comment">* declare variables for first model to use</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span> public_chair <span class="comment">"# of chairs for public area"</span><span class="comment">, quiet_chair</span> <span class="comment">"# of chairs for quiet area"</span><span class="comment">,</span></span><br><span class="line">            public_arrange(types, enter_hour, public_hour) <span class="comment">"# of chairs for types for public area at hour enter_hour and stay at here for public_hour"</span><span class="comment">,</span></span><br><span class="line">            quiet_arrange(enter_hour, quiet_hour) <span class="comment">"# of chairs for quiet area at hour enter_hour and stay at here for quiet hour"</span></span><br><span class="line">            switch_q2p(enter_hour, quiet_hour) <span class="comment">"# of chairs switched from quiet area to public area"</span></span><br><span class="line">            switch_p2q(types, enter_hour, public_hour) <span class="comment">"# of chairs switched from public area to quiet area"</span>;</span><br><span class="line">public_chair.up = total_limit;</span><br><span class="line">quiet_chair.up = total_limit;</span><br><span class="line">public_arrange.up(types, enter_hour, public_hour) = total_limit;</span><br><span class="line">quiet_arrange.up(enter_hour, quiet_hour) = total_limit;</span><br><span class="line">switch_q2p.up(enter_hour, quiet_hour) = total_limit;</span><br><span class="line">switch_p2q.up(types, enter_hour, public_hour) = total_limit;</span><br><span class="line"><span class="keyword">free</span> <span class="keyword">variable</span> total_efficiency;</span><br><span class="line"><span class="keyword">binary</span> <span class="keyword">variable</span> select_public(public_i), select_quiet(quiet_i);</span><br><span class="line"></span><br><span class="line"><span class="comment">* calculate total number of people</span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line"></span><br><span class="line"><span class="keyword">equations</span> conn1 <span class="comment">"connection between public_chair and public_arrange and switch_q2p at every time"</span></span><br><span class="line">          conn2 <span class="comment">"connection between quiet_chair and quiet_arrange and switch_p2q"</span></span><br><span class="line">          objective <span class="comment">"Calculate the total efficiency"</span></span><br><span class="line">          limit <span class="comment">"limitation of total chairs"</span></span><br><span class="line">          people_public <span class="comment">"restriction of # of people in public area"</span></span><br><span class="line">          people_quiet <span class="comment">"restriction of # of people in quiet area"</span></span><br><span class="line">          selection_public <span class="comment">"people selected at public area"</span></span><br><span class="line">          selection_quiet <span class="comment">"people selected at quiet area"</span></span><br><span class="line">          chatting_lower <span class="comment">"Hold constraints for the lower limitation for chatting people"</span>;</span><br><span class="line"><span class="function"><span class="title">conn1</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), switch_q2p(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> public_chair;</span><br><span class="line"><span class="function"><span class="title">conn2</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) + <span class="keyword">sum</span>((types, enter_hour, public_hour), switch_p2q(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) <span class="symbol">=l=</span> quiet_chair;</span><br><span class="line"><span class="function"><span class="title">limit</span></span>..</span><br><span class="line">    total_limit <span class="symbol">=g=</span> public_chair + quiet_chair;</span><br><span class="line"><span class="function"><span class="title">objective</span></span>..</span><br><span class="line">    total_efficiency <span class="symbol">=e=</span> <span class="keyword">sum</span>((types, enter_hour, public_hour), public_arrange(types, enter_hour, public_hour)*eff_public(types, public_hour) + switch_p2q(types, enter_hour, public_hour)*eff_public(types, public_hour)*p2q) +</span><br><span class="line">                         <span class="keyword">sum</span>((enter_hour, quiet_hour), quiet_arrange(enter_hour, quiet_hour)*eff_quiet(quiet_hour) + switch_q2p(enter_hour, quiet_hour)*eff_quiet(quiet_hour)*q2p);</span><br><span class="line"><span class="function"><span class="title">people_public</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    public_arrange(types, enter_hour, public_hour) + switch_p2q(types, enter_hour, public_hour) <span class="symbol">=l=</span> n_pe_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">people_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour) <span class="symbol">=l=</span> n_pe_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour)), select_quiet(quiet_i)) <span class="symbol">=e=</span> quiet_arrange(enter_hour, quiet_hour) + switch_q2p(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_public</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour)), select_public(public_i)) <span class="symbol">=e=</span> switch_p2q(types, enter_hour, public_hour) + public_arrange(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">chatting_lower</span></span>..</span><br><span class="line">    <span class="keyword">sum</span>((enter_hour, public_hour), public_arrange(<span class="string">"2"</span>, enter_hour, public_hour)) <span class="symbol">=g=</span> chat_low;</span><br><span class="line"><span class="keyword">model</span> simple_obj1 /conn1, conn2, limit, objective, people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;</span><br><span class="line"><span class="keyword">solve</span> simple_obj1 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> run /<span class="number">1</span>*<span class="number">2</span>/<span class="comment">, room</span> /public, quiet/;</span><br><span class="line"><span class="keyword">parameter</span> selection_quiet_(run, quiet_i), selection_public_(run, public_i), chairs(run, room);</span><br><span class="line">selection_public_(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>9699.148</td><td>601</td><td>4403</td><td>MIP</td><td>CPLEX</td><td>0.038</td></tr></tbody></table><p><a id="o1s2"></a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="comment">* increment of scalar for each factor</span></span><br><span class="line"><span class="keyword">scalar</span> calculator_factor /<span class="number">0.2</span>/<span class="comment">, laptop_factor</span> /<span class="number">0.1</span>/<span class="comment">, charger_factor</span> /<span class="number">0.3</span>/<span class="comment">, calculators</span> /<span class="number">30</span>/<span class="comment">, laptops</span> /<span class="number">10</span>/<span class="comment">, chargers</span> /<span class="number">10</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">* represent the needs of each device at specific time.</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span> ca_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet(enter_hour, quiet_hour);</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"></span><br><span class="line"><span class="comment">* declaration for split variables</span></span><br><span class="line"><span class="keyword">integer</span> <span class="keyword">variables</span>                   </span><br><span class="line">                  ca_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public_1(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet_1(enter_hour, quiet_hour)</span><br><span class="line">                  ca_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  ca_need_quiet_2(enter_hour, quiet_hour)</span><br><span class="line">                  ch_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  ch_need_quiet_2(enter_hour, quiet_hour)</span><br><span class="line">                  lap_need_public_2(types, enter_hour, public_hour)</span><br><span class="line">                  lap_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="comment">* ca_limit : limitation from total avaliable devices or limit concurrently exist object, ca_limit_quiet: limitation from calculator needs base</span></span><br><span class="line"><span class="keyword">equation</span> objective_refine, ca_limit_public, ca_limit_quiet, ch_limit_public, ch_limit_quiet, lap_limit_public, lap_limit_quiet,</span><br><span class="line">        selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet,</span><br><span class="line">        ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet;</span><br><span class="line"></span><br><span class="line"><span class="comment">* because we are maxmizing efficiency, so we only put calculate people to switch list if quiet_arrange is full</span></span><br><span class="line"><span class="function"><span class="title">objective_refine</span></span>..</span><br><span class="line">    total_efficiency <span class="symbol">=e=</span> <span class="keyword">sum</span>((types, enter_hour, public_hour), (public_arrange(types, enter_hour, public_hour)+ ca_need_public_1(types, enter_hour, public_hour)*calculator_factor + ch_need_public_1(types, enter_hour, public_hour)*charger_factor + lap_need_public_1(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)</span><br><span class="line">                                + (switch_p2q(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour)*calculator_factor + ch_need_public_2(types, enter_hour, public_hour)*charger_factor + lap_need_public_2(types, enter_hour, public_hour)*laptop_factor)*eff_public(types, public_hour)*p2q) +</span><br><span class="line">                         <span class="keyword">sum</span>((enter_hour, quiet_hour), (quiet_arrange(enter_hour, quiet_hour) + ca_need_quiet_1(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_1(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_1(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)</span><br><span class="line">                                + (switch_q2p(enter_hour, quiet_hour)+ ca_need_quiet_2(enter_hour, quiet_hour)*calculator_factor + ch_need_quiet_2(enter_hour, quiet_hour)*charger_factor + lap_need_quiet_2(enter_hour, quiet_hour)*laptop_factor)*eff_quiet(quiet_hour)*q2p);</span><br><span class="line"><span class="comment">* this series of equations should be =g= because it is permitted that 4 people are permitted to come to the library but the library only have 3 calculators.</span></span><br><span class="line"><span class="function"><span class="title">selection_ca_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"Calculator"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> ca_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ca_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"Calculator"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> ca_need_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ch_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"charger"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> ch_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_ch_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"charger"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> ch_need_quiet(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">selection_la_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((public_i)<span class="symbol">$</span>(Public(public_i,<span class="string">"type"</span>)=<span class="keyword">ord</span>(types)<span class="number">-1</span> <span class="keyword">and</span> Public(public_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"laptop"</span>) = <span class="number">1</span>), select_public(public_i)) <span class="symbol">=g=</span> lap_need_public(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">selection_la_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((quiet_i)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>)=<span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>)=<span class="keyword">ord</span>(quiet_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"laptop"</span>) = <span class="number">1</span>), select_quiet(quiet_i)) <span class="symbol">=g=</span> lap_need_quiet(enter_hour, quiet_hour);   </span><br><span class="line"><span class="function"><span class="title">ca_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), ca_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), ca_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> calculators;</span><br><span class="line"><span class="function"><span class="title">ch_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), ch_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), ch_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> chargers;    </span><br><span class="line"><span class="function"><span class="title">la_limit</span>(<span class="params">o</span>)</span>..</span><br><span class="line">    <span class="keyword">sum</span>((types, enter_hour, public_hour), lap_need_public(types, enter_hour, public_hour)<span class="symbol">$</span>visible_public(o, enter_hour, public_hour)) + <span class="keyword">sum</span>((enter_hour, quiet_hour), lap_need_quiet(enter_hour, quiet_hour)<span class="symbol">$</span>visible_quiet(o, enter_hour, quiet_hour)) <span class="symbol">=l=</span> laptops;</span><br><span class="line"><span class="function"><span class="title">split_ca_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ca_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> ca_need_public_1(types, enter_hour, public_hour) + ca_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_ca_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ca_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> ca_need_quiet_1(enter_hour, quiet_hour) + ca_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_ch_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ch_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> ch_need_public_1(types, enter_hour, public_hour) + ch_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_ch_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ch_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> ch_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_la_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    lap_need_public(types, enter_hour, public_hour) <span class="symbol">=e=</span> lap_need_public_1(types, enter_hour, public_hour) + lap_need_public_2(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_la_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    lap_need_quiet(enter_hour, quiet_hour) <span class="symbol">=e=</span> lap_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_2(enter_hour, quiet_hour);</span><br><span class="line"><span class="function"><span class="title">split_limit_pub</span>(<span class="params">types, enter_hour, public_hour</span>)</span>..</span><br><span class="line">    ca_need_public_1(types, enter_hour, public_hour) + ch_need_public_1(types, enter_hour, public_hour) + lap_need_public_1(types, enter_hour, public_hour) <span class="symbol">=l=</span> public_arrange(types, enter_hour, public_hour);</span><br><span class="line"><span class="function"><span class="title">split_limit_quiet</span>(<span class="params">enter_hour, quiet_hour</span>)</span>..</span><br><span class="line">    ca_need_quiet_1(enter_hour, quiet_hour) + ch_need_quiet_1(enter_hour, quiet_hour) + lap_need_quiet_1(enter_hour, quiet_hour) <span class="symbol">=l=</span> quiet_arrange(enter_hour, quiet_hour);</span><br><span class="line"><span class="keyword">model</span> simple_obj2 /conn1, conn2, limit, objective_refine, selection_ca_pub, selection_ca_quiet, selection_ch_pub, selection_ch_quiet, selection_la_pub, selection_la_quiet,</span><br><span class="line">        ca_limit, ch_limit, la_limit, split_ca_pub, split_ca_quiet, split_ch_pub, split_ch_quiet, split_la_pub, split_la_quiet, split_limit_pub, split_limit_quiet,</span><br><span class="line">        people_public, people_quiet, selection_quiet, selection_public, chatting_lower/;</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line"></span><br><span class="line"><span class="comment">* save result in parameter</span></span><br><span class="line">selection_public_(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>9830.486</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.067</td></tr></tbody></table><p><a id="p1"></a></p><h5 id="plot-result-at-area-below"><a class="markdownIt-Anchor" href="#plot-result-at-area-below"></a> Plot result at area below:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d chairs selection_public_ selection_quiet_</span><br><span class="line">display(chairs)</span><br><span class="line">chairs.set_index([<span class="string">'run'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line">fig,(ax0,ax1) = plt.subplots(ncols=<span class="number">2</span>,figsize=(<span class="number">14</span>,<span class="number">5</span>))</span><br><span class="line">val=chairs.value.unique()</span><br><span class="line">print(val)</span><br><span class="line">labels=[<span class="string">'public'</span>, <span class="string">'quiet'</span>]</span><br><span class="line">chairs.loc[<span class="string">"1"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax0.pie(val,autopct=<span class="string">'%1.2f'</span>,labels=labels)</span><br><span class="line">ax0.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax0.set_title(<span class="string">'The number of students without calculation of equipments'</span>);</span><br><span class="line">chairs.loc[<span class="string">"2"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax1.pie(val,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax1.set_title(<span class="string">'The number of students with calculation of equipments'</span>);</span><br><span class="line">display(selection_public_, selection_quiet_)</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>run</th><th>room</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>public</td><td>321.0</td></tr><tr><td>1</td><td>1</td><td>quiet</td><td>679.0</td></tr><tr><td>2</td><td>2</td><td>public</td><td>321.0</td></tr><tr><td>3</td><td>2</td><td>quiet</td><td>679.0</td></tr></tbody></table><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>run</th><th>public_i</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>1</td><td>1.0</td></tr><tr><td>1</td><td>1</td><td>2</td><td>1.0</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1.0</td></tr><tr><td>3</td><td>1</td><td>4</td><td>1.0</td></tr><tr><td>4</td><td>1</td><td>5</td><td>1.0</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>2787</td><td>2</td><td>1922</td><td>1.0</td></tr><tr><td>2788</td><td>2</td><td>1923</td><td>1.0</td></tr><tr><td>2789</td><td>2</td><td>1924</td><td>1.0</td></tr><tr><td>2790</td><td>2</td><td>1925</td><td>1.0</td></tr><tr><td>2791</td><td>2</td><td>1926</td><td>1.0</td></tr></tbody></table><p>2792 rows × 3 columns</p><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>run</th><th>quiet_i</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>1</td><td>1.0</td></tr><tr><td>1</td><td>1</td><td>2</td><td>1.0</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1.0</td></tr><tr><td>3</td><td>1</td><td>4</td><td>1.0</td></tr><tr><td>4</td><td>1</td><td>5</td><td>1.0</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>3597</td><td>2</td><td>1898</td><td>1.0</td></tr><tr><td>3598</td><td>2</td><td>1899</td><td>1.0</td></tr><tr><td>3599</td><td>2</td><td>1900</td><td>1.0</td></tr><tr><td>3600</td><td>2</td><td>1901</td><td>1.0</td></tr><tr><td>3601</td><td>2</td><td>1902</td><td>1.0</td></tr></tbody></table><p>3602 rows × 3 columns</p><img src="/2019/projects/College-library-optimization-problem/output_9_4.png" title="test"><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">solve</span> simple_obj1 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">selection_public_(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">selection_public_(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br><span class="line">selection_quiet_(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">chairs(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>704.900</td><td>601</td><td>4403</td><td>MIP</td><td>CPLEX</td><td>0.019</td></tr><tr><td>1</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>791.634</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.086</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d chairs</span><br><span class="line"></span><br><span class="line"><span class="comment">#chairs.set_index(['run'],inplace=True)</span></span><br><span class="line">display(chairs)</span><br><span class="line">fig,(ax0,ax1) = plt.subplots(ncols=<span class="number">2</span>,figsize=(<span class="number">14</span>,<span class="number">5</span>))</span><br><span class="line">val=chairs.loc[chairs.run == <span class="string">"2"</span>].value</span><br><span class="line">vals=chairs.loc[chairs.run == <span class="string">"1"</span>].value</span><br><span class="line"></span><br><span class="line">labels=[<span class="string">'public'</span>, <span class="string">'quiet'</span>]</span><br><span class="line">ax0.set_title(<span class="string">'The number of students  without calculation of equipments'</span>);</span><br><span class="line">ax0.pie(vals,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">chairs.loc[chairs.run == <span class="string">"2"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">chairs.loc[chairs.run == <span class="string">"1"</span>].pivot_table(index=[<span class="string">'room'</span>],values=[<span class="string">'value'</span>]).plot.pie(labels=labels,ax=ax1,y=<span class="string">'value'</span>,legend=<span class="literal">False</span>)</span><br><span class="line">ax1.pie(val,autopct=<span class="string">'%1.2f'</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">''</span>)</span><br><span class="line">ax1.set_title(<span class="string">'The number of students with calculation of equipments'</span>);</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>run</th><th>room</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>public</td><td>50.0</td></tr><tr><td>1</td><td>2</td><td>public</td><td>25.0</td></tr><tr><td>2</td><td>2</td><td>quiet</td><td>25.0</td></tr></tbody></table><img src="/2019/projects/College-library-optimization-problem/output_11_1.png" title="test"><p><a id="c1"></a></p><h5 id="conclusion-for-this-part"><a class="markdownIt-Anchor" href="#conclusion-for-this-part"></a> Conclusion for this part:</h5><p>Based on our problem, (the total_limit is 1000), there are no significant difference between borrowing equipments and not borrowing equipments. But if we look into a smaller scalar problem, there are difference betweeen those two cases. The reason for it is that borrowing equipment has a low chance to happen.</p><p>For the conclusion, library need to arrange 321 seats for public area and 679 seats for quiet area in order to maxmize students’ total efficiency in the busy hours. We also demostrate a permission list but we think it is not unique and it is not as important as seats arrangement. So, we represented it but not discuss a lot about it.</p><h4 id="objective2-2"><a class="markdownIt-Anchor" href="#objective2-2"></a> Objective2:</h4><p>More gdx file is provided. Those gdx files describe different time of requests from students. How to arrange seats in the library to try the best to meet the requirement of student’s thought in those gdx files and maximize the total efficiency of students using the library? Each gdx file is considered as a different scene, store the output in parameter and plot different seat arrangement during this year in a line diagram and draw out if there is any suggestion to provide to the library.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">set</span> obj2 <span class="comment">"1:free 2:middle 3:busy"</span> /<span class="number">1</span>*<span class="number">3</span>/;</span><br><span class="line"><span class="keyword">parameter</span> problem2(obj2, room), selection_problem2_quiet(obj2,quiet_i),  selection_problem2_public(obj2,public_i);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-free.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"1"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"1"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"1"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"1"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>6809.384</td><td>2642</td><td>5873</td><td>MIP</td><td>CPLEX</td><td>0.05</td></tr></tbody></table><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-middle.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"2"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"2"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"2"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"2"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>8038.18</td><td>2642</td><td>6342</td><td>MIP</td><td>CPLEX</td><td>0.056</td></tr></tbody></table><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line">total_limit = <span class="number">1000</span>;</span><br><span class="line"><span class="meta"><span class="meta-keyword">$onMultiR</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span> data-busy.gdx</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> public_i&lt;Public.dim1 public_j&lt;Public.dim2 Public=Public</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$load</span> quiet_i&lt;Quiet.dim1 quiet_j&lt;Quiet.dim2 Quiet=Quiet</span></span><br><span class="line"><span class="comment">*,hours=hours,laptop=laptop,Calculator=Calculator, charger=charger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$gdxin</span></span></span><br><span class="line">n_pe_public(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, <span class="number">1</span><span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">n_pe_quiet(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, <span class="number">1</span><span class="symbol">$</span>((Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour)) <span class="keyword">and</span> (Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour))));</span><br><span class="line">ca_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ca_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"Calculator"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">ch_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">ch_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"charger"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line">lap_need_public.up(types, enter_hour, public_hour) = <span class="keyword">sum</span>(public_i, Public(public_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Public(public_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(public_hour) <span class="keyword">and</span> Public(public_i,<span class="string">"type"</span>) = <span class="keyword">ord</span>(types)<span class="number">-1</span>));</span><br><span class="line">lap_need_quiet.up(enter_hour, quiet_hour) = <span class="keyword">sum</span>(quiet_i, Quiet(quiet_i,<span class="string">"laptop"</span>)<span class="symbol">$</span>(Quiet(quiet_i,<span class="string">"enter"</span>) = <span class="number">7</span>+<span class="keyword">ord</span>(enter_hour) <span class="keyword">and</span> Quiet(quiet_i,<span class="string">"hours"</span>) = <span class="keyword">ord</span>(quiet_hour)));</span><br><span class="line"><span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">problem2(<span class="string">"3"</span>, <span class="string">"public"</span>) = public_chair.l; </span><br><span class="line">problem2(<span class="string">"3"</span>, <span class="string">"quiet"</span>) = quiet_chair.l;</span><br><span class="line">selection_problem2_quiet(<span class="string">"3"</span>, quiet_i) = select_quiet.l(quiet_i);</span><br><span class="line">selection_problem2_public(<span class="string">"3"</span>, public_i) = select_public.l(public_i);</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>9830.486</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.066</td></tr></tbody></table><p><a id="p2"></a></p><h5 id="plot-result-at-area-below-2"><a class="markdownIt-Anchor" href="#plot-result-at-area-below-2"></a> Plot result at area below:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d problem2 selection_problem2_quiet selection_problem2_public</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">display(selection_problem2_quiet, selection_problem2_public);</span><br><span class="line">display(problem2)</span><br><span class="line">data = np.array(problem2.loc[problem2.room==<span class="string">"public"</span>]).tolist()</span><br><span class="line">public = list()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    public.append(i[<span class="number">2</span>]);</span><br><span class="line">data = np.array(problem2.loc[problem2.room==<span class="string">"quiet"</span>]).tolist()</span><br><span class="line">quiet = list()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    quiet.append(i[<span class="number">2</span>]);</span><br><span class="line">x = [<span class="string">"free"</span>, <span class="string">"middle"</span>, <span class="string">"bussy"</span>]</span><br><span class="line">plt.plot(x, public, marker=<span class="string">'o'</span>, mec=<span class="string">'r'</span>, mfc=<span class="string">'w'</span>,label=<span class="string">"public"</span>)</span><br><span class="line">plt.plot(x, quiet, marker=<span class="string">'*'</span>, ms=<span class="number">10</span>,label=<span class="string">"quiet"</span>)</span><br><span class="line">plt.legend() </span><br><span class="line">plt.title(<span class="string">"Seat arrangement for different time"</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>obj2</th><th>quiet_i</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>1</td><td>1.0</td></tr><tr><td>1</td><td>1</td><td>2</td><td>1.0</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1.0</td></tr><tr><td>3</td><td>1</td><td>4</td><td>1.0</td></tr><tr><td>4</td><td>1</td><td>5</td><td>1.0</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>4620</td><td>3</td><td>1898</td><td>1.0</td></tr><tr><td>4621</td><td>3</td><td>1899</td><td>1.0</td></tr><tr><td>4622</td><td>3</td><td>1900</td><td>1.0</td></tr><tr><td>4623</td><td>3</td><td>1901</td><td>1.0</td></tr><tr><td>4624</td><td>3</td><td>1902</td><td>1.0</td></tr></tbody></table><p>4625 rows × 3 columns</p><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>obj2</th><th>public_i</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>1</td><td>1.0</td></tr><tr><td>1</td><td>1</td><td>2</td><td>1.0</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1.0</td></tr><tr><td>3</td><td>1</td><td>4</td><td>1.0</td></tr><tr><td>4</td><td>1</td><td>5</td><td>1.0</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>4603</td><td>3</td><td>1922</td><td>1.0</td></tr><tr><td>4604</td><td>3</td><td>1923</td><td>1.0</td></tr><tr><td>4605</td><td>3</td><td>1924</td><td>1.0</td></tr><tr><td>4606</td><td>3</td><td>1925</td><td>1.0</td></tr><tr><td>4607</td><td>3</td><td>1926</td><td>1.0</td></tr></tbody></table><p>4608 rows × 3 columns</p><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>obj2</th><th>room</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>public</td><td>556.0</td></tr><tr><td>1</td><td>1</td><td>quiet</td><td>444.0</td></tr><tr><td>2</td><td>2</td><td>public</td><td>453.0</td></tr><tr><td>3</td><td>2</td><td>quiet</td><td>547.0</td></tr><tr><td>4</td><td>3</td><td>public</td><td>321.0</td></tr><tr><td>5</td><td>3</td><td>quiet</td><td>679.0</td></tr></tbody></table><img src="/2019/projects/College-library-optimization-problem/output_18_3.png" title="test"><p><a id="c2"></a></p><h5 id="conclusion-for-this-part-2"><a class="markdownIt-Anchor" href="#conclusion-for-this-part-2"></a> Conclusion for this part:</h5><p>As we mentioned in the problem, we provided the permission in each case. But it is not useful.</p><p>By using the graph, we could clearly see that more quiet seats need to be arranged when students get bussier. This might be a guidance for library to provide different arrangement of seats in different time period.</p><p><a id="p3"></a></p><h4 id="objective3-2"><a class="markdownIt-Anchor" href="#objective3-2"></a> Objective3:</h4><p>Solve the model multiple times with different total seats provided, do you have any recommendation for the school that they need to buy more seats or not? Do not consider rules of fire protection design and construction of buildings. Plot the result in graph and explain the reason.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%%gams</span><br><span class="line"><span class="keyword">set</span> limits /<span class="number">1</span>*<span class="number">200</span>/;</span><br><span class="line"><span class="keyword">parameter</span> n_result(limits);</span><br><span class="line"><span class="keyword">loop</span>(limits,</span><br><span class="line">     total_limit = <span class="keyword">ord</span>(limits)*<span class="number">10</span>;</span><br><span class="line">     <span class="keyword">solve</span> simple_obj2 <span class="keyword">using</span> mip maxmizing total_efficiency;</span><br><span class="line">     n_result(limits) = total_efficiency.l;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><table class="highlight1"><thead><tr style="text-align:right"><th></th><th>Solver Status</th><th>Model Status</th><th>Objective</th><th>#equ</th><th>#var</th><th>Model Type</th><th>Solver</th><th>Solver Time</th></tr></thead><tbody><tr><td>0</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>165.596</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.11</td></tr><tr><td>1</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>331.180</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.089</td></tr><tr><td>2</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>488.794</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.084</td></tr><tr><td>3</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>642.634</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.085</td></tr><tr><td>4</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>791.634</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.085</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>195</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>10790.158</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.055</td></tr><tr><td>196</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>10790.158</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.054</td></tr><tr><td>197</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>10790.158</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.055</td></tr><tr><td>198</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>10790.158</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.054</td></tr><tr><td>199</td><td>Normal (1)</td><td>Optimal Global (1)</td><td>10790.158</td><td>2642</td><td>6977</td><td>MIP</td><td>CPLEX</td><td>0.051</td></tr></tbody></table><p>200 rows × 8 columns</p><a id="p33"></a><h5 id="plot-result-area"><a class="markdownIt-Anchor" href="#plot-result-area"></a> Plot result area:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%gams_pull -d n_result</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">ax = plt.gca()</span><br><span class="line">n_result.set_index([<span class="string">'value'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n_result[<span class="string">"limits"</span>]:</span><br><span class="line">    n_result.replace(to_replace = i, value = int(i)*<span class="number">10</span>, inplace=<span class="literal">True</span>) </span><br><span class="line">n_result.reset_index(inplace=<span class="literal">True</span>)</span><br><span class="line">n_result.plot(kind=<span class="string">'line'</span>,x=<span class="string">'limits'</span>,y=<span class="string">'value'</span>,ax=ax)</span><br></pre></td></tr></table></figure><img src="/2019/projects/College-library-optimization-problem/output_23_1.png" title="test"><p><a id="c31"></a></p><h5 id="conclusion-for-this-part-3"><a class="markdownIt-Anchor" href="#conclusion-for-this-part-3"></a> Conclusion for this part</h5><p>As we could see on the graph that the slope goes down at point around 1200. So for the bussiest season, school do need to buy more chairs for students to study.</p><p><a id="c3"></a></p><h5 id="conclusion-for-this-project"><a class="markdownIt-Anchor" href="#conclusion-for-this-project"></a> Conclusion for this project:</h5><p>In this project, we learned how to use gams and solve a near real case problem. We observe an optimized seat arrangement for library to use. We also see the difference between different time in one semester and the result could be used to guide seat arrangements. At last, we see that 1000 seats might be too small for this library and they need to buy more.</p><p>We spent a lot of time on this project and we learned a lot from it. We also observe that gams system is pretty simple and efficient compared to other language. In the future, we would like to use it for more times on optimization problem.</p>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAMS </tag>
            
            <tag> MIP </tag>
            
            <tag> CPLEX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common error while running EOSIO</title>
      <link href="/2019/common-run-eosio/"/>
      <url>/2019/common-run-eosio/</url>
      
        <content type="html"><![CDATA[<h3 id="common-error-and-solution-during-running-and-building-connections-between-eosio-components"><a class="markdownIt-Anchor" href="#common-error-and-solution-during-running-and-building-connections-between-eosio-components"></a> Common error and solution during running and building connections between EOSIO components:</h3><blockquote><p>Error 3050000: Action validate exception<br>Error Details:<br>inline action’s authorizing actor eosio.ram does not exist</p></blockquote><p>Solution: Make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts. Otherwise this error will show up when creating block producer or voter.<a id="more"></a> For more details, see <a href="../EOSIO_local_network/#3">here</a> or <a href="https://developers.eos.io/eosio-nodeos/docs/bios-boot-sequence#section--1-7-create-important-system-accounts-" target="_blank" rel="noopener">here</a>.</p><blockquote><p>Error 3080001: Account using more than allotted RAM usage<br>Error Details:<br>account eosio.ram has insufficient ram; needs 2996 bytes has 0 bytes</p></blockquote><p>Solution: Basically, this error happens when some account has insufficient ram. It depends on the account type you are creating.</p><ul><li>If the account is eosio.***, then it is a system account. If this happens, then make sure the eosio.ram was created before setting any contracts(eosio.system, eosio.msig). It should also be created before initializing system accounts.</li><li>If the account is an arbitrary name, then it is a user account(producer/worker). If this is the case, the common error is using wrong command to create new account. For account other than system account, it seems it is required to use <code>cleos system newaccount [OPTIONS] creator name OwnerKey [ActiveKey]</code>.</li></ul><blockquote><p>Error 3120003: Locked wallet<br>Ensure that your wallet is unlocked before using it!<br>Error Details:<br>You don’t have any unlocked wallet!</p></blockquote><p>Solution: The wallet need to be unlocked before experiment.</p><blockquote><p>Error 3050001: Account name already exists<br>Error Details:<br>Cannot create account named bp1111111111, as that name is already taken</p></blockquote><p>Solution: Use another name.</p><blockquote><p>Error 3050003: eosio_assert_message assertion failure<br>Error Details:<br>assertion failure with message: cannot use transfer flag if delegating to self</p></blockquote><p>Solution: It seems --transfer tag for self transfer is for some old version of EOSIO. Remove it if error happens. Though the error happens, the command still get executed sometime.</p><blockquote><p>assertion failure with message: system contract must first be initialized</p></blockquote><p>Solution: Make sure <code>eosio.msig</code> is a privileged account and Initialize system account. To do those:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio setpriv <span class="string">'["eosio.msig", 1]'</span> -p eosio@active</span><br><span class="line"></span><br><span class="line">cleos push action eosio init <span class="string">'["0", "4,SYS"]'</span> -p eosio@active</span><br></pre></td></tr></table></figure><blockquote><p>Not producing block because I don’t have the private key for EOS5ks6trFhN8xz5mxaDAwQy7qJdjHhNwQbLca6wkYuRKwvGDUAPG</p></blockquote><p>Solution: This message happens when running the very first node in the network, who will produce the genesis block. Make sure the EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh is the same as the EOS_PUB_DEV_KEY in genesis.json. And EOS_PRIV_DEV_KEY is the private key of this public key. For those two files. genesis_start.sh is a file contain the information for the genesis block. genesis_start.sh is a file to start the very first node in the network. For more details, see <a href="../EOSIO_local_network/#Build-local-test-network">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Notes</title>
      <link href="/2019/Hexo-Notes/"/>
      <url>/2019/Hexo-Notes/</url>
      
        <content type="html"><![CDATA[<h3 id="some-notes-for-hexo"><a class="markdownIt-Anchor" href="#some-notes-for-hexo"></a> Some notes for Hexo</h3><p>HEXO is always case sensitive whiling redirecting pages and setting up file properties(yaml).</p><p>Hexo is not good for converting table to html format. The solution is to use html format table directly.</p><p>Yaml format space in the fron is two spaces instead of a tab or 4 spaces, they won’t work: e.g.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">website</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common error while building EOSIO</title>
      <link href="/2019/common-build-eosio/"/>
      <url>/2019/common-build-eosio/</url>
      
        <content type="html"><![CDATA[<h3 id="common-error-and-solution-during-compiling-eosio-components"><a class="markdownIt-Anchor" href="#common-error-and-solution-during-compiling-eosio-components"></a> Common error and solution during compiling EOSIO components:</h3><blockquote><p>Doesn’t have boost or boost library is lower than required.</p></blockquote><p>Solution: It seems the latest version of boost is not in the ubuntu package management right now. I compiled and installed it from source to solve this issue. I installed version 1.67. But the minimum version it requires is 1.57 (I remember).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O boost_1_67_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.67.0/boost_1_67_0.tar.gz/download</span><br><span class="line">tar xzvf boost_1_67_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_67_0/</span><br></pre></td></tr></table></figure><a id="more"></a><p>Then, get the required libraries and setup. The one required at here is icu for boost::regex. But I installed all of them in case they will be needed in some other places.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev libboost-all-dev</span><br><span class="line">./bootstrap.sh --prefix=/usr/</span><br></pre></td></tr></table></figure><p>Then, build it and install it:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./b2 <span class="comment"># Build it</span></span><br><span class="line">sudo ./b2 install <span class="comment"># install it</span></span><br></pre></td></tr></table></figure><blockquote><p>Add the installation prefix of “eosio” to CMAKE_PREFIX_PATH or set<br>“eosio_DIR” to a directory containing one of the above files. If “eosio”<br>provides a separate development package or SDK, be sure it has been<br>installed.</p></blockquote><p>Solution: Error happens while compiling EOSIO.contracts.</p><ol><li><p>Be sure EOS is compiled and installed from source instead of ubuntu package.</p></li><li><p>If the EOS is compiled and installed from source. You could find the place for this Cmake file easily.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> EOS_BUILD_PATH <span class="comment"># EOS_BUILD_PATH is the directory EOS was cloned to.</span></span><br><span class="line">find . -name <span class="string">"eosio-config.cmake"</span></span><br><span class="line"><span class="built_in">export</span> eosio_DIR=<span class="string">"PATH_FOUND"</span> <span class="comment"># PATH_FOUND is the path found up by the previous command</span></span><br></pre></td></tr></table></figure><p>The path is usually at <code>EOS_BUILD_PATH/build/lib/cmake/eosio/</code>. And it is good to use absolute directory.</p><p>And then, do <code>./build.sh</code> again.</p></li></ol><blockquote><p>Doesn’t have llvm or doesn’t have required version of llvm while building eosio.cdt.</p></blockquote><p>Solution: llvm package is from another repository. So, add <code>--recursive</code> while git clone.</p><blockquote><p>Did install EOS by using the default installing shell but can not start the program by simply run nodeos from terminal.</p></blockquote><p>Solution: I find this happens on ubuntu 18.04. Use the absolute path to start server instead. Usually, the nodeos program is at <code>EOSIO_BUILD_PATH/build/bin/nodeos</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build Bitcoin local network</title>
      <link href="/2019/Bitcoin_local_network/"/>
      <url>/2019/Bitcoin_local_network/</url>
      
        <content type="html"><![CDATA[<h3 id="some-experience-on-building-bitcoin-local-network"><a class="markdownIt-Anchor" href="#some-experience-on-building-bitcoin-local-network"></a> Some experience on building Bitcoin local network</h3><h4 id="basic-info"><a class="markdownIt-Anchor" href="#basic-info"></a> Basic info</h4><p>Bitcoin is an client based on proof of work(POW).</p><p>Bitcoin core is a client of official bitcoin network. After some tests, I find the local network for bitcoin is good for testing wallet application but hard for testing mining function. In this page, I am going to discuss some experience of mine on building the local test environment for bitcoin core.</p><h5 id="compile-installation"><a class="markdownIt-Anchor" href="#compile-installation"></a> Compile &amp; Installation</h5><a id="more"></a><p>For ubuntu, just do:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev libqrencode-dev </span><br><span class="line">git <span class="built_in">clone</span> https://github.com/bitcoin/bitcoin.git</span><br><span class="line"><span class="built_in">cd</span> bitcoin</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install <span class="comment"># optional</span></span><br></pre></td></tr></table></figure><p>For other system, official has a page at <a href="https://github.com/bitcoin/bitcoin/tree/master/doc" target="_blank" rel="noopener">here</a> described how to build and install.</p><p>Bitcoin core contains three different networks, mainnet, regtest and testnet. The difference of those three networks are as follows:</p><h5 id="mainnet"><a class="markdownIt-Anchor" href="#mainnet"></a> Mainnet</h5><blockquote><p>The original and <strong>main network</strong> for Bitcoin transactions, where satoshis have <strong>real economic value.</strong></p></blockquote><p>As we could see above, mainnet is the main network of bitcoin core. It has the <strong>real economic value</strong>, which means it has lots of restriction. And it make me hard to implement it locally. On the main net, I tried lots of different ways, including connect it with a virtual network, do not connect with network and change some source code. But none of them successfully build a local network.</p><p><em>To start a node under main net, just do: (The default port is 8444/8443)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind</span><br></pre></td></tr></table></figure><p><em>To use rpc to communicate, do the following: (datadir should exist at first)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/A/ -pid=<span class="variable">$HOME</span>/A/.pid -debug -daemon <span class="comment">#-daemon for running in background -debug to get detailed output</span></span><br></pre></td></tr></table></figure><p>In some old version, password and username can not be the same.</p><p><em>To connect to a specific node, use -connect tag.</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -connect=127.0.0.1:17592 -datadir=<span class="variable">$HOME</span>/A/ -pid=<span class="variable">$HOME</span>/A/.pid -debug -daemon</span><br></pre></td></tr></table></figure><p>-reindex-chainstate(Rebuild chain state from the currently indexed blocks ) and -reindex(Rebuild chain state and block index from the blk*.dat files on disk ) might be helpful some time. If need them, just add them to the end of the startup code</p><p><em>Use the following code to start 5 nodes and connect them together under main net:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. To check them:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"~/test/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A B C D E</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span><span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir -p <span class="variable">$DATADIR</span><span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>If you want to restart a new test or changed the version of bitcoind running on the machine(from high version to low version). You have to delete the datadir:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"~/test/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A B C D E</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$DATADIR</span><span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">  rm -rf <span class="variable">$DATADIR</span><span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>To get info from any node by using rpc command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><p><strong>bitcoin-cli</strong> is just a communication tool. So, you could use the same command to communicate with different nodes in different model(mainnet, testnet, regtest).</p><p>Moreover, you could also use it to communicate with other project’s node forked from bitcoind, like litecoind.</p><h5 id="regtest"><a class="markdownIt-Anchor" href="#regtest"></a> Regtest</h5><blockquote><p>A local testing environment in which developers can almost instantly <strong>generate blocks on demand</strong> for testing events, and can create private satoshis with no real-world value.</p></blockquote><p><strong>generate blocks on demand</strong> means it is not real case. It is fake mining. An easy example is it produce block quick and producer doesn’t get award they should have. Another example is the normal case should have nonce 0-0xfffff. But it only have nonce 0-4 for every block. So, it is a good tool to test transaction and wallet application locally.</p><p><em>To start a node under regtest, just do: (The default port is 18444/18443)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -regtest</span><br></pre></td></tr></table></figure><p>The other commands like whatever at the first part of main net. Just add the -regtest tag to the program.</p><p><em>Use the following code to start 5 nodes and connect them together under regtest:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -regtest -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -regtest -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. See the former part for the way to do those procedure</p><p>Though it is possible to use command represented before, the official recommend to use this one:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><h5 id="testnet"><a class="markdownIt-Anchor" href="#testnet"></a> Testnet</h5><blockquote><p>A global testing environment in which developers can obtain and spend satoshis that have <strong>no real-world value</strong> on a network that is <strong>very similar</strong> to the Bitcoin mainnet.</p></blockquote><p><strong>very similar</strong> means it is likely to be the same as the main net. <strong>no real-world value</strong> means you could get some points free online.</p><p>By comparing with mainnet, it seems there is restriction on the height on the testnet, which means difficulty has restriction. Right now, it is at the version 3. Its version could be changed by developer, but it is hardcoded. Difficulty does change when the height being higher and higher. And most things are similar to mainnet. It also has the same restrictions as the main net. So, testnet is best for testing transaction application and wallet application.</p><p>To start a node under testnet, just do: (The default port is 18444/18443)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoind -testnet</span><br></pre></td></tr></table></figure><p>The other commands like whatever at the first part of main net. Just add the -testnet tag to the program.</p><p>Use the following code to start 5 nodes and connect them together under testnet:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bitcoind -server -listen -port=17591 -rpcuser=123 -rpcpassword=123 -rpcport=16591 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/ -testnet -connect=127.0.0.1:17592 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/A/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17592 -rpcuser=123 -rpcpassword=123 -rpcport=16592 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/B/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17593 -rpcuser=123 -rpcpassword=123 -rpcport=16593 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/C/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17594 -rpcuser=123 -rpcpassword=123 -rpcport=16594 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/D/.pid -debug</span><br><span class="line">bitcoind -server -listen -port=17595 -rpcuser=123 -rpcpassword=123 -rpcport=16595 -datadir=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/ -testnet -connect=127.0.0.1:17591 -pid=<span class="variable">$HOME</span>/<span class="built_in">test</span>/E/.pid -debug</span><br></pre></td></tr></table></figure><p>Those data dir should exist. See the former part for the way to do those procedure</p><p>Though it is possible to use command represented before, the official recommend to use this one:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli -testnet -rpcport=16591 -rpcuser=123 -rpcpassword=123 RPC_COMMAND</span><br></pre></td></tr></table></figure><p>RPC_COMMAND are commands like getpeerinfo, getblocktemplpate, getmininginfo, or some commands about transaction. The full list is on <a href="https://bitcoincore.org/en/doc/0.17.0/" target="_blank" rel="noopener">Bitcoin Core 0.17.0 RPC</a></p><h5 id="version-difference"><a class="markdownIt-Anchor" href="#version-difference"></a> Version difference</h5><img alt="Version difference" src="https://h59ygg.bn.files.1drv.com/y4mi5rh-SwSuFKvGvOs_EIQFjXefs1P_ViKroareW_mtIrjAE_zF4160tywav8iK4hgNfGuu87DXGP4gD-kvkFTxi-TEMXjXHcxSQaudMBhQf7KfoHV6hv_MWClF6czkxt7jwKQA7AOQbSCR1YwEcVX9ouTRmH6CKA26mAayQXnIK7O04Yt9A1dl0sg4AKKvcZWvg7l9DqK0QSD7f1gzZbGJw?width=1280&height=720&cropmode=none" width="100%"><p>The bubble is the separator of different version. Litecoind is forked out from bitcoind since 0.16.3. The methods talked above, getblocktemplate, is only for mainnet or testnet. For the regtest net, there is only one method, generate or generatetoaddress. <strong>0.17.9</strong> remove wallet functions like listaccounts. It also remove generate function. To confirm a block on regtest, use generatetoaddress instead.</p><h5 id="to-connect-nodes"><a class="markdownIt-Anchor" href="#to-connect-nodes"></a> To connect nodes</h5><img alt="Basic structure" src="https://fpqpjg.bn.files.1drv.com/y4mXqpE6NGGZOHb58ocVVjMxMYZ_UM-D9IWy5CWPwqGXHIxRYk7nQncfdf9We3Cf9nva_kWx6fiKELZzbgUqH1sxr0Mx5Byu_B33dIyiULR7wPMQgOkcrM6_wu_YTadEZxndBs_y5RyS5G2YlE6tpQ9HhZqG_DNxtftVvErHpzPV1ELwiJ0UKya-ie1pfjjKuozoag40X8sMsNgaZY2nbXVgA?width=1280&height=720&cropmode=none" width="100%"><p>This graph is the basic way to connect nodes. The miner is always separate with the main net. Loop connection is permitted but not required. In order to start using mining feature(getblocktemplate). Be sure to have at least two nodes connected. Actually, there are more restriction than this.</p><h4 id="to-confirm-a-block"><a class="markdownIt-Anchor" href="#to-confirm-a-block"></a> To confirm a block</h4><img alt="Structure to mine" src="https://fp8bjw.bn.files.1drv.com/y4mdRutIlghFFflWeN_puKMs_4LpZsI8wk9IWOQ3lhXixvxVuoO6OK3VeBB4TNLaFIdGO0NIGJVmFkyZxVoxhpYvoHo3USjmB1n3R3EsLAOaopAUvz5nVWqFp1ojkL-zWeeWDRsff0cVx8HcvXMF21RFXsgw9ez4re7vUudQKVeyELWlfOGycyNM56xibsw9NgcEbO5uwRSgJPXllE_qW_4dg?width=1280&height=720&cropmode=none" width="100%"><p><strong>Bitcoin core full node</strong> is the client start by bitcoind by using command in the previous section.</p><p>Above is the basic structure for mining(confirm a block). If no other things happen, one block will be completely confirmed 100 blocks later. The confirm interval is 100 blocks.</p><p><strong>Getblocktemplate</strong> is a method which will return the following structure as a return result as a json for the miner to use, which contains information miner need. The structure looks like this:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"result"</span>:&#123;</span><br><span class="line">      <span class="attr">"capabilities"</span>:[<span class="string">"proposal"</span>],</span><br><span class="line">      ...</span><br><span class="line">      "previousblockhash":"756c7b16ef069c782fe6faf9e393483821261206fe110d409c11fbc4a0b927b0",</span><br><span class="line">      "transactions":[], 'Transactions information could be used for next block'</span><br><span class="line">      "coinbaseaux":&#123;"flags":""&#125;, 'miner will use this and the nest value to build coinbase'</span><br><span class="line">      "coinbasevalue":5000000000, 'bonus people have'</span><br><span class="line">      "longpollid":"756c7b16ef069c782fe6faf9e393...06fe110d409c11fbc4a0b927b02", 'bitcoind technique'</span><br><span class="line">      "target":"7fffff0000000000000000000000000000000000000000000000000000000000", </span><br><span class="line">      "mintime":1550614864,</span><br><span class="line">      "noncerange":"00000000ffffffff",</span><br><span class="line">  ...</span><br><span class="line">      "bits":"207fffff",</span><br><span class="line">      "height":4,</span><br><span class="line">      ...</span><br><span class="line">   &#125;,</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>After version <strong>0.17.9</strong>. You have to attach the argument segwit in order to get a return. Their official said this is safer. In order to attach argument, it is recommend to use curl:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user 123 --data-binary <span class="string">'&#123;"id": 1, "method": "getblocktemplate", "params": [&#123;"rules": ["segwit"], "capabilities": ["coinbasetxn", "workid", "coinbase/append"]&#125;]&#125;'</span> -H <span class="string">'content-type: text/plain;'</span> http://127.0.0.1:16592/</span><br></pre></td></tr></table></figure><p><strong>Miners</strong> are softwares used for mining</p><p>If you are using Miner software, then you don’t have to understand what getblocktemplate get. Miner software will handle them. But you have to make sure the Getblocktemplate method is working and coinbasevalue exist and it is not 0.</p><blockquote><p>To make the coinbasevalue exist and it is not 0, it might be helpful to make sure <a href="https://github.com/bitcoin/libblkmaker" target="_blank" rel="noopener">libblkmaker</a>compile successfully. Because there is some library dependence required. And Getblocktemplate never tell you what is the dependence and the main bitcoin core could compile without it. Maybe there are some better ways. But I fix every dependences by compile libblkmaker. I think it is because they use the same dependence at somewhere. But some people also say bitcoin’s getblocktemplate relay on libblkmaker.</p></blockquote><p>There are two official recommend and commonly used miner. <a href="https://bitcointalk.org/?topic=877081" target="_blank" rel="noopener">BFGMiner</a> and <a href="https://bitcointalk.org/?topic=877081" target="_blank" rel="noopener">Cgminer</a>.</p><p><em>To start solo mining by using <strong>BFGMiner</strong>:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bfgminer -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to <span class="string">"PUBLIC_ADDRESS"</span> --coinbase-sig <span class="string">"rig1: This is Joe's block!"</span> --net-delay</span><br></pre></td></tr></table></figure><p>–coinbase-sig is for comments, it is not required</p><p>–net-delay is to make it don’t communicate with server too frequently.</p><p>You could use -S to specify hardware you want to use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bfgminer -S opencl:auto -o http://127.0.0.1:16592 -u 123 -p 123 --generate-to <span class="string">"PUBLIC_ADDRESS"</span></span><br></pre></td></tr></table></figure><p><em>To start solo mining by using <strong>Cgminer</strong>:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgminer -o http://localhost:8332 -u username -p password --btc-address PUBLIC_ADDRESS</span><br></pre></td></tr></table></figure><p>This is from the official website, I did’t test it. It requires to use FPGA and ASIC miner.</p><p>If you want to build a miner from scratch, official do provide some instructions at their <a href="https://en.bitcoin.it/wiki/Getblocktemplate#For_developers" target="_blank" rel="noopener">website</a></p><p>Actually, if you just want to build a miner application, most of people choose to make their application based on the <a href="https://github.com/bitcoin/libblkmaker" target="_blank" rel="noopener">libblkmaker</a> official provided.</p><h4 id="special-note"><a class="markdownIt-Anchor" href="#special-note"></a> Special note</h4><ol><li>In order to simulate a real network case that lots of transaction happens every second, you could use the following code:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 1000)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  bitcoin-cli -regtest -rpcport=16591 -rpcuser=123 -rpcpassword=123 sendtoaddress <span class="string">"PUBLIC_ADDRESS"</span> 0.0001</span><br><span class="line">  sleep 2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>Build Path should be correct. If you change the path of compiled file, you have to reconfigure and recompile before install or do other implementation.<br>Bitcoind is not friendly for mining locally</p></li><li><p>For mainnet and testnet, they set up some restriction. So getblocktemplate never works. The coding for getblocktemplate is in <a href="https://github.com/bitcoin/bitcoin/blob/adc55dbac5b521d6c9df58d1d69075e6abf0116f/src/rpc/mining.cpp#L292" target="_blank" rel="noopener">mining.cpp</a> Maybe I need to look through source in order to check where is the real restriction. But I guess they setup multiple restrictions. One I found is at <a href="https://github.com/bitcoin/bitcoin/blob/f5a623eb66c81d9d7b11206d574430af0127546d/src/chainparams.cpp" target="_blank" rel="noopener">chainparams.cpp</a>. It is also a direction to try to delete as many information as it could to see if it works.</p></li><li><p>In bitcoind, Genesis block and its information, including time interval, is hard coded, even for genesis block.</p></li><li><p>Bitcoid is easy to compile. But it will occupy 3GB space on disk after compilation. And it takes around an hour to compile. To compile it, their official <a href="https://github.com/bitcoin/bitcoin/tree/f5a623eb66c81d9d7b11206d574430af0127546d/doc" target="_blank" rel="noopener">website</a> described it clearly.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> Bitcoin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bitcoin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build EOSIO local network</title>
      <link href="/2019/EOSIO_local_network/"/>
      <url>/2019/EOSIO_local_network/</url>
      
        <content type="html"><![CDATA[<h3 id="some-experience-on-building-eosio-local-network"><a class="markdownIt-Anchor" href="#some-experience-on-building-eosio-local-network"></a> Some experience on building EOSIO local network</h3><h4 id="basic-info"><a class="markdownIt-Anchor" href="#basic-info"></a> Basic info</h4><p>EOSIO is an application based on proof of stake. I am going to discuss my experience on setting up the local test environment for EOSIO. The test version for EOS is 1.7 and test environment is Ubuntu 18.04.<br>The whole system is made up of three components in order to build local environment:</p><ul><li><p><strong>EOS</strong> - Main net. Basic communication</p></li><li><p><strong>EOS.CDT</strong> - Developer package. API for application</p></li><li><p><strong>EOS.CONTRACT</strong> - super user account setup. It store information about different user and send call to system, like create an voter account.</p></li></ul><p>Following is the basic network structure of EOSIO</p><a id="more"></a><ul><li><p>Only one <strong>super account</strong>. It produces blocks based on gensis.json. It can also interact with system to create accounts, register producers.</p></li><li><p>Multiple(21) <strong>block generators</strong>. They will produce(confirm) block once get enough vote</p></li><li><p><strong>Voter</strong>. It could vote producer.</p></li></ul><p>gensis.json is a json file contains the information for the system to produce gensis block. Its structure is as follows:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"initial_timestamp"</span>: <span class="string">"2018-12-05T08:55:11.000"</span>, </span><br><span class="line">  "initial_key": "EOS_PUB_DEV_KEY", 'Only the super account who has the private key relate to this key can produce block'</span><br><span class="line">  "initial_configuration": &#123;</span><br><span class="line">    ... </span><br><span class="line">    "target_block_cpu_usage_pct": 500, 'It doesn't like bitcoind, you could set up everything of the genesis block by yourself.'</span><br><span class="line">    "max_transaction_cpu_usage": 50000,</span><br><span class="line">    "min_transaction_cpu_usage": 100,</span><br><span class="line">    "max_transaction_lifetime": 3600,</span><br><span class="line">    "deferred_trx_expiration_window": 600,</span><br><span class="line">    "max_transaction_delay": 3888000,</span><br><span class="line">    "max_inline_action_size": 4096,</span><br><span class="line">    "max_inline_action_depth": 4,</span><br><span class="line">    "max_authority_depth": 6</span><br><span class="line">  &#125;,</span><br><span class="line">  "initial_chain_id": "0000000000000000000000000000000000000000000000000000000000000000"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For most things in the file is easy to understand. The server is clever, for the string in the json, the server will choose characters he thought it is correct. Confound server thought will be ignored.</p><h5 id="build-install"><a class="markdownIt-Anchor" href="#build-install"></a> Build &amp; install</h5><p>In order to setup a local test environment, EOS.CDT and EOS.CONTRACT have to be compiled on the local machine. Official said EOS is not required to compile locally. But during my test and some hint from <a href="https://github.com/EOSIO/eosio.contracts" target="_blank" rel="noopener">EOS.CONTRACT</a>. It seems it is required. Original official words as follows:</p><blockquote><ol><li><p>First, ensure that your eosio is compiled to the core symbol for the EOSIO blockchain that intend to deploy to.</p></li><li><p>Second, make sure that you have sudo make installed eosio.</p></li><li><p>Then just run the <code>build.sh</code> in the top directory to build all the contracts and the unit tests for these contracts.</p></li></ol></blockquote><blockquote><p>Before compile and run those stuff, make sure the computer has at least 40GB in your home directory and 8GB of memory.</p></blockquote><p><em>To compile EOS locally, do the following:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/EOSIO/eos --recursive</span><br><span class="line"><span class="built_in">cd</span> eos/</span><br><span class="line">./scripts/eosio_build.sh</span><br></pre></td></tr></table></figure><p>It is also required to install this one into root. The build script is at scripts directory right now. And it may take up to 3 hours to build. It could be faster if you are using a multi-core computer.</p><p>It is also recommended to install it. So that it will be easier to use in the future. Just do <code>./scripts/eosio_install.sh</code>. During my test on ubuntu 18.04. The script installed successfully. But I can not run it in the shell.</p><p><em>Then build <a href="https://github.com/EOSIO/eosio.cdt" target="_blank" rel="noopener">eosio.cdt</a>.</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/eosio/eosio.cdt</span><br><span class="line"><span class="built_in">cd</span> eosio.cdt</span><br><span class="line">./build.sh</span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>There should exist at least 10GB to compile this one.</p><p><em>Then build <a href="https://github.com/EOSIO/eosio.contracts" target="_blank" rel="noopener">eosio.contracts</a>.</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EOSIO/eosio.contracts.git</span><br><span class="line">cd eosio.contracts/</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure><p>The building process of eosio.cdt and eosio.contracts is nothing special but time consuming. It might take up to 2 hours to build. And it is impossible to build using multiple cores.</p><p>Some common error and solutions could be found at <a href="../common-build-eosio/">here</a>.</p><h5 id="initialize"><a class="markdownIt-Anchor" href="#initialize"></a> Initialize</h5><p>You need to have an wallet in order to get start. You will have one by doing the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet create --to-console</span><br></pre></td></tr></table></figure><blockquote><p>There is no way to recover password, do remember it.</p></blockquote><p>When you have the password, you could play with cleos. You could use the following command to see full list of subcommand.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>Some useful subcommands are open, unlock, create_key, private_keys. Whenever you want to visit sensitive data, you need to provide the password. To prevent prompted by system, you could use --password to pass in your password.</p><p>Typically, you need to open wallet at first and then unlock to interact with wallet. After all interactions, it is good to lock them.</p><p><em>Batch initialize</em></p><p>The following are scripts might be helpful to initialize for the appropriate data folder and public key-private key pair for multiple(21) nodes.</p><p>To use it, you have to pass in the password as the first attribute</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cleos wallet open</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 21 `</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span><span class="variable">$i</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cleos wallet unlock  --password <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 21)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">cleos wallet create_key</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cleos wallet private_keys  --password <span class="variable">$1</span>|grep <span class="string">"\""</span>&gt;list</span><br><span class="line"></span><br><span class="line">python3 a.py <span class="comment">#a.py will be discussed below</span></span><br><span class="line">cleos wallet lock</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><a href="http://a.py" target="_blank" rel="noopener">a.py</a> is a python script which will export public-key and private key information into file in case it need to be used in the future. It is always required to have both information of public key and private key when starting a node.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file = open(<span class="string">"list"</span>, <span class="string">"r"</span>) </span><br><span class="line">file1 = open(<span class="string">"li_"</span>, <span class="string">"w"</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">li = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file: </span><br><span class="line">li.append(line.replace(<span class="string">'\"'</span>, <span class="string">''</span>).replace(<span class="string">','</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>))</span><br><span class="line">count+=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(count<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">file1.write(li[i])</span><br><span class="line">file.close()</span><br><span class="line">file1.close()</span><br></pre></td></tr></table></figure><blockquote><p>The key start with EOS and longer is <strong>public key</strong>, like EOS5CZwEpiweHHZpEdHYsU9Q1MEk5zTtqfrcg3TefBzTYG9xdw2gC</p><p>The key which is shorter is <strong>private key</strong>, like this: 5Jarc4qfsXqHcivfGc8qWYTGdQJ5CPy8NeyRjfceXopn9dy3hgR</p></blockquote><p><em>Batch clean</em></p><p>Those are some script that will remove everything. It will make the workspace(including wallet, work folder) be initialized.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line">rm -rf <span class="variable">$DATADIR</span>*;</span><br><span class="line"></span><br><span class="line">cleos wallet open</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">cleos wallet unlock --password <span class="variable">$1</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> a; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> a;</span><br><span class="line">cleos wallet remove_key <span class="variable">$a</span> --password <span class="variable">$1</span></span><br><span class="line"><span class="keyword">done</span> &lt; li_</span><br><span class="line">rm li_</span><br><span class="line">rm list</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">cleos wallet lock</span><br></pre></td></tr></table></figure><blockquote><p>It is good to clean every time after experiment, otherwise blocks generated will occupy too many space. It is 0.5s/blocks.</p></blockquote><h4 id="procedure"><a class="markdownIt-Anchor" href="#procedure"></a> Procedure</h4><img alt="Basic procedure" src="https://f5q9jg.bn.files.1drv.com/y4mliL3MZo-_SK5igtd3BDqFS-YkT3YaOVmd-cUxFcdCJDQD0PMnvcbKsLs2SeJutQ9ho3B-tSWCjC_pRp3sAWLpUEFQ9X2_h7DL7Xp0N-NwGtkN1WAl_A7Hz83cpZA4EU4EqURUq9j3petzuFUL3vBssnsJuFLAKFsVaDZ34ymT1rcIMmphV2flpeIvGO7SZZsOCWXxtzZVPi4meg5XPGC5A?width=1280&height=720&cropmode=none" width="100%"><p>This is the basic procedure. The voter account and block generator account are produced by one super account. Generally speaking, the basic idea is voter will vote the producer they like, block producer are connected together. During the runtime, the procedure is:</p><ul><li><p>Firstly, start producer nodes.</p></li><li><p>Next vote</p></li><li><p>When the block producer has enough votes, block producer will go to confirm blocks.</p></li></ul><p>After doing appropriate settings it should start to confirm blocks. I did’t test this part yet.</p><p>If you want or in some situation, you could link super account together like this, but only the one with appropriate public and private key could generate the block. More specifically, only the one has the private key of the public key in the gensis.json can produce block. Other super accounts nodes could only sync.</p><p>The whole structure like this:</p><img alt="Linked structure" src="https://fzq9jg.bn.files.1drv.com/y4mPFY4a8LfbnWohwk35HzA1vDHDQ-CjNYKvRaKxmvLyM40oaDZz6BuFXy6YlJcXsKQ2De1XGM0jRVjCprRnvAs9pD87cLG359wt-xDj-0FpR0TLY_zYwcO1IWDGJKiKQrwiWouefpY1KG5wjiHAUvCNmT1a13oBQedYAB82QLgwRfBw9TB35FMMrx0MCIgJPB2EZVFiBjwt4LeKLQH-g1Viw?width=1280&height=291&cropmode=none" width="100%"><p>You could use the following command to start multiple super account nodes from gensis status and form the structure shown above:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">password = <span class="string">""</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">password = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line">print(<span class="string">"Please include password"</span>)</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Generate gensis.json</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">file1 = open(<span class="string">"li_"</span>, <span class="string">"r"</span>)</span><br><span class="line">temp = file1.readline()</span><br><span class="line">initial_key = file1.readline()</span><br><span class="line">os.system(<span class="string">'rm -f genesis.json'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"genesis.json"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">    json.dump(&#123;<span class="string">'initial_timestamp'</span>:<span class="string">"2018-12-05T08:55:11.000"</span>, <span class="string">'initial_key'</span>: initial_key[:<span class="number">-1</span>], <span class="string">'initial_configuration'</span>:&#123;<span class="string">"max_block_net_usage"</span>: <span class="number">1048576</span>, <span class="string">"target_block_net_usage_pct"</span>: <span class="number">1000</span>, <span class="string">"max_transaction_net_usage"</span>: <span class="number">524288</span>, <span class="string">"base_per_transaction_net_usage"</span>: <span class="number">12</span>, <span class="string">"net_usage_leeway"</span>: <span class="number">500</span>, <span class="string">"context_free_discount_net_usage_num"</span>: <span class="number">20</span>, <span class="string">"context_free_discount_net_usage_den"</span>: <span class="number">100</span>, <span class="string">"max_block_cpu_usage"</span>: <span class="number">100000</span>, <span class="string">"target_block_cpu_usage_pct"</span>: <span class="number">500</span>, <span class="string">"max_transaction_cpu_usage"</span>: <span class="number">50000</span>, <span class="string">"min_transaction_cpu_usage"</span>: <span class="number">100</span>, <span class="string">"max_transaction_lifetime"</span>: <span class="number">3600</span>, <span class="string">"deferred_trx_expiration_window"</span>: <span class="number">600</span>, <span class="string">"max_transaction_delay"</span>: <span class="number">3888000</span>, <span class="string">"max_inline_action_size"</span>: <span class="number">4096</span>, <span class="string">"max_inline_action_depth"</span>: <span class="number">4</span>, <span class="string">"max_authority_depth"</span>: <span class="number">6</span> &#125;,  <span class="string">"initial_chain_id"</span>: <span class="string">"0000000000000000000000000000000000000000000000000000000000000000"</span>&#125;, outfile, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Start gensis</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">ini_port=<span class="number">9000</span></span><br><span class="line">currentport=ini_port</span><br><span class="line">sentstring=<span class="string">'./genesis_start.sh '</span>+<span class="string">'./blockchain'</span>+<span class="string">' '</span>+initial_key[:<span class="number">-1</span>]+<span class="string">' '</span>+temp[:<span class="number">-1</span>]+<span class="string">' '</span>+str(currentport)+<span class="string">' '</span>+str(currentport+<span class="number">100</span>)+<span class="string">' '</span>+str(currentport+<span class="number">101</span>)</span><br><span class="line">os.system(<span class="string">'echo Start gensis'</span>)</span><br><span class="line">os.system(sentstring)</span><br><span class="line">currentport+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">30</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">start nodes</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">22</span>):</span><br><span class="line">private_key = file1.readline()</span><br><span class="line">public_key = file1.readline()</span><br><span class="line">tosend = <span class="string">'./genesis_start.sh '</span>+<span class="string">'./blockchain'</span>+str(i)+<span class="string">' '</span>+public_key[:<span class="number">-1</span>]+<span class="string">' '</span>+private_key[:<span class="number">-1</span>]+<span class="string">' '</span>+str(currentport)+<span class="string">' '</span>+str(currentport+<span class="number">100</span>)+<span class="string">' '</span>+str(currentport+<span class="number">99</span>)</span><br><span class="line">os.system(<span class="string">'echo start node '</span>+ str(i))</span><br><span class="line">os.system(tosend)</span><br><span class="line">currentport+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>For this python code, it first generates the gensis.json. And then it starts nodes in some order(First gensis node, then other super accounts). All public key and private key used is based on the file generated previously. To use it, you have to put the password of the wallet as the first attribute pass in when you run the program. The script did so, in case it needs to deal with sensitive information.</p><p>The follow script is in a file called genesis_start.sh, which is called by the previous python program to start each node:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#$1--datadir $2--Public_key $3--Private_key $4--httpserver $5--p2plisten $6--peer_address</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ] &amp;&amp; [ <span class="variable">$2</span> ] &amp;&amp; [ <span class="variable">$3</span> ] &amp;&amp; [ <span class="variable">$4</span> ] &amp;&amp; [ <span class="variable">$5</span> ] &amp;&amp; [ <span class="variable">$6</span> ]; <span class="keyword">then</span></span><br><span class="line">DATADIR=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">nodeos \</span><br><span class="line">--genesis-json <span class="variable">$DATADIR</span><span class="string">"/../genesis.json"</span> \</span><br><span class="line">--signature-provider <span class="variable">$2</span>=KEY:<span class="variable">$3</span> \</span><br><span class="line">--plugin eosio::producer_plugin \</span><br><span class="line">--plugin eosio::chain_api_plugin \</span><br><span class="line">--plugin eosio::http_plugin \</span><br><span class="line">--plugin eosio::history_api_plugin \</span><br><span class="line">--data-dir <span class="variable">$DATADIR</span><span class="string">"/data"</span> \</span><br><span class="line">--blocks-dir <span class="variable">$DATADIR</span><span class="string">"/blocks"</span> \</span><br><span class="line">--config-dir <span class="variable">$DATADIR</span><span class="string">"/config"</span> \</span><br><span class="line">--producer-name eosio \</span><br><span class="line">--http-server-address 127.0.0.1:<span class="variable">$4</span> \</span><br><span class="line">--p2p-listen-endpoint 127.0.0.1:<span class="variable">$5</span> \</span><br><span class="line">--access-control-allow-origin=* \</span><br><span class="line">--contracts-console \</span><br><span class="line">--http-validate-host=<span class="literal">false</span> \</span><br><span class="line">--verbose-http-errors \</span><br><span class="line">--<span class="built_in">enable</span>-stale-production \</span><br><span class="line">--p2p-peer-address localhost:<span class="variable">$6</span> \</span><br><span class="line">&gt;&gt; <span class="variable">$DATADIR</span><span class="string">"/nodeos.log"</span> 2&gt;&amp;1 &amp; \</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$DATADIR</span><span class="string">"/eosd.pid"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>This script will start a new node by using information given by user and save the running result to file at the datadir given… To use it manually, just use <code>./genesis_start.sh [datadir] [Public_key] [Private_key] [httpserver] [p2plisten] [peer_address]</code></p><blockquote><p>If you get an information of “This is not an executable file”. Just do <code>chmod 777 genesis_start.sh</code></p></blockquote><p>I think those scripts are still useful for the following reason:</p><ul><li>The producer has option about the super account node it reports. It could make the main node not too stressful when lots of submission happens(I guess).</li><li>By modifying them a little bit, they could also be used to generate multiple block producer and voters.</li></ul><p>And I find out only the linked structure will be accepted. It means multiple connections to one super account node is not permitted. More detailed, as the graph show below:<br><img alt="Multi conn not allowed" src="https://fzq8jg.bn.files.1drv.com/y4m9X87KWyMymAB7T60SBAoK0DvuSQsPDRoSqIYl1A-6crJca50nXk36T0G2crGK2PISAJLGzaM5Z-XAVcpQTMwARR8VuQpZlZwz5w7WTmuVQWaD8hEHEt2bmFVH0HJpP_gl5fWdfIaXHw-ZIE8RHQU2slcf3fPLgmnQGZMLvIX8TDnPBUVWLe-JCKBzQtCSqRasTyWT2AmMOPsiUweCl-C9A?width=1280&height=519&cropmode=none" width="100%"></p><blockquote><p>To make the system recognize an account is block producer, it is required to use regproducer like the following. Otherwise it is just a voter.</p></blockquote><h4 id="build-local-test-network"><a class="markdownIt-Anchor" href="#build-local-test-network"></a> Build local test network</h4><blockquote><p>Need to use the EOS (cleos and nodes) compiled from the previous steps. Maybe this is not required. But it seems that eosio.contract is related on eosio main program. The network can not be built when using the software from ubuntu package management on my machine.</p></blockquote><p>Basically, I follow up the guidance from <a href="https://medium.com/coinmonks/guide-to-eos-voting-simulation-4eb7a85bab44" target="_blank" rel="noopener">Guide to EOS voting simulation</a> and the official guidance <a href="https://developers.eos.io/eosio-nodeos/docs/bios-boot-sequence" target="_blank" rel="noopener">BIOS Boot Sequence</a>. Some places has been changed to fit the latest version of EOSIO.</p><p>Before start, you need to initialize wallet by taking the previous steps. And then create some new public and private key pairs. Just do <code>cleos wallet create_key</code>. If you want to see all key pairs, do <code>cleos wallet private_keys</code>.</p><p>Then, create genesis.json and the script used to start producing genesis block.</p><ul><li>Create genesis.json at a property directory.</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"initial_timestamp"</span>: <span class="string">"2018-12-05T08:55:11.000"</span>,</span><br><span class="line">  <span class="attr">"initial_key"</span>: <span class="string">"EOS_PUB_DEV_KEY"</span>,</span><br><span class="line">  <span class="attr">"initial_configuration"</span>: &#123;</span><br><span class="line">    <span class="attr">"max_block_net_usage"</span>: <span class="number">1048576</span>,</span><br><span class="line">    <span class="attr">"target_block_net_usage_pct"</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="attr">"max_transaction_net_usage"</span>: <span class="number">524288</span>,</span><br><span class="line">    <span class="attr">"base_per_transaction_net_usage"</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">"net_usage_leeway"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"context_free_discount_net_usage_num"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">"context_free_discount_net_usage_den"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"max_block_cpu_usage"</span>: <span class="number">100000</span>,</span><br><span class="line">    <span class="attr">"target_block_cpu_usage_pct"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"max_transaction_cpu_usage"</span>: <span class="number">50000</span>,</span><br><span class="line">    <span class="attr">"min_transaction_cpu_usage"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"max_transaction_lifetime"</span>: <span class="number">3600</span>,</span><br><span class="line">    <span class="attr">"deferred_trx_expiration_window"</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">"max_transaction_delay"</span>: <span class="number">3888000</span>,</span><br><span class="line">    <span class="attr">"max_inline_action_size"</span>: <span class="number">4096</span>,</span><br><span class="line">    <span class="attr">"max_inline_action_depth"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"max_authority_depth"</span>: <span class="number">6</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"initial_chain_id"</span>: <span class="string">"0000000000000000000000000000000000000000000000000000000000000000"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Then, create the script used to start the first node and save it as genesis_start.sh.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATADIR=<span class="string">"./blockchain"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DATADIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir -p <span class="variable">$DATADIR</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">nodeos \</span><br><span class="line">--genesis-json <span class="variable">$DATADIR</span><span class="string">"/../genesis.json"</span> \</span><br><span class="line">--signature-provider EOS_PUB_DEV_KEY=KEY:EOS_PRIV_DEV_KEY \</span><br><span class="line">--plugin eosio::producer_plugin \</span><br><span class="line">--plugin eosio::chain_api_plugin \</span><br><span class="line">--plugin eosio::http_plugin \</span><br><span class="line">--plugin eosio::history_api_plugin \</span><br><span class="line">--plugin eosio::history_plugin \</span><br><span class="line">--data-dir <span class="variable">$DATADIR</span><span class="string">"/data"</span> \</span><br><span class="line">--blocks-dir <span class="variable">$DATADIR</span><span class="string">"/blocks"</span> \</span><br><span class="line">--config-dir <span class="variable">$DATADIR</span><span class="string">"/config"</span> \</span><br><span class="line">--producer-name eosio \</span><br><span class="line">--http-server-address 127.0.0.1:8888 \</span><br><span class="line">--p2p-listen-endpoint 127.0.0.1:9010 \</span><br><span class="line">--access-control-allow-origin=* \</span><br><span class="line">--contracts-console \</span><br><span class="line">--http-validate-host=<span class="literal">false</span> \</span><br><span class="line">--verbose-http-errors \</span><br><span class="line">--<span class="built_in">enable</span>-stale-production \</span><br><span class="line">--p2p-peer-address localhost:9011 \</span><br><span class="line">--p2p-peer-address localhost:9012 \</span><br><span class="line">--p2p-peer-address localhost:9013 \</span><br><span class="line">&gt;&gt; <span class="variable">$DATADIR</span><span class="string">"/nodeos.log"</span> 2&gt;&amp;1 &amp; \</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$DATADIR</span><span class="string">"/eosd.pid"</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: The EOS_PUB_DEV_KEY in signature-provider in genesis_start.sh should be the same as the EOS_PUB_DEV_KEY in genesis.json. EOS_PRIV_DEV_KEY is the private key of this public key. Otherwise, you will get the error Not producing block because I don’t have the private key for EOS_PUB_DEV_KEY</p></blockquote><ol><li><strong>Start the first node</strong></li></ol><p>This tutorial is based on v4.2.0, with one node for bios and two nodes as block producers. First start the bios node:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gensis_start.sh</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Deploy</strong> <code>eosio.bios</code> <strong>contract to</strong> <code>eosio</code> <strong>account.</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio build/contracts/eosio.bios</span><br></pre></td></tr></table></figure><div id="3"></div>3. **Create necessary accounts.**<p>The list of accounts required is provided by official:</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; eosio.bpay</span><br><span class="line">&gt; eosio.msig</span><br><span class="line">&gt; eosio.names</span><br><span class="line">&gt; eosio.ram</span><br><span class="line">&gt; eosio.ramfee</span><br><span class="line">&gt; eosio.saving</span><br><span class="line">&gt; eosio.stake</span><br><span class="line">&gt; eosio.token</span><br><span class="line">&gt; eosio.vpay</span><br><span class="line">&gt; eosio.rex</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>Use <code>create account</code> command to create each of them:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos create account eosio eosio.*** EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>Set the</strong> <code>eosio.token</code> <strong>contract</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio.token eos/build/contracts/eosio.token</span><br></pre></td></tr></table></figure><blockquote><p>The eosio.token used should be at the build directory which contains file eosio.token.wasm, otherwise wrong message will be invoked.</p></blockquote><ol start="5"><li><strong>set the</strong> <code>eosio.msig</code> <strong>contract</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos create account eosio eosio.msig EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br><span class="line">cleos <span class="built_in">set</span> contract eosio.msig eos/build/contracts/eosio.msig</span><br></pre></td></tr></table></figure><blockquote><p>The eosio.msig used should be at the build directory which contains file eosio.msig.wasm, otherwise wrong message will be invoked.</p></blockquote><ol start="6"><li><strong>Create and allocate token</strong></li></ol><p>We create and issue 1,000,000,000.0000 tokens and name it ‘SYS’. Then issue to <code>eosio</code> account.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio.token create <span class="string">'&#123;"issuer":"eosio", "maximum_supply": "1000000000.0000 SYS", "can_freeze": 0, "can_recall": 0, "can_whitelist": 0&#125;'</span> -p eosio.token</span><br><span class="line">cleos push action eosio.token issue <span class="string">'&#123;"to":"eosio","quantity":"1000000000.0000 SYS","memo":"issue"&#125;'</span> -p eosio</span><br></pre></td></tr></table></figure><p>To check the balance and stats</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos get currency balance eosio.token eosio</span><br><span class="line">cleos get currency stats eosio.token <span class="string">'SYS'</span></span><br></pre></td></tr></table></figure><ol start="7"><li><strong>Set</strong> <code>eosio.system</code> <strong>contract to</strong> <code>eosio</code></li></ol><p>After setting <code>eosio.system</code> contract we will be able to stake our accounts.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos <span class="built_in">set</span> contract eosio eos/build/contracts/eosio.system</span><br></pre></td></tr></table></figure><p>Then stake tokens and expand the network. <code>cleos</code> stakes 8 KB of RAM on account creation, paid by the account creator.</p><ol start="8"><li><strong>Make</strong> <code>eosio.msig</code> <strong>a privileged account and Initialize system account</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio setpriv <span class="string">'["eosio.msig", 1]'</span> -p eosio@active</span><br><span class="line"></span><br><span class="line">cleos push action eosio init <span class="string">'["0", "4,SYS"]'</span> -p eosio@active</span><br></pre></td></tr></table></figure><blockquote><p>The command initializes the <code>system</code> account with code zero (needed at initialization time)<br>and <code>SYS</code> token with precision 4; precision can range from [0 … 18].</p></blockquote><ol start="9"><li><strong>Create accounts for BPs:</strong> <code>bp1111111111</code> <strong>and</strong> <code>bp2222222222</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system newaccount eosio bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS <span class="string">'1000000.0000 SYS'</span> --stake-net <span class="string">'1000000.0000 SYS'</span> --stake-cpu <span class="string">'1000000.0000 SYS'</span></span><br></pre></td></tr></table></figure><ol start="10"><li><strong>Register BPs</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system regproducer bp1111111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo</span><br></pre></td></tr></table></figure><p>Similarly register <code>bp2222222222</code>. To check producers:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system listproducers</span><br></pre></td></tr></table></figure><p>To start the two producer nodes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodeos -e --genesis-json path/to/genesis.json --producer-name bp1111111111 --private-key <span class="string">'[ "EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo","5K7EY...Hi8Uy61wU1o" ]'</span> --http-server-address 127.0.0.1:8889 --p2plisten-endpoint 127.0.0.1:9877 --p2p-peer-address bios_node_ip:port --plugin eosio::producer_plugin --plugin eosio::chain_api_plugin --plugin eosio::net_api_plugin</span><br></pre></td></tr></table></figure><ol start="11"><li><strong>Create voters accounts:</strong> <code>voter1111111</code><strong>,</strong> <code>voter2222222</code><strong>,</strong> <code>voter3333333</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system newaccount eosio voter1111111 EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo EOS6sAgFvNDfiZ62UMosK7WULNVCuAotpR2raKzaBpopLevvYYWBo --buy-ram-EOS <span class="string">'50.0000 SYS'</span> --stake-net <span class="string">'50.0000 SYS'</span> --stake-cpu <span class="string">'50.0000 SYS'</span></span><br></pre></td></tr></table></figure><ol start="12"><li><strong>Issue tokens to voters</strong></li></ol><p>Transfer 100,000,000 SYS to each voter.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos push action eosio.token transfer <span class="string">'["eosio", "voter1111111","100000000.0000 SYS","vote"]'</span> -p eosio</span><br></pre></td></tr></table></figure><p>Check the balance</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos get currency balance eosio.token voter1111111</span><br></pre></td></tr></table></figure><ol start="13"><li><strong>Delegate bandwidth</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system delegatebw voter1111111 voter1111111 <span class="string">"50000000.0000 SYS"</span> <span class="string">"50000000.0000 SYS"</span></span><br></pre></td></tr></table></figure><blockquote><p>Sometime, the program will tell you failed. But the command successes actually. You could redo <code>cleos get currency balance eosio.token voter1111111</code> to check if this command take effect or not.</p></blockquote><ol start="14"><li><strong>Vote</strong></li></ol><p>Voting for producers can begin as accounts are staked and producers are registered.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleos system voteproducer prods voter1111111 bp1111111111 bp2222222222</span><br></pre></td></tr></table></figure><p>After 15% of the available votes have been voted, block producers will begin producing. In this case we need 150,000,000 votes.</p><ul><li><strong>Check votes:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cleos system listproducers </span><br><span class="line">cleos get table eosio eosio voters</span><br></pre></td></tr></table></figure><p>Some error and solutions I found is at <a href="../common-run-eosio/">here</a>.</p><h4 id="special-notice"><a class="markdownIt-Anchor" href="#special-notice"></a> Special notice</h4><ul><li>EOS.CONTRACT is based on locally compiled EOS.</li><li>To compile EOS locally, it has to use git clone to clone it from github. You can not download from source and compile.</li><li>The compilation requires lots of space. It is good to remain 40GB of disk and 8GB of memory. It also takes around 3 hours to compile.</li><li>They can only be compiled at the current user’s home directory.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Cryptocurrency Application </category>
          
          <category> EOSIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> eosio.contracts </tag>
            
            <tag> eos.cdt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Website for CS425 project</title>
      <link href="/2019/projects/Website%20for%20CS425%20project/"/>
      <url>/2019/projects/Website%20for%20CS425%20project/</url>
      
        <content type="html"><![CDATA[<h3 id="reservation-system-website-application-deployed"><a class="markdownIt-Anchor" href="#reservation-system-website-application-deployed"></a> Reservation system website application deployed</h3><p>The website made by me for my CS425 project has been deployed and works normally at <a href="https://cs425a.azurewebsites.net" target="_blank" rel="noopener">This Website</a>. In webpage browser is at bottom. This app is done solely by me.</p><p>Source code is at <a href="https://github.com/ShaokangJiang/CS425-project/blob/master/README.md" target="_blank" rel="noopener">My Github Page</a></p><p>This is a website made by using SQL as database and <a href="https://materializecss.com/" target="_blank" rel="noopener">Material Theme</a> as layout.</p><h4 id="test-account-information"><a class="markdownIt-Anchor" href="#test-account-information"></a> Test account information:</h4><a id="more"></a><table class="highlight1"><thead><tr><td>id</td><td>priority</td><td>password</td><td>Name</td></tr></thead><tr><td>1</td><td>admin</td><td>123456</td><td></td></tr><tr><td>28</td><td>patient</td><td>456789</td><td>Rebecca Torres</td></tr><tr><td>29</td><td>scheduler</td><td>789456</td><td></td></tr><tr><td>30</td><td>medical staff</td><td>123789</td><td></td></tr></table><h4 id="basic-functions"><a class="markdownIt-Anchor" href="#basic-functions"></a> Basic functions:</h4><h5 id="login"><a class="markdownIt-Anchor" href="#login"></a> Login</h5><p>The application must provide a login portal for user to login. The application will validate the user credentials and privileges. For this project you are only required to provide the implementation of managers.</p><h5 id="privileges"><a class="markdownIt-Anchor" href="#privileges"></a> Privileges</h5><p>1- Users with admin privileges can do the following:</p><p>​ a. Schedule an appointment</p><p>​ b. Create new patient</p><p>​ c. Create a new user account</p><p>​ d. Access the business reporting</p><p>2- Users with Doctor/Staff privileges can do the following:</p><p>​ a. View and update patient record</p><p>​ b. Create an Order</p><p>​ c. View calendar and schedule appointment with medical staff</p><p>3- Users with Patient privileges can do the following:</p><p>​ a. View the orders</p><p>​ b. View bills</p><p>4- Users with Scheduler privileges can do the following:</p><p>​ a. View the orders</p><p>​ b. View bills</p><p>​ c. View calendar and schedule appointment with medical staff</p><h5 id="order-transaction"><a class="markdownIt-Anchor" href="#order-transaction"></a> Order transaction</h5><p>Doctors can order diagnostics for a patient, once the diagnostics are completed and results are available. The system gets updated by medical staff.</p><h5 id="reporting-and-analytics"><a class="markdownIt-Anchor" href="#reporting-and-analytics"></a> Reporting and analytics</h5><p>The admin will have the capability of running business analytics reports that will help them monitor business operations.</p><p>• Total revenue from all diagnostic</p><p>• Total revenue from each doctor visit</p><p>• Allow patient to view their bills, appointment and medical record</p><p>In webpage demo:</p><iframe src="https://cs425a.azurewebsites.net" width="100%" height="500"></iframe>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Website for CS100 project</title>
      <link href="/2017/projects/Website%20for%20CS100%20project/"/>
      <url>/2017/projects/Website%20for%20CS100%20project/</url>
      
        <content type="html"><![CDATA[<h3 id="hatefate-website-application-deployed"><a class="markdownIt-Anchor" href="#hatefate-website-application-deployed"></a> Hatefate website application deployed</h3><p>The website made by me for my CS100 project has been deployed and works normally at <a href="https://hatefate.azurewebsites.net" target="_blank" rel="noopener">This Website</a>. In webpage browser is at bottom.</p><p>Source code is at <a href="https://github.com/ShaokangJiang/CS100Website" target="_blank" rel="noopener">This Github Page</a></p><p>This is a website made by using SQL as database and <a href="https://materializecss.com/" target="_blank" rel="noopener">Material Theme</a> as layout.</p><p>Function included: login via email, login via account name, register, reset password via email, set your favorites, and find people who has the same favorites as you.</p><p>Due to the reason that the domain(<a href="http://huangsk100.me" target="_blank" rel="noopener">huangsk100.me</a>) was expired. This website is for demo only right now. For testing, test account information is as follows:<a id="more"></a></p><table class="highlight1"><tr><td>Username</td><td>Password</td><td>Email</td></tr><tr><td>test</td><td>123456</td><td>123456@example.com</td></tr><tr><td>test01</td><td>123456</td><td>test01@example.com</td></tr><tr><td>test02</td><td>123456</td><td>test02@example.com</td></tr></table><p>Here is the map for this website:Some functions didn’t implement.</p><p><img src="https://github.com/ShaokangJiang/CS100Website/raw/master/wesite%20(2).png" alt=" "></p><p>The in-browser demo:</p><iframe src="https://hatefate.azurewebsites.net" width="100%" height="500"></iframe>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
