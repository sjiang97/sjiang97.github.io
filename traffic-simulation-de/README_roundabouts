See also readme_intersections

w/o less of generality 4-arms roundabout

(1) Interface to users:
======================

* (a) fixed geometry (rather big, 1-lane arms) => .gnu file

* (b) choiceboxes for type of roundabout:
(i) mainroad+2 small secondary arms [1-3=main road, rel OD below:]
    r13=r31=0.30,
    r12=r21=r14=r41=r32=r32=r34=r43=0.04
    r24=r42=0.04

(ii) mainroad+1 secondary arm (second secondary arm 4 has empty traffic)
    r13=r31=0.40,
    r12=r21=r32=r32=0.05

(iii) all 4 arms equal
    rij=1/12 if (i !=j), rii=0

(iv) only right turns
    r12=r23=r34=r41=0.25, all other rij=0

(v) only left turns
    r21=r32=r43=r14=0.25, all other rij=0

* (c) toggle for changing the traffic rules ring priority<->right priority

* (d) slider for overall traffic flow (sum of OD) and the usual other sliders


(2) Road network
================

link 1: ring with 4 onramps, 4 offramps, empty IC, special provision
        for offramp over "ring seam"
	
links 2-3,4-5,6-7,8-9: 2 links per arm, empty IC

geometry link 1: circle radius r, center (0,0), roadwidth w<r

geometry link 2: (in, west) length3*r => .gnu file

geometry links 3-9: similar => .gnu file

(3) sources and routes
======================

each source at link 2,4,6,8 has 3 routes:

OD	route
12	2-1-5
13	2-1-7
14	2-1-9
21	4-1-3
23	4-1-7
24	4-1-9
31	6-1-3
32	6-1-5
34	6-1-9
41	8-1-3
42	8-1-5
43	8-1-7


(4) models
==========

link 1: v01=min(v0, sqrt(b*r)), no restriction @ offramps

links 2,4,6,8:
  slider-controlled v0 for arclength s<length-pi/4*r1-(v02^2-v01^2)/2b, 
  v01 otherwise,
  ramp of length pi/4*r1 starting at s=length-3/8*pi*r1
  and ending at s=length-1/8*pi*r1 (rest of link just for
  graph. purposes)
  separate logical lane change (starting at s=length-3/8*pi*r1) from
  optical change: Only if new mainroad vehicle arrives at
  s_link1=pi/4*r1 corresponding  to s_link2=length
  s_link1=pi/2*r+pi/4*r1 corresponding  to s_link4=length
  ...
  otherwise use new method drawVehicleAtLink(l,s)

links 3,5,7,9:
  v01 for arclength s<pi/4*r1
  slider-controlled v0 otherwise

Done!
